openapi: 3.0.2
info:
  description: Candlepin is a subscription management server written in Java. It helps
    with management of software subscriptions.
  title: Candlepin
  version: 4.4.12
servers:
- url: /candlepin
security:
- basicAuth: []
paths:
  /:
    get:
      description: Retrieves a list of links corresponding to Root resources
      operationId: getRootResources
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Link'
                type: array
          description: OK
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - root
      x-java-response:
        type: Iterable
        isContainer: true
  /admin/init:
    get:
      deprecated: true
      description: |
        Deprecated. Formerly used to finish deployment by creating a default admin user in select
        environments, but no longer performs any action. Will be removed entirely in a future release.
      operationId: initialize
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: always returns a 200
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - admin
  /admin/queues:
    get:
      description: Basic information on the ActiveMQ queues and how many messages
        are pending in each.
      operationId: getQueueStats
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/QueueStatus'
                type: array
          description: Queue stats successfully retrieved.
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - admin
      x-java-response:
        type: Iterable
        isContainer: true
  /activation_keys:
    get:
      description: Retrieves a list of activation keys
      operationId: findActivationKey
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ActivationKeyDTO'
                type: array
          description: List of activation keys
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - activation_key
      x-java-response:
        type: java.util.stream.Stream
        isContainer: true
  /activation_keys/{activation_key_id}:
    delete:
      description: Deletes an activation key
      operationId: deleteActivationKey
      parameters:
      - description: The ID of the activation key to be deleted
        explode: false
        in: path
        name: activation_key_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: A successful operation
        "400":
          content:
            application/json:
              example:
                displayMessage: "Activation key ID is null, empty or could not be\
                  \ found"
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: "Activation key ID is null, empty or could not be found"
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - activation_key
    get:
      description: Retrieves a single activation key
      operationId: getActivationKey
      parameters:
      - description: The ID of the activation key to retrieve
        explode: false
        in: path
        name: activation_key_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivationKeyDTO'
          description: Activation key
        "400":
          content:
            application/json:
              example:
                displayMessage: "Activation key ID is null, empty or could not be\
                  \ found"
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: "Activation key ID is null, empty or could not be found"
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - activation_key
    put:
      description: Updates an Activation Key
      operationId: updateActivationKey
      parameters:
      - description: The ID of the activation key to be updated
        explode: false
        in: path
        name: activation_key_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivationKeyDTO'
        description: Activation key to be updated
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivationKeyDTO'
          description: Updated the activation key
        "400":
          content:
            application/json:
              example:
                displayMessage: "Invalid inputs, could not update activation key"
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: "Invalid inputs, could not update activation key"
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - activation_key
  /activation_keys/{activation_key_id}/content_overrides:
    delete:
      description: Deletes a list of Content Overrides
      operationId: deleteActivationKeyContentOverrides
      parameters:
      - description: The ID of the activation key
        explode: false
        in: path
        name: activation_key_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ContentOverrideDTO'
              type: array
        description: The list of the content overrides
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ContentOverrideDTO'
                type: array
          description: List of the deleted content overrides of the Activation Key
        "400":
          content:
            application/json:
              example:
                displayMessage: ActivationKey with id test_id could not be found.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: ActivationKey with id test_id could not be found.
        "403":
          content:
            application/json:
              example:
                displayMessage: Insufficient permissions
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Insufficient permissions
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - activation_key
      x-java-response:
        type: java.util.stream.Stream
        isContainer: true
    get:
      description: Retrieves list of Content Overrides
      operationId: listActivationKeyContentOverrides
      parameters:
      - description: The ID of the activation key
        explode: false
        in: path
        name: activation_key_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ContentOverrideDTO'
                type: array
          description: List of content overrides of the Activation Key
        "400":
          content:
            application/json:
              example:
                displayMessage: ActivationKey with id test_id could not be found.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: ActivationKey with id test_id could not be found.
        "403":
          content:
            application/json:
              example:
                displayMessage: Insufficient permissions
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Insufficient permissions
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - activation_key
      x-java-response:
        type: java.util.stream.Stream
        isContainer: true
    put:
      description: Adds or Updates a list of Content Overrides
      operationId: addActivationKeyContentOverrides
      parameters:
      - description: The ID of the activation key
        explode: false
        in: path
        name: activation_key_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ContentOverrideDTO'
              type: array
        description: The list of the content overrides
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ContentOverrideDTO'
                type: array
          description: List of the created/update content overrides of the Activation
            Key
        "400":
          content:
            application/json:
              example:
                displayMessage: ActivationKey with id test_id could not be found.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: ActivationKey with id test_id could not be found.
        "403":
          content:
            application/json:
              example:
                displayMessage: Insufficient permissions
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Insufficient permissions
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - activation_key
      x-java-response:
        type: java.util.stream.Stream
        isContainer: true
  /activation_keys/{activation_key_id}/pools:
    get:
      description: Retrieves a list of pools based on the activation key
      operationId: getActivationKeyPools
      parameters:
      - description: The ID of the activation key
        explode: false
        in: path
        name: activation_key_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PoolDTO'
                type: array
          description: List of pools based on the Activation Key
        "400":
          content:
            application/json:
              example:
                displayMessage: "Activation key ID is null, empty or could not be\
                  \ found"
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: "Activation key ID is null, empty or could not be found"
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - activation_key
      x-java-response:
        type: Iterable
        isContainer: true
  /activation_keys/{activation_key_id}/pools/{pool_id}:
    delete:
      description: Removes a Pool from an Activation Key
      operationId: removePoolFromKey
      parameters:
      - description: The ID of the activation key
        explode: false
        in: path
        name: activation_key_id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of a pool to be removed
        explode: false
        in: path
        name: pool_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivationKeyDTO'
          description: Pool removed from activation key
        "400":
          content:
            application/json:
              example:
                displayMessage: "Invalid inputs, pool could not be removed from activation\
                  \ key"
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: "Invalid inputs, pool could not be removed from activation\
            \ key"
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - activation_key
    post:
      description: Adds a Pool to an Activation Key
      operationId: addPoolToKey
      parameters:
      - description: ID of the activation key
        explode: false
        in: path
        name: activation_key_id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the pool
        explode: false
        in: path
        name: pool_id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: quantity
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivationKeyDTO'
          description: Pool added to activation key
        "400":
          content:
            application/json:
              example:
                displayMessage: "Invalid inputs, pool could not be added to activation\
                  \ key"
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: "Invalid inputs, pool could not be added to activation key"
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - activation_key
  /activation_keys/{activation_key_id}/product/{product_id}:
    delete:
      description: Removes a Product ID from an Activation Key
      operationId: removeProductIdFromKey
      parameters:
      - description: The ID of the activation key
        explode: false
        in: path
        name: activation_key_id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the product
        explode: false
        in: path
        name: product_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivationKeyDTO'
          description: Product ID removed from activation key
        "400":
          content:
            application/json:
              example:
                displayMessage: "Invalid inputs, product ID could not remove from\
                  \ activation key"
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: "Invalid inputs, product ID could not remove from activation\
            \ key"
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - activation_key
    post:
      description: Adds an Product ID to an Activation Key
      operationId: addProductIdToKey
      parameters:
      - description: ID of the activation key
        explode: false
        in: path
        name: activation_key_id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the product
        explode: false
        in: path
        name: product_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivationKeyDTO'
          description: Product ID added to an activation key
        "400":
          content:
            application/json:
              example:
                displayMessage: "Invalid inputs, product ID could not be added to\
                  \ activation key"
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: "Invalid inputs, product ID could not be added to activation\
            \ key"
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - activation_key
  /cloud/authorize:
    post:
      description: Verifies provided cloud registration data and returns an authentication
        token. By default the token is valid for 10 minutes
      operationId: cloudAuthorize
      parameters:
      - description: Version of cloud authentication
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudRegistrationDTO'
        description: Cloud registration data
        required: true
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                $ref: '#/components/schemas/CloudAuthenticationResultDTO'
          description: "Cloud authorization successful. When the version of authorization\
            \ requested is 2, application/json is returned that contains a JWT token\
            \ amongst other data. Otherwise, only a JWT token in text/plain format\
            \ is returned."
        "400":
          content:
            application/json:
              example:
                displayMessage: CloudRegistrationInfo is null
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: CloudRegistrationInfo is null
        "401":
          content:
            application/json:
              example:
                displayMessage: Cloud provider or account details could not be resolved
                  to an organization
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Cloud provider or account details could not be resolved to
            an organization
        "501":
          content:
            application/json:
              example:
                displayMessage: Cloud registration is not supported by this Candlepin
                  instance
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Cloud registration is not supported by this Candlepin instance
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - cloud_registration
      x-java-response:
        type: javax.ws.rs.core.Response
        isContainer: false
  /cloud/consumers/anonymous:
    delete:
      description: Removes Anonymous Consumers (for testing purposes only)
      operationId: deleteAnonymousConsumersByAccountId
      parameters:
      - description: The ID of the Cloud Account
        explode: true
        in: query
        name: cloud_account_id
        required: true
        schema:
          type: string
        style: form
      responses:
        "204":
          description: A successful operation.
        "403":
          content:
            application/json:
              example:
                displayMessage: Anonymous Consumers could not be deleted due to insufficient
                  permissions.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Anonymous Consumers could not be deleted due to insufficient
            permissions.
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - cloud_registration
  /cloud/jobs/orgsetup/{cloud_account_id}:
    delete:
      description: Cancels all jobs associated with the specified cloud account ID
        (for testing purpose only)
      operationId: cancelCloudAccountJobs
      parameters:
      - description: The ID of the cloud account
        explode: false
        in: path
        name: cloud_account_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: List of ids for jobs associated with the cloud account id that
            were cancelled.
        "400":
          content:
            application/json:
              example:
                displayMessage: Cloud account ID is null or empty.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Cloud account ID is null or empty
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - cloud_registration
  /consumers:
    get:
      description: Retrieves a list of the Consumers according to search criteria.
      operationId: searchConsumers
      parameters:
      - description: Username
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: Consumer type
        explode: true
        in: query
        name: type
        required: false
        schema:
          items:
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Owner key
        explode: true
        in: query
        name: owner
        required: false
        schema:
          type: string
        style: form
      - description: The UUID of consumers
        explode: true
        in: query
        name: uuid
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Hypervisor IDs
        explode: true
        in: query
        name: hypervisor_id
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Registration Authentication Method
        explode: true
        in: query
        name: registration_authentication_method
        required: false
        schema:
          type: string
        style: form
      - description: The consumer facts
        explode: true
        in: query
        name: fact
        required: false
        schema:
          items:
            format: key:value
            type: string
          type: array
        style: form
      - description: Page index to return
        explode: true
        in: query
        name: page
        required: false
        schema:
          example: 2
          type: integer
        style: form
      - description: Number of items to return per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          example: 10
          type: integer
        style: form
      - description: Direction of ordering
        explode: true
        in: query
        name: order
        required: false
        schema:
          example: asc
          type: string
        style: form
      - description: Property to use for ordering
        explode: true
        in: query
        name: sort_by
        required: false
        schema:
          example: name
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ConsumerDTOArrayElement'
                type: array
          description: List of consumers
        "400":
          content:
            application/json:
              example:
                displayMessage: Must specify at least one search criteria.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Must specify at least one search criteria.
        "404":
          content:
            application/json:
              example:
                displayMessage: Owner with this key could not be found.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Owner with this key could not be found.
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - consumer
      x-java-response:
        type: java.util.stream.Stream
        isContainer: true
    post:
      description: "Creates a Consumer. This method is available to everyone, as we\
        \ have nothing we can reliably verify in the method signature. Instead we\
        \ have to figure out what owner this consumer is destined for (due to backward\
        \ compatability with existing clients which do not specify an owner during\
        \ registration) and then check the access to the specified owner in the method\
        \ itself."
      operationId: createConsumer
      parameters:
      - description: User name
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: Owner key
        explode: true
        in: query
        name: owner
        required: false
        schema:
          type: string
        style: form
      - description: Activation key
        explode: true
        in: query
        name: activation_keys
        required: false
        schema:
          type: string
        style: form
      - description: Boolean flag for identity cert generation.
        explode: true
        in: query
        name: identity_cert_creation
        required: false
        schema:
          default: true
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsumerDTO'
        description: Consumer to be created
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsumerDTO'
          description: Consumer successfully created.
        "400":
          content:
            application/json:
              example:
                displayMessage: One or more constraint validation has failed. | Consumer
                  type must be specified or it is of invalid type. | Organization
                  is not specified or does not exists.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: One or more constraint validation has failed. | Consumer type
            must be specified or it is of invalid type. | Organization is not specified
            or does not exists.
        "403":
          content:
            application/json:
              example:
                displayMessage: Insufficient permissions.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Insufficient permissions.
        "404":
          content:
            application/json:
              example:
                displayMessage: Owner with this key could not be found.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Owner with this key could not be found.
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - consumer
  /consumers/compliance:
    get:
      description: Retrieves a Compliance Status list for a list of Consumers.
      operationId: getComplianceStatusList
      parameters:
      - description: Consumers UUIDs
        explode: true
        in: query
        name: uuid
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  $ref: '#/components/schemas/ComplianceStatusDTO'
                type: object
          description: Returns a map of consumer UUIDs & compliance status
        "400":
          content:
            application/json:
              example:
                displayMessage: Consumer does not have a defined type ID.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Consumer does not have a defined type ID.
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - consumer
  /consumers/exists:
    post:
      description: Checks for the existence of a Consumer in bulk. This API return
        UUIDs of non-existing consumer.
      operationId: consumerExistsBulk
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
              uniqueItems: true
        description: Array of Consumer UUIDs
      responses:
        "204":
          description: Consumers exist for all provided UUIDs
        "400":
          content:
            application/json:
              example:
                displayMessage: No UUIDs provided
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: No UUIDs provided
        "404":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: Non-existing consumer UUIDs
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - consumer
      x-java-response:
        type: javax.ws.rs.core.Response
        isContainer: false
  /consumers/{consumer_uuid}:
    delete:
      description: Removes a Consumer
      operationId: deleteConsumer
      parameters:
      - description: The UUID of the Consumer
        explode: false
        in: path
        name: consumer_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: A successful operation.
        "403":
          content:
            application/json:
              example:
                displayMessage: Consumer could not be deleted due to insufficient
                  permissions.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Consumer could not be deleted due to insufficient permissions.
        "410":
          content:
            application/json:
              example:
                displayMessage: Consumer with this UUID is already deleted.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Consumer with this UUID is already deleted.
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - consumer
    get:
      description: Retrieves a single Consumer
      operationId: getConsumer
      parameters:
      - description: Consumer UUID
        explode: false
        in: path
        name: consumer_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsumerDTO'
          description: Returns single consumer.
        "404":
          content:
            application/json:
              example:
                displayMessage: Consumer with this UUID could not be found.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Consumer with this UUID could not be found.
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - consumer
    post:
      description: Retrieves a single Consumer & regenerate identity certificates
      operationId: regenerateIdentityCertificates
      parameters:
      - description: Consumer UUID
        explode: false
        in: path
        name: consumer_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsumerDTO'
          description: Returns consumer with regenerated Identity certs.
        "400":
          content:
            application/json:
              example:
                displayMessage: Consumer type validation failed or Problem regenerating
                  ID cert for this unit.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Consumer type validation failed or Problem regenerating ID
            cert for this unit.
        "404":
          content:
            application/json:
              example:
                displayMessage: Consumer with this UUID could not be found.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Consumer with this UUID could not be found.
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - consumer
    put:
      description: Updates a Consumer
      operationId: updateConsumer
      parameters:
      - description: The UUID of the Consumer
        explode: false
        in: path
        name: consumer_uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsumerDTO'
        description: Consumer to be updated
        required: true
      responses:
        "200":
          description: Successful operation
        "400":
          content:
            application/json:
              example:
                displayMessage: One or more constraint validation has failed. Problem
                  updating consumer.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: One or more constraint validation has failed. Problem updating
            consumer.
        "404":
          content:
            application/json:
              example:
                displayMessage: Consumer with this UUID could not be found.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Consumer with this UUID could not be found.
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - consumer
  /consumers/{consumer_uuid}/accessible_content:
    get:
      description: Retrieves the body of the Content Access Certificate for the Consumer
      operationId: getContentAccessBody
      parameters:
      - description: The UUID of the consumer
        explode: false
        in: path
        name: consumer_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Modified date. Accepted format EEE, dd MMM yyyy HH:mm:ss z"
        explode: false
        in: header
        name: If-Modified-Since
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: A successful operation.
        "304":
          content:
            application/json:
              example:
                displayMessage: Not modified since date supplied.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Not modified since date supplied.
        "400":
          content:
            application/json:
              example:
                displayMessage: "Unable to parse modified date. Accepted format \"\
                  EEE, dd MMM yyyy HH:mm:ss z\" | Cannot retrieve content access certificat."
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: "Unable to parse modified date. Accepted format \"EEE, dd MMM\
            \ yyyy HH:mm:ss z\" | Cannot retrieve content access certificate."
        "404":
          content:
            application/json:
              example:
                displayMessage: Consumer with this UUID could not be found.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Consumer with this UUID could not be found.
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - consumer
      x-java-response:
        type: javax.ws.rs.core.Response
        isContainer: false
  /consumers/{consumer_uuid}/certificates:
    get:
      description: Retrieves a list or a compressed file (depends on accept header)
        of entitlement certificates for the consumer.
      operationId: exportCertificates
      parameters:
      - description: The UUID of the consumer to retrieve guest
        explode: false
        in: path
        name: consumer_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: Certificate serials
        explode: true
        in: query
        name: serials
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: object
            application/zip:
              schema:
                format: binary
                type: string
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateDTO'
          description: A successful operation
        "400":
          content:
            application/json:
              example:
                displayMessage: Consumer is null or does not have a defined type ID
                  or Consumer is not associated with a valid type.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Consumer is null or does not have a defined type ID or Consumer
            is not associated with a valid type.
        "404":
          content:
            application/json:
              example:
                displayMessage: Consumer with this UUID could not be found.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Consumer with this UUID could not be found.
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - consumer
    put:
      description: Regenerates the Entitlement Certificates for a Consumer
      operationId: regenerateEntitlementCertificates
      parameters:
      - description: The UUID of the Consumer
        explode: false
        in: path
        name: consumer_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: Entitlement ID
        explode: true
        in: query
        name: entitlement
        required: false
        schema:
          type: string
        style: form
      - description: Lazy regeneration of entitlement certs
        explode: true
        in: query
        name: lazy_regen
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: |
          Whether or not to remove unnecessary or unused entitlements for the consumer before regenerating
          certificates
        explode: true
        in: query
        name: cleanup_entitlements
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "204":
          description: Successful operation
        "400":
          content:
            application/json:
              example:
                displayMessage: Consumer does not have a defined type ID. Invalid
                  consumer type.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Consumer does not have a defined type ID. Invalid consumer
            type.
        "404":
          content:
            application/json:
              example:
                displayMessage: Consumer with this UUID could not be found Or Entitlement
                  with this ID could not befound.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Consumer with this UUID could not be found Or Entitlement with
            this ID could not be found.
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - consumer
  /consumers/{consumer_uuid}/compliance:
    get:
      description: Retrieves the Compliance Status of a Consumer.
      operationId: getComplianceStatus
      parameters:
      - description: Consumer UUID
        explode: false
        in: path
        name: consumer_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Date to get compliance information for, default is now."
        explode: true
        in: query
        name: on_date
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComplianceStatusDTO'
          description: Returns the Compliance Status of a Consumer.
        "404":
          content:
            application/json:
              example:
                displayMessage: Consumer with this UUID could not be found.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Consumer with this UUID could not be found.
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - consumer
  /consumers/{consumer_uuid}/content_access:
    get:
      description: Retrieves content access of a Consumer
      operationId: getContentAccessForConsumer
      parameters:
      - description: Consumer UUID
        explode: false
        in: path
        name: consumer_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentAccessDTO'
          description: Returns content access of a Consumer.
        "404":
          content:
            application/json:
              example:
                displayMessage: Consumer with this UUID could not be found.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Consumer with this UUID could not be found.
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - consumer
  /consumers/{consumer_uuid}/content_overrides:
    delete:
      description: Deletes a list of Content Overrides
      operationId: deleteConsumerContentOverrides
      parameters:
      - description: The ID of the Consumer
        explode: false
        in: path
        name: consumer_uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ContentOverrideDTO'
              type: array
        description: The list of the content overrides
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ContentOverrideDTO'
                type: array
          description: List of the deleted content overrides of the Consumer
        "403":
          content:
            application/json:
              example:
                displayMessage: Insufficient permissions.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Insufficient permissions.
        "404":
          content:
            application/json:
              example:
                displayMessage: Consumer with this UUID could not be found.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Consumer with this UUID could not be found.
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - consumer
      x-java-response:
        type: java.util.stream.Stream
        isContainer: true
    get:
      description: Retrieves list of Content Overrides
      operationId: listConsumerContentOverrides
      parameters:
      - description: The ID of the consumer
        explode: false
        in: path
        name: consumer_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ContentOverrideDTO'
                type: array
          description: List of content overrides of the Consumer.
        "403":
          content:
            application/json:
              example:
                displayMessage: Insufficient permissions.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Insufficient permissions.
        "404":
          content:
            application/json:
              example:
                displayMessage: Consumer with this UUID could not be found.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Consumer with this UUID could not be found.
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - consumer
      x-java-response:
        type: java.util.stream.Stream
        isContainer: true
    put:
      description: Adds or Updates a list of Content Overrides
      operationId: addConsumerContentOverrides
      parameters:
      - description: The ID of the Consumer
        explode: false
        in: path
        name: consumer_uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ContentOverrideDTO'
              type: array
        description: The list of the content overrides
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ContentOverrideDTO'
                type: array
          description: List of the created/update content overrides of the Consumer
        "400":
          content:
            application/json:
              example:
                displayMessage: The content labels are invalid. The content properties
                  cannot be overridden. The override values are invalid.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: |
            The content labels are invalid.
            The content properties cannot be overridden.
            The override values are invalid.
        "403":
          content:
            application/json:
              example:
                displayMessage: Insufficient permissions.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Insufficient permissions.
        "404":
          content:
            application/json:
              example:
                displayMessage: Consumer with this UUID could not be found.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Consumer with this UUID could not be found.
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - consumer
      x-java-response:
        type: java.util.stream.Stream
        isContainer: true
  /consumers/{consumer_uuid}/deletionrecord:
    delete:
      description: "Removes the Deletion Record for a Consumer Allowed for a superadmin.\
        \ The main use case for this would be if a user accidently deleted a non-RHEL\
        \ hypervisor, causing it to no longer be auto-detected via virt-who."
      operationId: removeDeletionRecord
      parameters:
      - description: The UUID of the Consumer
        explode: false
        in: path
        name: consumer_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: A successful operation.
        "404":
          content:
            application/json:
              example:
                displayMessage: Deletion record for hypervisor is not found.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Deletion record for hypervisor is not found.
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - consumer
  /consumers/{consumer_uuid}/entitlements:
    delete:
      description: Unbinds all Entitlements for a Consumer. The result contains the
        total number of entitlements unbound.
      operationId: unbindAll
      parameters:
      - description: The UUID of the Consumer
        explode: false
        in: path
        name: consumer_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResult'
          description: The total number of revoked entitlements
        "404":
          content:
            application/json:
              example:
                displayMessage: Consumer with this UUID could not be found.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Consumer with this UUID could not be found.
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - consumer
    get:
      description: Retrieves a list of Entitlements. This endpoint supports paging
        with query parameters.
      operationId: listEntitlements
      parameters:
      - description: Consumer UUID
        explode: false
        in: path
        name: consumer_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: ID of a Product
        explode: true
        in: query
        name: product
        required: false
        schema:
          type: string
        style: form
      - description: Boolean flag to regenerate entitlements
        explode: true
        in: query
        name: regen
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: Attribute filters
        explode: true
        in: query
        name: attribute
        required: false
        schema:
          items:
            format: key:value
            type: string
          type: array
        style: form
      - description: Page index to return
        explode: true
        in: query
        name: page
        required: false
        schema:
          example: 2
          type: integer
        style: form
      - description: Number of items to return per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          example: 10
          type: integer
        style: form
      - description: Direction of ordering
        explode: true
        in: query
        name: order
        required: false
        schema:
          example: asc
          type: string
        style: form
      - description: Property to use for ordering
        explode: true
        in: query
        name: sort_by
        required: false
        schema:
          example: name
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EntitlementDTO'
                type: array
          description: A list of entitlements
        "400":
          content:
            application/json:
              example:
                displayMessage: Product with this ID could not be found.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Product with this ID could not be found.
        "404":
          content:
            application/json:
              example:
                displayMessage: Consumer with this  UUID could not be found.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Consumer with this  UUID could not be found.
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - consumer
    post:
      description: "If a pool ID is specified, we know we're binding to that exact\
        \ pool. Specifying an entitle date in this case makes no sense and will throw\
        \ an error. If a list of product IDs are specified, we attempt to auto-bind\
        \ to subscriptions which will provide those products. An optional date can\
        \ be specified allowing the consumer to get compliant for some date in the\
        \ future. If no date is specified we assume the current date. If neither a\
        \ pool nor an ID is specified, this is a healing request. The path is similar\
        \ to the bind by products, but in this case we use the installed products\
        \ on the consumer, and their current compliant status, to determine which\
        \ product IDs should be requested. The entitle date is used the same as with\
        \ bind by products. The response will contain a list of Entitlement objects\
        \ if async is false, or a JobDetail object if async is true"
      operationId: bind
      parameters:
      - description: Consumer UUID
        explode: false
        in: path
        name: consumer_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: Pool ID
        explode: true
        in: query
        name: pool
        required: false
        schema:
          type: string
        style: form
      - description: Product array
        explode: true
        in: query
        name: product
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Quantity
        explode: true
        in: query
        name: quantity
        required: false
        schema:
          type: integer
        style: form
      - description: Email address
        explode: true
        in: query
        name: email
        required: false
        schema:
          type: string
        style: form
      - description: Email locale
        explode: true
        in: query
        name: email_locale
        required: false
        schema:
          type: string
        style: form
      - description: Operation Type async or sync
        explode: true
        in: query
        name: async
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Entitlement date
        explode: true
        in: query
        name: entitle_date
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: From pool
        explode: true
        in: query
        name: from_pool
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: A successful operation
        "400":
          content:
            application/json:
              example:
                displayMessage: "Invalid date, must use ISO 8601 format | Cannot bind\
                  \ by multiple parameters | Cannot specify a quantity when auto-binding.\
                  \ | Ignoring request to auto-attach. It is disabled for org because\
                  \ of the content access mode setting or hypervisor autobind setting."
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: "Invalid date, must use ISO 8601 format | Cannot bind by multiple\
            \ parameters | Cannot specify a quantity when auto-binding. | Ignoring\
            \ request to auto-attach. It is disabled for org because of the content\
            \ access mode setting or hypervisor autobind setting."
        "404":
          content:
            application/json:
              example:
                displayMessage: Consumer with this UUID could not be found.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Consumer with this UUID could not be found.
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - consumer
      x-java-response:
        type: javax.ws.rs.core.Response
        isContainer: false
  /consumers/{consumer_uuid}/exists:
    head:
      description: Checks for the existence of a Consumer.
      operationId: consumerExists
      parameters:
      - description: The UUID of the Consumer
        explode: false
        in: path
        name: consumer_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Successful Operation.
        "404":
          content:
            application/json:
              example:
                displayMessage: Consumer with this UUID could not be found.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Consumer with this UUID could not be found.
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - consumer
  /consumers/{consumer_uuid}/export:
    get:
      description: Retrieves a Compressed File representation of a Consumer (manifest).
      operationId: exportData
      parameters:
      - description: The UUID of the target consumer.
        explode: false
        in: path
        name: consumer_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: The label of the target CDN.
        explode: true
        in: query
        name: cdn_label
        required: false
        schema:
          type: string
        style: form
      - description: The URL pointing to the manifest's originating web application.
        explode: true
        in: query
        name: webapp_prefix
        required: false
        schema:
          type: string
        style: form
      - description: The URL pointing to the manifest's originating candlepin API.
        explode: true
        in: query
        name: api_url
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/zip:
              schema:
                format: binary
                type: string
          description: A successful operation
        "400":
          content:
            application/json:
              example:
                displayMessage: Consumer is null or does not have a defined type ID
                  or Consumer is not associated with a valid type
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Consumer is null or does not have a defined type ID or Consumer
            is not associated with a valid type
        "403":
          content:
            application/json:
              example:
                displayMessage: Unit cannot be exported. | A manifest cannot be made
                  for units this type. | A CDN with this label does not exist on this
                  system.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Unit cannot be exported. | A manifest cannot be made for units
            this type. | A CDN with this label does not exist on this system.
        "404":
          content:
            application/json:
              example:
                displayMessage: Consumer with this UUID could not be found.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Consumer with this UUID could not be found.
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - consumer
  /consumers/{consumer_uuid}/guests:
    get:
      description: Retrieves a list of Guest Consumers of a Consumer
      operationId: getGuests
      parameters:
      - description: Consumer UUID
        explode: false
        in: path
        name: consumer_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ConsumerDTOArrayElement'
                type: array
          description: Returns the list of consumers
        "400":
          content:
            application/json:
              example:
                displayMessage: The system with this UUID is a virtual guest. It does
                  not have guests.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: The system with this UUID is a virtual guest. It does not have
            guests.
        "404":
          content:
            application/json:
              example:
                displayMessage: Consumer with this UUID could not be found.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Consumer with this UUID could not be found.
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - consumer
  /consumers/{consumer_uuid}/guestids:
    get:
      description: Retrieves the list of a Consumer's Guests
      operationId: getGuestIds
      parameters:
      - explode: false
        in: path
        name: consumer_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GuestIdDTOArrayElement'
                type: array
          description: A successful operation
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - guest_ids
      x-java-response:
        type: java.util.stream.Stream
        isContainer: true
    put:
      description: Updates the list of guests on a consumer.
      operationId: updateGuests
      parameters:
      - description: The UUID of the consumer who owns or hosts the guest
        explode: false
        in: path
        name: consumer_uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/GuestIdDTO'
              type: array
        description: The list of the guests to be updated
        required: true
      responses:
        "200":
          description: A successful operation
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - guest_ids
  /consumers/{consumer_uuid}/host:
    get:
      description: Retrieves a Host Consumer of a Consumer
      operationId: getHost
      parameters:
      - description: Consumer UUID
        explode: false
        in: path
        name: consumer_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsumerDTO'
          description: Returns Host Consumer of a Consumer
        "400":
          content:
            application/json:
              example:
                displayMessage: The system with this UUID is not a virtual guest.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: The system with this UUID is not a virtual guest.
        "404":
          content:
            application/json:
              example:
                displayMessage: Consumer with this UUID could not be found.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Consumer with this UUID could not be found.
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - consumer
  /consumers/{consumer_uuid}/owner:
    get:
      description: Retrieves the Owner associated to a Consumer
      operationId: getOwnerByConsumerUuid
      parameters:
      - description: Consumer UUID
        explode: false
        in: path
        name: consumer_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OwnerDTO'
          description: A successful operation
        "400":
          content:
            application/json:
              example:
                displayMessage: OwnerId is null or owner not found for this ID.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: OwnerId is null or owner not found for this ID.
        "404":
          content:
            application/json:
              example:
                displayMessage: Consumer with this UUID could not be found.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Consumer with this UUID could not be found.
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - consumer
  /consumers/{consumer_uuid}/purpose_compliance:
    get:
      description: Retrieves the System Purpose Compliance Status of a Consumer.
      operationId: getSystemPurposeComplianceStatus
      parameters:
      - description: Consumer UUID
        explode: false
        in: path
        name: consumer_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: "Date to get compliance information for, default is now."
        explode: true
        in: query
        name: on_date
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemPurposeComplianceStatusDTO'
          description: Returns the System Purpose Compliance Status of a Consumer.
        "404":
          content:
            application/json:
              example:
                displayMessage: Consumer with this UUID could not be found.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Consumer with this UUID could not be found.
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - consumer
  /consumers/{consumer_uuid}/release:
    get:
      description: Retrieves the release of a consumer
      operationId: getRelease
      parameters:
      - description: Consumer UUID
        explode: false
        in: path
        name: consumer_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseVerDTO'
          description: Returns the release of a consumer
        "404":
          content:
            application/json:
              example:
                displayMessage: Consumer with this UUID could not be found
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Consumer with this UUID could not be found
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - consumer
  /consumers/{consumer_uuid}/export/async:
    get:
      description: Initiates an async generation of a Compressed File representation
        of a Consumer (manifest). The response will contain the id of the job from
        which its result data will contain the href to download the generated file.
      operationId: exportDataAsync
      parameters:
      - description: The UUID of the target consumer.
        explode: false
        in: path
        name: consumer_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: The lable of the target CDN.
        explode: true
        in: query
        name: cdn_label
        required: false
        schema:
          type: string
        style: form
      - description: The URL pointing to the manifest's originating web application.
        explode: true
        in: query
        name: webapp_prefix
        required: false
        schema:
          type: string
        style: form
      - description: The URL pointing to the manifest's originating candlepin API.
        explode: true
        in: query
        name: api_url
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncJobStatusDTO'
          description: A successful operation
        "400":
          content:
            application/json:
              example:
                displayMessage: Consumer is null or does not have a defined type ID
                  or Consumer is not associated with a valid type
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Consumer is null or does not have a defined type ID or Consumer
            is not associated with a valid type
        "403":
          content:
            application/json:
              example:
                displayMessage: Unit cannot be exported. | A manifest cannot be made
                  for units this type. | A CDN with this label does not exist on this
                  system.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Unit cannot be exported. | A manifest cannot be made for units
            this type. | A CDN with this label does not exist on this system.
        "404":
          content:
            application/json:
              example:
                displayMessage: Consumer with this UUID could not be found.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Consumer with this UUID could not be found.
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - consumer
  /consumers/{consumer_uuid}/entitlements/dry-run:
    get:
      description: "Retrieves a list of Pools and quantities that would be the result\
        \ of an auto-bind. This is a dry run of an autobind. It allows the client\
        \ to see what would be the result of an autobind without executing it. It\
        \ can only do this for the prevously established list of installed products\
        \ for the consumer If a service level is included in the request, then that\
        \ level will override the one stored on the consumer. If no service level\
        \ is included then the existing one will be used. The Response has a list\
        \ of PoolQuantity objects"
      operationId: dryBind
      parameters:
      - description: Consumer UUID
        explode: false
        in: path
        name: consumer_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: Service level
        explode: true
        in: query
        name: service_level
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PoolQuantityDTO'
                type: array
          description: List of pool quantities along with pool.
        "400":
          content:
            application/json:
              example:
                displayMessage: Either owner ID is null or Owner could not be found.
                  Organization has auto-attach disabled which could be due to content
                  access settings.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Either owner ID is null or Owner could not be found. Organization
            has auto-attach disabled which could be due to content access settings.
        "404":
          content:
            application/json:
              example:
                displayMessage: Consumer with this UUID could not be found.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Consumer with this UUID could not be found.
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - consumer
  /consumers/{consumer_uuid}/certificates/serials:
    get:
      description: Retrieves a list of Certiticate Serials for the given consumer.
        This is a small subset of data clients can use to determine which certificates
        they need to update/fetch.
      operationId: getEntitlementCertificateSerials
      parameters:
      - description: Consumer UUID
        explode: false
        in: path
        name: consumer_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CertificateSerialDTO'
                type: array
          description: A list of certificate serials
        "400":
          content:
            application/json:
              example:
                displayMessage: Cannot retrieve content access certificate
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Cannot retrieve content access certificate
        "404":
          content:
            application/json:
              example:
                displayMessage: Consumer with this UUID could not be found.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Consumer with this UUID could not be found.
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - consumer
  /consumers/{consumer_uuid}/certificates/{serial}:
    delete:
      description: Removes an Entitlement from a Consumer By the Certificate Serial
      operationId: unbindBySerial
      parameters:
      - description: The UUID of the Consumer
        explode: false
        in: path
        name: consumer_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: certificate serial
        explode: false
        in: path
        name: serial
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: A successful operation.
        "404":
          content:
            application/json:
              example:
                displayMessage: Consumer with this UUID could not be found or Entitlement
                  Certificate with serial number could not be found
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Consumer with this UUID could not be found or Entitlement Certificate
            with serial number could not be found
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - consumer
  /consumers/{consumer_uuid}/entitlements/{dbid}:
    delete:
      description: Removes an Entitlement from a Consumer By the Entitlement ID
      operationId: unbindByEntitlementId
      parameters:
      - description: The UUID of the Consumer
        explode: false
        in: path
        name: consumer_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: Entitlement ID
        explode: false
        in: path
        name: dbid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Successful operation
        "404":
          content:
            application/json:
              example:
                displayMessage: Consumer with this UUId could not be found. OR Entitlement
                  ID could not be found.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Consumer with this UUId could not be found. OR Entitlement
            ID could not be found.
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - consumer
  /consumers/{consumer_uuid}/export/{export_id}:
    get:
      description: Downloads an asynchronously generated consumer export file (manifest).
      operationId: downloadExistingExport
      parameters:
      - description: The UUID of the consumer
        explode: false
        in: path
        name: consumer_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: export ID
        explode: false
        in: path
        name: export_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/zip:
              schema:
                format: binary
                type: string
          description: A successful operation
        "400":
          content:
            application/json:
              example:
                displayMessage: Could not validate export against specifed consumer
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Could not validate export against specifed consumer
        "404":
          content:
            application/json:
              example:
                displayMessage: Consumer with this UUID could not be found. | Unable
                  to find specified manifest by this ID
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Consumer with this UUID could not be found. | Unable to find
            specified manifest by this ID
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - consumer
  /consumers/{consumer_uuid}/guestids/{guest_id}:
    delete:
      description: Removes the guest from the consumer
      operationId: deleteGuest
      parameters:
      - description: The UUID of the consumer who owns or hosts the guest
        explode: false
        in: path
        name: consumer_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: The UUID of the guest to be deleted
        explode: false
        in: path
        name: guest_id
        required: true
        schema:
          type: string
        style: simple
      - description: Unregister the consumer
        explode: true
        in: query
        name: unregister
        required: true
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          description: A successful operation
        "400":
          content:
            application/json:
              example:
                displayMessage: Provided guest uuid is not valid or does not match
                  with guest uuid in JSON
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Provided guest uuid is not valid or does not match with guest
            uuid in JSON
        "403":
          content:
            application/json:
              example:
                displayMessage: The consumer cannot unregister becuase of unknown
                  type or invalid credentails
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: The consumer cannot unregister becuase of unknown type or invalid
            credentails
        "404":
          content:
            application/json:
              example:
                displayMessage: The consumer and/or guest could not be found using
                  the provided uuid
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: The consumer and/or guest could not be found using the provided
            uuid
        "410":
          content:
            application/json:
              example:
                displayMessage: A consumer was already deleted
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: A consumer was already deleted
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - guest_ids
    get:
      description: Retrieves a single Guest by its consumer and the guest UUID
      operationId: getGuestId
      parameters:
      - description: The UUID of the consumer to retrieve guest
        explode: false
        in: path
        name: consumer_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: The UUID of the guest to retrieve
        explode: false
        in: path
        name: guest_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuestIdDTO'
          description: A successful operation
        "404":
          content:
            application/json:
              example:
                displayMessage: A Guest could not be found using the provided UUID
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: A Guest could not be found using the provided UUID
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - guest_ids
    put:
      description: Updates a single Guest on a Consumer. Allows virt-who to avoid
        uploading an entire list of guests
      operationId: updateGuest
      parameters:
      - description: The UUID of the consumer who owns or hosts the guest
        explode: false
        in: path
        name: consumer_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: The UUID of the guest to be updated
        explode: false
        in: path
        name: guest_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GuestIdDTO'
        description: Updated guest data
        required: true
      responses:
        "200":
          description: A successful operation
        "400":
          content:
            application/json:
              example:
                displayMessage: Provided Guest UUID is not valid or does not match
                  with guest UUID in JSON
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Provided Guest UUID is not valid or does not match with guest
            UUID in JSON
        "404":
          content:
            application/json:
              example:
                displayMessage: A Consumer could not be found using the provided UUID
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: A Consumer could not be found using the provided UUID
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - guest_ids
  /consumers/{consumer_uuid}/entitlements/pool/{pool_id}:
    delete:
      description: Removes all Entitlements from a Consumer by Pool Id
      operationId: unbindByPool
      parameters:
      - description: The ID of the Consumer
        explode: false
        in: path
        name: consumer_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the Consumer
        explode: false
        in: path
        name: pool_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Successful operation
        "404":
          content:
            application/json:
              example:
                displayMessage: No entitlements found for this consumer & with this
                  pool ID
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: No entitlements found for this consumer & with this pool ID
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - consumer
  /consumertypes:
    get:
      description: Retrieves a list of known consumer types
      operationId: getConsumerTypes
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ConsumerTypeDTO'
                type: array
          description: ""
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - consumer_type
      x-java-response:
        type: java.util.stream.Stream
        isContainer: true
    post:
      description: Creates a new consumer type
      operationId: createConsumerType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsumerTypeDTO'
        description: The consumer type to create
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsumerTypeDTO'
          description: ""
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - consumer_type
  /consumertypes/{id}:
    delete:
      description: Deletes an existing consumer type
      operationId: deleteConsumerType
      parameters:
      - description: The ID of the consumer type to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: ""
        "404":
          content:
            application/json:
              example:
                displayMessage: A consumer type could not be found using the provided
                  ID
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: A consumer type could not be found using the provided ID
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - consumer_type
    get:
      description: Retrieves a specific consumer type
      operationId: getConsumerType
      parameters:
      - description: The ID of the consumer type to retrieve
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsumerTypeDTO'
          description: ""
        "404":
          content:
            application/json:
              example:
                displayMessage: A consumer type could not be found using the provided
                  ID
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: A consumer type could not be found using the provided ID
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - consumer_type
    put:
      description: Updates an existing consumer type
      operationId: updateConsumerType
      parameters:
      - description: The ID of the consumer type to update
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsumerTypeDTO'
        description: The fields and updated values to apply to the specified consumer
          type
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsumerTypeDTO'
          description: ""
        "404":
          content:
            application/json:
              example:
                displayMessage: A consumer type could not be found using the provided
                  ID
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: A consumer type could not be found using the provided ID
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - consumer_type
  /cdn:
    get:
      description: Retrieves a list of CDN's
      operationId: getContentDeliveryNetworks
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CdnDTO'
                type: array
          description: A list of CDN's
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - cdn
      x-java-response:
        type: java.util.stream.Stream
        isContainer: true
    post:
      description: Creates a new CDN
      operationId: createCdn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CdnDTO'
        description: CDN to be created
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CdnDTO'
          description: CDN successfully created
        "400":
          content:
            application/json:
              example:
                displayMessage: CDN label already exists
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: CDN label already exists
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - cdn
  /cdn/{label}:
    delete:
      description: Deletes a CDN
      operationId: deleteCdn
      parameters:
      - explode: false
        in: path
        name: label
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: CDN successfully deleted
        "500":
          content:
            application/json:
              example:
                displayMessage: Multiple CDN instances found with the same label
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Multiple CDN instances found with the same label
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - cdn
    put:
      description: Updates a CDN
      operationId: updateCdn
      parameters:
      - explode: false
        in: path
        name: label
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CdnDTO'
        description: Fields that needs to be updated for specified CDN
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CdnDTO'
          description: CDN successfully updated
        "404":
          content:
            application/json:
              example:
                displayMessage: No such content delivery network
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: No such content delivery network
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - cdn
  /content:
    get:
      description: Retrieves list of Content
      operationId: getContents
      parameters:
      - description: Page index to return
        explode: true
        in: query
        name: page
        required: false
        schema:
          example: 2
          type: integer
        style: form
      - description: Number of items to return per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          example: 10
          type: integer
        style: form
      - description: Direction of ordering
        explode: true
        in: query
        name: order
        required: false
        schema:
          example: asc
          type: string
        style: form
      - description: Property to use for ordering
        explode: true
        in: query
        name: sort_by
        required: false
        schema:
          example: name
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ContentDTO'
                type: array
          description: Content successfully listed
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - content
      x-java-response:
        type: java.util.stream.Stream
        isContainer: true
  /content/{content_uuid}:
    get:
      description: Retrieves a single Content
      operationId: getContentByUuid
      parameters:
      - explode: false
        in: path
        name: content_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentDTO'
          description: Content successfully retrieved
        "404":
          content:
            application/json:
              example:
                displayMessage: Content with the given UUID was not found
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Content with the given UUID was not found
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - content
  /crl:
    get:
      description: Retrieves the list of all revoked certificate serial ids that are
        not expired
      operationId: getCurrentCrl
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int64
                  type: integer
                type: array
          description: Certificate revocation list successfully retrieved
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - certificate_revocation_list
  /deleted_consumers:
    get:
      description: Retrieves a list of deleted consumers by deletion date or all.
        List returned is the deleted Consumers.
      operationId: listByDate
      parameters:
      - description: Filter deleted consumers to those on or after this date
        explode: true
        in: query
        name: date
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Page index to return
        explode: true
        in: query
        name: page
        required: false
        schema:
          example: 2
          type: integer
        style: form
      - description: Number of items to return per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          example: 10
          type: integer
        style: form
      - description: Direction of ordering
        explode: true
        in: query
        name: order
        required: false
        schema:
          example: asc
          type: string
        style: form
      - description: Property to use for ordering
        explode: true
        in: query
        name: sort_by
        required: false
        schema:
          example: name
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DeletedConsumerDTO'
                type: array
          description: A list of deleted consumers
        "400":
          content:
            application/json:
              example:
                displayMessage: Date is invalid
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Date is invalid
        "404":
          content:
            application/json:
              example:
                displayMessage: Not Found
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Not Found
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - deleted_consumer
      x-java-response:
        type: java.util.stream.Stream
        isContainer: true
  /distributor_versions:
    get:
      description: Retrieves a list of Distributor Versions
      operationId: getVersions
      parameters:
      - explode: true
        in: query
        name: name_search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: capability
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DistributorVersionDTO'
                type: array
          description: A successful operation
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - distributor_versions
      x-java-response:
        type: java.util.stream.Stream
        isContainer: true
    post:
      description: Creates a Distributor Version
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DistributorVersionDTO'
        description: A new distributor version to be created
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributorVersionDTO'
          description: A successful operation
        "400":
          content:
            application/json:
              example:
                displayMessage: A distributor version already exists
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: A distributor version already exists
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - distributor_versions
  /distributor_versions/{id}:
    delete:
      description: Deletes a Distributor Version
      operationId: delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: A successful operation
        "404":
          content:
            application/json:
              example:
                displayMessage: Distributor version could not be found using the provided
                  ID
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Distributor version could not be found using the provided ID
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - distributor_versions
    put:
      description: Updates a Distributor Version
      operationId: update
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DistributorVersionDTO'
        description: The fields and updated values to apply to the specified distributor
          version
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributorVersionDTO'
          description: A successful operation
        "404":
          content:
            application/json:
              example:
                displayMessage: A distibutor version could not be found using the
                  provided ID
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: A distibutor version could not be found using the provided
            ID
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - distributor_versions
  /environments/{env_id}:
    delete:
      description: |
        Deletes the specified environment, unregistering and deleting any consumers registered to
        the environment with no other remaining environments. If the retain_consumers flag is set to
        true, no consumer deletion will occur, and any such consumers will be moved to the
        organization's default content view.
      operationId: deleteEnvironment
      parameters:
      - explode: false
        in: path
        name: env_id
        required: true
        schema:
          type: string
        style: simple
      - description: |
          Whether or not to retain affected consumers with no remaining environments. If set to
          true, affected consumers will be moved to the organization's default content view.
        explode: true
        in: query
        name: retain_consumers
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "204":
          description: Environment was successfully deleted.
        "404":
          content:
            application/json:
              example:
                displayMessage: "No such environment: test_env"
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: "No such environment: test_env"
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - environment
    get:
      description: Retrieves a single Environment
      operationId: getEnvironment
      parameters:
      - explode: false
        in: path
        name: env_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentDTO'
          description: Environment was successfully retrieved.
        "404":
          content:
            application/json:
              example:
                displayMessage: "No such environment: test_env"
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: "No such environment: test_env"
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - environment
    put:
      description: |
        Updates the specified using the non-null fields specified in the provided EnvironmentDTO.
        Note that some fields of an environment cannot be changed without deleting and recreating
        the environment -- such as its ID or organization (owner) -- and some other properties that
        are mutable may not be changed by this operation, such as environment content overrides. In
        the case of the created and updated timestamps, this operation may not directly update those
        fields, but the updated field may be changed as a result of other fields changing.

        Ignored EnvironmentDTO fields:
        - id
        - owner
        - environmentContent
        - created
        - updated*
      operationId: updateEnvironment
      parameters:
      - explode: false
        in: path
        name: env_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentDTO'
        description: |
          An EnvironmentDTO containing the data to use to update the target environment. The object
          need not be fully populated, as some fields cannot be changed by an update operation and
          will be ignored. Any field which is not intended to be updated should be left undefined or
          null. An empty, non-null value should be used to clear any existing value in a given
          field.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentDTO'
          description: |
            The updated environment
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: |
            An environment with the specified ID does not exist
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - environment
  /environments/{env_id}/consumers:
    post:
      description: Creates a Consumer in an Environment
      operationId: createConsumerInEnvironment
      parameters:
      - explode: false
        in: path
        name: env_id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: activation_keys
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsumerDTO'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsumerDTO'
          description: Consumer was successfully created.
        "404":
          content:
            application/json:
              example:
                displayMessage: "No such environment: test_env"
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: "No such environment: test_env"
        "400":
          content:
            application/json:
              example:
                displayMessage: Unit type must be specified or Two or more environments
                  belong to different organizations
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Unit type must be specified or Two or more environments belong
            to different organizations
        "403":
          content:
            application/json:
              example:
                displayMessage: test_principal is not authorized to register with
                  organization test_org
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Principal is not authorized to register with organization org
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security:
      - ActivationKey: []
        ActivationKeyOwner: []
      tags:
      - environment
  /environments/{env_id}/content:
    delete:
      description: |
        Demotes a Content from an Environment. Consumer's registered to this environment will not
        see this content in their entitlement certificates. (after they are regenerated and synced
        to clients) This call accepts multiple content IDs to demote at once, allowing us to mass
        demote, then trigger a cert regeneration.

        NOTE: This call expects the actual content IDs, *not* the ID created for each
        EnvironmentContent object created after a promotion. This is to help integrate with other
        management apps which should not have to track/lookup a specific ID for the content to
        demote.
      operationId: demoteContent
      parameters:
      - explode: false
        in: path
        name: env_id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: content
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: lazy_regen
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncJobStatusDTO'
          description: Content was successfully demoted
        "404":
          content:
            application/json:
              example:
                displayMessage: "Content does not exist in environment: test_content"
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: "Content does not exist in environment: test_content"
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - environment
    post:
      description: |
        Promotes a Content into an Environment. This call accepts multiple content sets to promote at once,
        after which all affected certificates for consumers in the environment will be regenerated. Consumers
        registered to this environment will now receive this content in their entitlement certificates.
        Because the certificate regeneraiton can be quite time consuming, this is done as an asynchronous job.
        The content will be promoted and immediately available for new entitlements, but existing entitlements
        could take some time to be regenerated and sent down to clients as they check in.
      operationId: promoteContent
      parameters:
      - explode: false
        in: path
        name: env_id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: lazy_regen
        required: false
        schema:
          default: true
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ContentToPromoteDTO'
              type: array
        description: Contents to promote
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncJobStatusDTO'
          description: Content was successfully promoted
        "404":
          content:
            application/json:
              example:
                displayMessage: "No such environment: test_env"
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: "No such environment: test_env"
        "409":
          content:
            application/json:
              example:
                displayMessage: The content with id test_env has already been promoted
                  in this environment.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: The content with id test_env has already been promoted in this
            environment.
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - environment
  /environments/{environment_id}/content_overrides:
    delete:
      description: |
        Removes one or more content overrides from the given environment. If the list of content overrides to
        remove is empty, or the list contains one or more entries without a label, all content overrides for
        the specified environment will be removed. If the list contains one or more entries with a label but
        without an override name (key), all overrides for that label will be removed. If no matching overrides
        could be found, no change will be made to the environment.

        Regardless of which, if any, content overrides are removed, this endpoint returns a list containing
        the remaining overrides on the specified environment.
      operationId: deleteEnvironmentContentOverrides
      parameters:
      - description: |
          The ID of the environment from which to remove content overrides
        explode: false
        in: path
        name: environment_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ContentOverrideDTO'
              type: array
        description: |
          A list containing the content overrides to remove from the environment. The overrides need not be
          fully populated, as the value is ignored entirely during removal; and depending on the behavior
          desired, the name or label fields may not be needed, either. See the description for the operation
          itself for more details.
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ContentOverrideDTO'
                type: array
          description: |
            An update list of all remaining content overrides for the specified environment
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: |
            An environment with the specified ID does not exist
      security: []
      tags:
      - environment
      x-java-response:
        type: java.util.stream.Stream
        isContainer: true
    get:
      description: |
        Fetches the overrides to be applied to all consumers in the given environment. If the environment has
        no overrides, this endpoint returns an empty list.
      operationId: getEnvironmentContentOverrides
      parameters:
      - description: |
          The ID of the environment for which to fetch content overrides
        explode: false
        in: path
        name: environment_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ContentOverrideDTO'
                type: array
          description: |
            A list of content overrides for the specified environment
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: |
            An environment with the specified ID does not exist
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - environment
      x-java-response:
        type: java.util.stream.Stream
        isContainer: true
    put:
      description: |
        Adds one or more new content overrides or updates existing overrides for the given environment, then
        returns a list containing all known, updated overrides for the environment. If the list contains
        multiple values for a given content override, any previous value(s) will be overwritten.
      operationId: putEnvironmentContentOverrides
      parameters:
      - description: |
          The ID of the environment in which to add or update content overrides
        explode: false
        in: path
        name: environment_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ContentOverrideDTO'
              type: array
        description: A list containing the content overrides to apply to the environment
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ContentOverrideDTO'
                type: array
          description: |
            An updated list of all known content overrides for the specified environment
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: |
            An environment with the specified ID does not exist
      security: []
      tags:
      - environment
      x-java-response:
        type: java.util.stream.Stream
        isContainer: true
  /entitlements:
    get:
      description: Retrieves list of Entitlements. This endpoint supports paging with
        query parameters. For more details please visit https://www.candlepinproject.org/docs/candlepin/pagination.html#paginating-results-from-candlepin
      operationId: listAllForConsumer
      parameters:
      - explode: true
        in: query
        name: consumer
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: matches
        required: false
        schema:
          type: string
        style: form
      - description: Attribute filters
        explode: true
        in: query
        name: attribute
        required: false
        schema:
          items:
            format: key:value
            type: string
          type: array
        style: form
      - description: Page index to return
        explode: true
        in: query
        name: page
        required: false
        schema:
          example: 2
          type: integer
        style: form
      - description: Number of items to return per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          example: 10
          type: integer
        style: form
      - description: Direction of ordering
        explode: true
        in: query
        name: order
        required: false
        schema:
          example: asc
          type: string
        style: form
      - description: Property to use for ordering
        explode: true
        in: query
        name: sort_by
        required: false
        schema:
          example: name
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EntitlementDTO'
                type: array
          description: A successful operation
        "400":
          content:
            application/json:
              example:
                displayMessage: Unit with ID "test_uuid" could not be found.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Unit with ID "test_id" could not be found.
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - entitlements
  /entitlements/consumer/{consumer_uuid}/product/{product_id}:
    get:
      description: Checks Consumer for Product Entitlement
      operationId: hasEntitlement
      parameters:
      - explode: false
        in: path
        name: consumer_uuid
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: product_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitlementDTO'
          description: Entitlement successfully found for customer
        "404":
          content:
            application/json:
              example:
                displayMessage: Entitlement with ID "test_uuid" could not be found.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Entitlement could not be found.
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - entitlements
  /entitlements/{entitlement_id}:
    get:
      description: Retrieves a single Entitlement
      operationId: getEntitlement
      parameters:
      - explode: false
        in: path
        name: entitlement_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitlementDTO'
          description: A successful operation
        "404":
          content:
            application/json:
              example:
                displayMessage: Entitlement with ID "test_uuid" could not be found.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Entitlement could not be found.
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - entitlements
    put:
      description: Updates an Entitlement. This only works for the quantity.
      operationId: updateEntitlement
      parameters:
      - explode: false
        in: path
        name: entitlement_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntitlementDTO'
        description: Updated entitlement
        required: true
      responses:
        "204":
          description: A successful operation
        "400":
          content:
            application/json:
              example:
                displayMessage: Quantity value must be greater than 0.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Quantity value must be greater than 0.
        "404":
          content:
            application/json:
              example:
                displayMessage: Entitlement with ID "test_uuid" could not be found.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Entitlement could not be found.
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - entitlements
  /entitlements/{dbid}/upstream_cert:
    get:
      description: Retrieves a Subscription Certificate
      operationId: getUpstreamCert
      parameters:
      - explode: false
        in: path
        name: dbid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: A successful operation
        "404":
          content:
            application/json:
              example:
                displayMessage: Entitlement with ID "test_uuid" could not be found.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: |
            Entitlement could not be found.
            Unable to find upstream certificate for entitlement.
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - entitlements
  /entitlements/{dbid}:
    delete:
      description: Deletes an Entitlement
      operationId: unbind
      parameters:
      - explode: false
        in: path
        name: dbid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Entitlement successfuly deleted
        "404":
          content:
            application/json:
              example:
                displayMessage: Entitlement with ID "test_uuid" could not be found.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Entitlement could not be found.
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - entitlements
  /entitlements/product/{product_id}:
    put:
      description: Regenerates the Entitlement Certificates for a Product
      operationId: regenerateEntitlementCertificatesForProduct
      parameters:
      - explode: false
        in: path
        name: product_id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: lazy_regen
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncJobStatusDTO'
          description: An entitlement certificate is being regenerated
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - entitlements
  /entitlements/{entitlement_id}/migrate:
    put:
      description: Migrate entitlements from one distributor consumer to another.
        Can specify full or partial quantity. No specified quantity will lead to full
        migration of the entitlement.
      operationId: migrateEntitlement
      parameters:
      - explode: false
        in: path
        name: entitlement_id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: to_consumer
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: quantity
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EntitlementDTO'
                type: array
          description: Entitlements successfuly migrated
        "400":
          content:
            application/json:
              example:
                displayMessage: Source and destination units must belong to the same
                  organization
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: |
            Entitlement migration is not permissible for units this type.
            Source and destination units must belong to the same organization.
            The entitlement cannot be utilized by the destination unit.
            The quantity specified must be greater than zero and less than or equal to the total for this entitlement.
        "404":
          content:
            application/json:
              example:
                displayMessage: Entitlement with ID "test_uuid" could not be found.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Entitlement could not be found.
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - entitlements
      x-java-response:
        type: javax.ws.rs.core.Response
        isContainer: false
  /hypervisors/{owner}:
    post:
      description: |
        Creates or Updates the list of Hypervisor hosts Allows agents such as virt-who to update hosts'
        information . This is typically used when a host is unable to register to candlepin via subscription
        manager. In situations where consumers already exist it is probably best not to allow creation of new
        hypervisor consumers.  Most consumers do not have a hypervisorId attribute, so that should be added
        manually when necessary by the management environment. Default is true. If false is specified,
        hypervisorIds that are not found will result in a failed state of the job.
      operationId: hypervisorUpdateAsync
      parameters:
      - description: Owner key
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - description: "Specify whether or not to create missing hypervisors. Default\
          \ is true.  If false is specified, hypervisorIds that are not found will\
          \ result in failed entries in the resulting HypervisorCheckInResult."
        explode: true
        in: query
        name: create_missing
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - explode: true
        in: query
        name: reporter_id
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          text/plain:
            schema:
              type: string
        description: Host and Guest mapping details
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncJobStatusDTO'
          description: A successful operation
        "400":
          content:
            application/json:
              example:
                displayMessage: Host to guest mapping was not provided for hypervisor
                  update.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Host to guest mapping was not provided for hypervisor update.
        "404":
          content:
            application/json:
              example:
                displayMessage: Owner with provided key was not found.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Owner with provided key was not found.
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - hypervisors
  /hypervisors/{owner}/heartbeat:
    put:
      description: Updates last check in date of all consumers of the given reporterId.
      operationId: hypervisorHeartbeatUpdate
      parameters:
      - description: Owner key
        explode: false
        in: path
        name: owner
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: reporter_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncJobStatusDTO'
          description: A successful operation
        "400":
          content:
            application/json:
              example:
                displayMessage: Provided reporter_id is absent or empty.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Provided reporter_id is absent or empty.
        "404":
          content:
            application/json:
              example:
                displayMessage: Owner with provided key was not found.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Owner with provided key was not found.
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - hypervisors
  /jobs:
    delete:
      description: Cleans up terminal jobs matching the provided criteria
      operationId: cleanupTerminalJobs
      parameters:
      - description: Cleans up jobs based on ids
        explode: true
        in: query
        name: id
        required: false
        schema:
          items:
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Cleans up jobs based on keys
        explode: true
        in: query
        name: key
        required: false
        schema:
          items:
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Cleans up jobs based on statuses
        explode: true
        in: query
        name: state
        required: false
        schema:
          items:
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Cleans up jobs based on owners
        explode: true
        in: query
        name: owner
        required: false
        schema:
          items:
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Cleans up jobs based on principals
        explode: true
        in: query
        name: principal
        required: false
        schema:
          items:
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Cleans up jobs based on origins
        explode: true
        in: query
        name: origin
        required: false
        schema:
          items:
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Cleans up jobs based on executors
        explode: true
        in: query
        name: executor
        required: false
        schema:
          items:
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Cleans up jobs to those on or after this date
        explode: true
        in: query
        name: after
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Cleans up jobs to those on or before this date
        explode: true
        in: query
        name: before
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Cleans up job forcefully
        explode: true
        in: query
        name: force
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: integer
          description: Cleaned up jobs count
        "400":
          content:
            application/json:
              example:
                displayMessage: Invalid date range
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Invalid date range
        "404":
          content:
            application/json:
              example:
                displayMessage: Unknown job states
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Unknown job states
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - jobs
    get:
      description: Fetches a set of job statuses matching the given filter options
      operationId: listJobStatuses
      parameters:
      - description: Filter jobs based on ids
        explode: true
        in: query
        name: id
        required: false
        schema:
          items:
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Filter jobs based on keys
        explode: true
        in: query
        name: key
        required: false
        schema:
          items:
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Filter jobs based on statuses
        explode: true
        in: query
        name: state
        required: false
        schema:
          items:
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Filter jobs based on owners
        explode: true
        in: query
        name: owner
        required: false
        schema:
          items:
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Filter jobs based on principals
        explode: true
        in: query
        name: principal
        required: false
        schema:
          items:
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Filter jobs based on origins
        explode: true
        in: query
        name: origin
        required: false
        schema:
          items:
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Filter jobs based on executors
        explode: true
        in: query
        name: executor
        required: false
        schema:
          items:
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Filter jobs to those on or after this date
        explode: true
        in: query
        name: after
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Filter jobs to those on or before this date
        explode: true
        in: query
        name: before
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Page index to return
        explode: true
        in: query
        name: page
        required: false
        schema:
          example: 2
          type: integer
        style: form
      - description: Number of items to return per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          example: 10
          type: integer
        style: form
      - description: Direction of ordering
        explode: true
        in: query
        name: order
        required: false
        schema:
          example: asc
          type: string
        style: form
      - description: Property to use for ordering
        explode: true
        in: query
        name: sort_by
        required: false
        schema:
          example: name
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AsyncJobStatusDTO'
                type: array
          description: A set of job statuses matching the given filter options
        "400":
          content:
            application/json:
              example:
                displayMessage: Invalid date range.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Invalid date range.
        "404":
          content:
            application/json:
              example:
                displayMessage: Unknown job states.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Unknown job states.
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - jobs
      x-java-response:
        type: java.util.stream.Stream
        isContainer: true
  /jobs/{id}:
    delete:
      description: Cancels the job associated with the specified job ID
      operationId: cancelJob
      parameters:
      - description: The ID of the job to cancel
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncJobStatusDTO'
          description: Job status associated with the specified job ID
        "400":
          content:
            application/json:
              example:
                displayMessage: Job ID is null or empty. job is already in a terminal
                  state or otherwise cannot be canceled at this time
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Job ID is null or empty or job is already in a terminal state
            or otherwise cannot be canceled at this time
        "404":
          content:
            application/json:
              example:
                displayMessage: A job could not be found using the provided ID
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: A job could not be found using the provided ID
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - jobs
    get:
      description: Fetches the job status associated with the specified job ID
      operationId: getJobStatus
      parameters:
      - description: The ID of the job to retrieve
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncJobStatusDTO'
          description: Job status associated with the specified job ID
        "400":
          content:
            application/json:
              example:
                displayMessage: Job ID is null or empty
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Job ID is null or empty
        "404":
          content:
            application/json:
              example:
                displayMessage: A job could not be found using the provided ID
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: A job could not be found using the provided ID
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - jobs
  /jobs/scheduler:
    get:
      description: Fetches the status of the job scheduler for this Candlepin node
      operationId: getSchedulerStatus
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchedulerStatusDTO'
          description: Status of the job scheduler for this Candlepin node
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - jobs
    post:
      description: Enables or disables the job scheduler for this Candlepin node
      operationId: setSchedulerStatus
      parameters:
      - description: Boolean value to set running status
        explode: true
        in: query
        name: running
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchedulerStatusDTO'
          description: Status of the job scheduler for this Candlepin node
        "500":
          content:
            application/json:
              example:
                displayMessage: Error setting scheduler status
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Error setting scheduler status
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - jobs
  /jobs/schedule/{jobKey}:
    post:
      description: Schedules a job using the specified key and job properties
      operationId: scheduleJob
      parameters:
      - description: Job key
        explode: false
        in: path
        name: jobKey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncJobStatusDTO'
          description: Status of the job scheduler for this Candlepin node
        "400":
          content:
            application/json:
              example:
                displayMessage: Job key is null or empty
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Job key is null or empty
        "403":
          content:
            application/json:
              example:
                displayMessage: Job is not configured for manual scheduling
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Job is not configured for manual scheduling
        "500":
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred while scheduling
                  job
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred while scheduling job
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - jobs
  /owners:
    get:
      description: "Retrieves a list of owners that match the key provided, or all\
        \ owners if no key was provided"
      operationId: listOwners
      parameters:
      - description: The owner key
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: Page index to return
        explode: true
        in: query
        name: page
        required: false
        schema:
          example: 2
          type: integer
        style: form
      - description: Number of items to return per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          example: 10
          type: integer
        style: form
      - description: Direction of ordering
        explode: true
        in: query
        name: order
        required: false
        schema:
          example: asc
          type: string
        style: form
      - description: Property to use for ordering
        explode: true
        in: query
        name: sort_by
        required: false
        schema:
          example: name
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OwnerDTO'
                type: array
          description: A list of owners
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - owner
      x-java-response:
        type: java.util.stream.Stream
        isContainer: true
    post:
      description: Creates an owner
      operationId: createOwner
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OwnerDTO'
        description: Owner to be created
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OwnerDTO'
          description: Owner successfully created
        "400":
          content:
            application/json:
              example:
                displayMessage: |
                  Invalid inputs, Owner cannot be created.
                  Reasons could be, invalid key
                  or the default service level is specified
                  or the owner content access mode and content access mode list cannot be set directly in standalone mode
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: |
            Invalid inputs, Owner cannot be created.
            Reasons could be, invalid key
            or the default service level is specified
            or the owner content access mode and content access mode list cannot be set directly in standalone mode
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - owner
  /owners/{owner_key}:
    delete:
      description: Removes an owner
      operationId: deleteOwner
      parameters:
      - description: The owner key
        explode: false
        in: path
        name: owner_key
        required: true
        schema:
          type: string
        style: simple
      - description: Boolean value to revoke an owner
        explode: true
        in: query
        name: revoke
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: Boolean value to forcefully delete an owner. This is not in use.
        explode: true
        in: query
        name: force
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "204":
          description: Owner successfully deleted
        "404":
          content:
            application/json:
              example:
                displayMessage: An owner could not be found using the provided key
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An owner could not be found using the provided key
        "409":
          content:
            application/json:
              example:
                displayMessage: Conflict occured while owner deleting an owner
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Conflict occured while owner deleting an owner
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - owner
    get:
      description: Retrieves a single owner
      operationId: getOwner
      parameters:
      - description: The key of the owner
        explode: false
        in: path
        name: owner_key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OwnerDTO'
          description: Owner successfully retrieved
        "404":
          content:
            application/json:
              example:
                displayMessage: An owner could not be found using the provided key
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An owner could not be found using the provided key
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - owner
    put:
      description: |
        Updates an owner.
        Note: To un-set the defaultServiceLevel for an owner, submit an empty string.
      operationId: updateOwner
      parameters:
      - description: The key of the owner
        explode: false
        in: path
        name: owner_key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OwnerDTO'
        description: Owner to be updated
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OwnerDTO'
          description: Owner successfully updated
        "400":
          content:
            application/json:
              example:
                displayMessage: |
                  Invalid inputs, Owner cannot be updated.
                  Reasons could be, invalid key
                  or the owner content access mode and content access mode list cannot be set directly in standalone mode
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: |
            Invalid inputs, Owner cannot be updated.
            Reasons could be, invalid key
            or the owner content access mode and content access mode list cannot be set directly in standalone mode
        "404":
          content:
            application/json:
              example:
                displayMessage: An owner could not be found using the provided key
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An owner could not be found using the provided key
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - owner
  /owners/{owner_key}/activation_keys:
    get:
      description: Retrieves a list of activation keys for an owner
      operationId: ownerActivationKeys
      parameters:
      - description: The key of the owner
        explode: false
        in: path
        name: owner_key
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the activation key
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ActivationKeyDTO'
                type: array
          description: Activation keys successfully retrieved
        "400":
          content:
            application/json:
              example:
                displayMessage: Owner key is null or empty
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Owner key is null or empty
        "404":
          content:
            application/json:
              example:
                displayMessage: An owner could not be found using the provided key
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An owner could not be found using the provided key
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - owner
      x-java-response:
        type: java.util.stream.Stream
        isContainer: true
    post:
      description: Creates an activation key for the owner
      operationId: createActivationKey
      parameters:
      - description: The key of the owner
        explode: false
        in: path
        name: owner_key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivationKeyDTO'
        description: Activation key to be created
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivationKeyDTO'
          description: Activation key for the owner successfully created
        "400":
          content:
            application/json:
              example:
                displayMessage: |
                  Invalid inputs, activation key cannot be created.
                  Reasons could be,
                  The activation key name is already in use for owner
                  or the activation key name must be alphanumeric or include the characters - or _
                  or the name for activation key is not provided
                  or owner key is not provided
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: |
            Invalid inputs, activation key cannot be created.
            Reasons could be,
            The activation key name is already in use for owner
            or the activation key name must be alphanumeric or include the characters - or _
            or the name for activation key is not provided
            or owner key is not provided
        "404":
          content:
            application/json:
              example:
                displayMessage: An owner could not be found using the provided key
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An owner could not be found using the provided key
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - owner
  /owners/{owner_key}/content:
    get:
      description: |
        Retrieves a list of contents within the given organization's namespace, optionally filtered
        by a list of content IDs.
      operationId: getContentsByOwner
      parameters:
      - description: Owner key
        explode: false
        in: path
        name: owner_key
        required: true
        schema:
          type: string
        style: simple
      - description: |
          The ID of a content to fetch. If defined, the list of contents returned by this method
          will only include those matching the given ID. May be specified multiple times to filter
          on multiple content IDs.
        explode: true
        in: query
        name: content
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |
          whether or not to limit the lookup to only contents defined within the organization's
          namespace, excluding any globally defined contents
        explode: true
        in: query
        name: omit_global
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ContentDTO'
                type: array
          description: Content successfully listed
        "404":
          content:
            application/json:
              example:
                displayMessage: "Owner key is null, empty or could not be found"
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: "Owner key is null, empty or could not be found"
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - owner_content
      x-java-response:
        type: java.util.stream.Stream
        isContainer: true
    post:
      description: Creates a content for owner
      operationId: createContent
      parameters:
      - description: The key of the owner
        explode: false
        in: path
        name: owner_key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentDTO'
        description: Content to be created
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentDTO'
          description: Created a content
        "400":
          content:
            application/json:
              example:
                displayMessage: "Invalid inputs, Content cannot be created"
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: "Invalid inputs, Content cannot be created"
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - owner_content
  /owners/{owner_key}/content/{content_id}:
    delete:
      description: Deletes a Content
      operationId: removeContent
      parameters:
      - description: The key of the owner whose content has to be deleted
        explode: false
        in: path
        name: owner_key
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the content to be deleted
        explode: false
        in: path
        name: content_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: A successful operation
        "400":
          content:
            application/json:
              example:
                displayMessage: "Invalid inputs, content could not be deleted"
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: "Invalid inputs, content could not be deleted"
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - owner_content
    get:
      description: Retrieves a single content
      operationId: getContentById
      parameters:
      - description: The key of the owner whose content has to be retrieved
        explode: false
        in: path
        name: owner_key
        required: true
        schema:
          type: string
        style: simple
      - description: The id of the content to be retrieved
        explode: false
        in: path
        name: content_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentDTO'
          description: Content
        "400":
          content:
            application/json:
              example:
                displayMessage: "Owner Key or ID of the Content is null, empty or\
                  \ could not be found"
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: "Owner Key or ID of the Content is null, empty or could not\
            \ be found"
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - owner_content
    put:
      description: Updates a Content
      operationId: updateContent
      parameters:
      - description: The key of the owner to be updated
        explode: false
        in: path
        name: owner_key
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the Content to be updated
        explode: false
        in: path
        name: content_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentDTO'
        description: Content to be updated
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentDTO'
          description: Updated content
        "400":
          content:
            application/json:
              example:
                displayMessage: "Invalid inputs, could not update Content"
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: "Invalid inputs, could not update content"
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - owner_content
  /owners/{owner_key}/content/batch:
    post:
      description: Creates Contents in bulk
      operationId: createContentBatch
      parameters:
      - description: key of the owner whose content has to be created
        explode: false
        in: path
        name: owner_key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ContentDTO'
              type: array
        description: List of contents to be created
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ContentDTO'
                type: array
          description: Contents created
        "400":
          content:
            application/json:
              example:
                displayMessage: "Invalid inputs, could not create content"
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: "Invalid inputs, could not create content"
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - owner_content
      x-java-response:
        type: java.util.stream.Stream
        isContainer: true
  /owners/{owner_key}/consumers:
    get:
      description: Retrieves a list of Consumers for the Owner
      operationId: listConsumers
      parameters:
      - description: The key of the owner
        explode: false
        in: path
        name: owner_key
        required: true
        schema:
          type: string
        style: simple
      - description: The username of the consumer
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The consumer type
        explode: true
        in: query
        name: type
        required: false
        schema:
          items:
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: The UUID of consumers
        explode: true
        in: query
        name: uuid
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The hypervisor IDs
        explode: true
        in: query
        name: hypervisor_id
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The consumer facts
        explode: true
        in: query
        name: fact
        required: false
        schema:
          items:
            format: key:value
            type: string
          type: array
        style: form
      - description: Page index to return
        explode: true
        in: query
        name: page
        required: false
        schema:
          example: 2
          type: integer
        style: form
      - description: Number of items to return per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          example: 10
          type: integer
        style: form
      - description: Direction of ordering
        explode: true
        in: query
        name: order
        required: false
        schema:
          example: asc
          type: string
        style: form
      - description: Property to use for ordering
        explode: true
        in: query
        name: sort_by
        required: false
        schema:
          example: name
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ConsumerDTOArrayElement'
                type: array
          description: Consumers successfully retrieved
        "400":
          content:
            application/json:
              example:
                displayMessage: Owner key is null or empty
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Owner key is null or empty
        "404":
          content:
            application/json:
              example:
                displayMessage: An owner could not be found using the provided key
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An owner could not be found using the provided key
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - owner
      x-java-response:
        type: java.util.stream.Stream
        isContainer: true
  /owners/{owner_key}/consumers/count:
    get:
      description: Retrieves a count of consumers for the owner
      operationId: countConsumers
      parameters:
      - description: The key of the owner
        explode: false
        in: path
        name: owner_key
        required: true
        schema:
          type: string
        style: simple
      - description: The username of the consumer
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The consumer type
        explode: true
        in: query
        name: type
        required: false
        schema:
          items:
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: The UUID of consumers
        explode: true
        in: query
        name: uuid
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The hypervisor IDs
        explode: true
        in: query
        name: hypervisor_id
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: integer
          description: Consumer counts successfully retrieved
        "400":
          content:
            application/json:
              example:
                displayMessage: Owner key is null or empty
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Owner key is null or empty
        "404":
          content:
            application/json:
              example:
                displayMessage: An owner could not be found using the provided key
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An owner could not be found using the provided key
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - owner
  /owners/{owner_key}/consumers_system_purpose:
    get:
      description: Retrieves an aggregate of the system purpose settings of the owner's
        consumers
      operationId: getConsumersSyspurpose
      parameters:
      - description: The key of the owner
        explode: false
        in: path
        name: owner_key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemPurposeAttributesDTO'
          description: The system purpose settings sucessfully retrieved
        "400":
          content:
            application/json:
              example:
                displayMessage: Owner key is null or empty
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Owner key is null or empty
        "404":
          content:
            application/json:
              example:
                displayMessage: Owner key could not be found using the provided key
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Owner key could not be found using the provided key
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - owner
  /owners/{owner_key}/content_access:
    get:
      description: Retrieves content access of an Owner
      operationId: getOwnerContentAccess
      parameters:
      - description: The key of the owner
        explode: false
        in: path
        name: owner_key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentAccessDTO'
          description: Returns content access of an owner.
        "404":
          content:
            application/json:
              example:
                displayMessage: Owner was not found!
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Owner was not found!
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - owner
  /owners/{owner_key}/entitlements:
    get:
      description: |
        Retrieves the list of entitlements for an owner.
        This endpoint supports paging with query parameters. For more details please visit
        https://www.candlepinproject.org/docs/candlepin/pagination.html#paginating-results-from-candlepin
      operationId: ownerEntitlements
      parameters:
      - description: The key of the owner
        explode: false
        in: path
        name: owner_key
        required: true
        schema:
          type: string
        style: simple
      - description: The product id
        explode: true
        in: query
        name: product
        required: false
        schema:
          type: string
        style: form
      - description: Attribute filters
        explode: true
        in: query
        name: attribute
        required: false
        schema:
          items:
            format: key:value
            type: string
          type: array
        style: form
      - description: Page index to return
        explode: true
        in: query
        name: page
        required: false
        schema:
          example: 2
          type: integer
        style: form
      - description: Number of items to return per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          example: 10
          type: integer
        style: form
      - description: Direction of ordering
        explode: true
        in: query
        name: order
        required: false
        schema:
          example: asc
          type: string
        style: form
      - description: Property to use for ordering
        explode: true
        in: query
        name: sort_by
        required: false
        schema:
          example: name
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EntitlementDTO'
                type: array
          description: Entitlement details successfully retrieved
        "404":
          content:
            application/json:
              example:
                displayMessage: An owner could not be found using the provided key
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An owner could not be found using the provided key
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - owner
    post:
      description: |
        Starts an asynchronous healing for the given Owner.
        At the end of the process the idea is that all of the consumers
        in the owned by the owner will be up to date.
      operationId: healEntire
      parameters:
      - description: The key of the owner
        explode: false
        in: path
        name: owner_key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncJobStatusDTO'
          description: The Owner is being healed
        "404":
          content:
            application/json:
              example:
                displayMessage: An owner could not be found using the provided key
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An owner could not be found using the provided key
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - owner
  /owners/{owner_key}/environments:
    get:
      description: Retrieves a list of environment for an owner
      operationId: listEnvironments
      parameters:
      - description: The key of the owner
        explode: false
        in: path
        name: owner_key
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the environment
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: The type of the environments
        explode: true
        in: query
        name: type
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: List all boolean for environments of all types
        explode: true
        in: query
        name: list_all
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EnvironmentDTO'
                type: array
          description: Environments successfully retrieved
        "404":
          content:
            application/json:
              example:
                displayMessage: An owner could not be found using the provided key
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An owner could not be found using the provided key
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - owner
      x-java-response:
        type: java.util.stream.Stream
        isContainer: true
    post:
      description: Creates an environment for the owner
      operationId: createEnvironment
      parameters:
      - description: The key of the owner
        explode: false
        in: path
        name: owner_key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentDTO'
        description: Environment to be created
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentDTO'
          description: Environment for the owner successfully created
        "404":
          content:
            application/json:
              example:
                displayMessage: An owner could not be found using the provided key
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An owner could not be found using the provided key
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - owner
  /owners/{owner_key}/hypervisors:
    get:
      description: Retrieves a list of hypervisors for an owner
      operationId: getHypervisors
      parameters:
      - description: The key of the owner
        explode: false
        in: path
        name: owner_key
        required: true
        schema:
          type: string
        style: simple
      - description: The list of hypervisor Ids
        explode: true
        in: query
        name: hypervisor_id
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Page index to return
        explode: true
        in: query
        name: page
        required: false
        schema:
          example: 2
          type: integer
        style: form
      - description: Number of items to return per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          example: 10
          type: integer
        style: form
      - description: Direction of ordering
        explode: true
        in: query
        name: order
        required: false
        schema:
          example: asc
          type: string
        style: form
      - description: Property to use for ordering
        explode: true
        in: query
        name: sort_by
        required: false
        schema:
          example: name
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ConsumerDTOArrayElement'
                type: array
          description: A list of hypervisors successfully retrieved
        "404":
          content:
            application/json:
              example:
                displayMessage: An owner could not be found using the provided key
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An owner could not be found using the provided key
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - owner
      x-java-response:
        type: java.util.stream.Stream
        isContainer: true
  /owners/{owner_key}/imports:
    delete:
      description: |
        Removes Imports for an Owner. Cleans out all imported subscriptions
        and triggers a background refresh pools. Link to an upstream distributor is
        removed for the owner, so they can import from another distributor. Other
        owners can also now import the manifests originally used in this owner. This
        call does not differentiate between any specific import, it just destroys all
        subscriptions with an upstream pool ID, essentially anything from an import.
        Custom subscriptions will be left alone. Imports do carry rules and product
        information which is global to the candlepin server. This import data is *not*
        undone, we assume that updates to this data can be safely kept.
      operationId: undoImports
      parameters:
      - description: The key of the owner
        explode: false
        in: path
        name: owner_key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncJobStatusDTO'
          description: Imports for an Owner successfully removed
        "404":
          content:
            application/json:
              example:
                displayMessage: An import owner could not be found using the provided
                  key
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An import owner could not be found using the provided key
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - owner
    get:
      description: Retrieves a list of import records for an owner
      operationId: getImports
      parameters:
      - description: The key of the owner
        explode: false
        in: path
        name: owner_key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ImportRecordDTO'
                type: array
          description: Import records successfully retrieved
        "400":
          content:
            application/json:
              example:
                displayMessage: Owner key is null or empty
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Owner key is null or empty
        "404":
          content:
            application/json:
              example:
                displayMessage: An import owner could not be found using the provided
                  key
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An import owner could not be found using the provided key
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - owner
      x-java-response:
        type: java.util.stream.Stream
        isContainer: true
  /owners/{owner_key}/imports/async:
    post:
      description: |
        Initiates an asynchronous manifest import for the given organization.
        This will bring in any products, content, and subscriptions that were
        assigned to the distributor who generated the manifest.
      operationId: importManifestAsync
      parameters:
      - description: The key of the owner
        explode: false
        in: path
        name: owner_key
        required: true
        schema:
          type: string
        style: simple
      - description: This is used to override the conflicts
        explode: true
        in: query
        name: force
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/importManifestAsync_request'
        description: A manifest file to be imported
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncJobStatusDTO'
          description: Manifest successfully imported
        "400":
          content:
            application/json:
              example:
                displayMessage: Owner key is null or empty
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Owner key is null or empty
        "404":
          content:
            application/json:
              example:
                displayMessage: An import owner could not be found using the provided
                  key
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An import owner could not be found using the provided key
        "500":
          content:
            application/json:
              example:
                displayMessage: |
                  Internal server error. Reasons could be,
                  An unexpected exception occurred while scheduling job
                  or error reading export archive
                  or error storing uploaded archive for asynchronous processing
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: |
            Internal server error. Reasons could be,
            An unexpected exception occurred while scheduling job
            or error reading export archive
            or error storing uploaded archive for asynchronous processing
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - owner
  /owners/{owner_key}/info:
    get:
      description: Retrieves the Owner Info for an Owner
      operationId: getOwnerInfo
      parameters:
      - description: The key of the owner
        explode: false
        in: path
        name: owner_key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OwnerInfo'
          description: Owner info successfully retrieved
        "404":
          content:
            application/json:
              example:
                displayMessage: An owner could not be found using the provided key
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An owner could not be found using the provided key
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - owner
  /owners/{owner_key}/log:
    delete:
      description: Remove the log level of an owner
      operationId: deleteLogLevel
      parameters:
      - description: The owner key
        explode: false
        in: path
        name: owner_key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Owner log level successfully removed
        "404":
          content:
            application/json:
              example:
                displayMessage: An owner could not be found using the provided key
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An owner could not be found using the provided key
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - owner
    put:
      description: Sets the log level for an owner
      operationId: setLogLevel
      parameters:
      - description: The key of the owner
        explode: false
        in: path
        name: owner_key
        required: true
        schema:
          type: string
        style: simple
      - description: The log level
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: DEBUG
          enum:
          - ALL
          - TRACE
          - DEBUG
          - INFO
          - WARN
          - ERROR
          - "false"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OwnerDTO'
          description: Log level successfully set
        "400":
          content:
            application/json:
              example:
                displayMessage: |
                  Provided level is not a valid log level
                  or owner key is not provided
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: |
            Provided level is not a valid log level
            or owner key is not provided
        "404":
          content:
            application/json:
              example:
                displayMessage: An owner could not be found using the provided key
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An owner could not be found using the provided key
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - owner
  /owners/{owner_key}/pools:
    get:
      description: |
        Retrieves a list of Pools for an Owner. This endpoint
        supports paging with query parameters. For more details please visit
        https://www.candlepinproject.org/docs/candlepin/pagination.html#paginating-results-from-candlepin
      operationId: listOwnerPools
      parameters:
      - description: The key of the owner
        explode: false
        in: path
        name: owner_key
        required: true
        schema:
          type: string
        style: simple
      - description: The consumer UUID
        explode: true
        in: query
        name: consumer
        required: false
        schema:
          type: string
        style: form
      - description: The activation key name
        explode: true
        in: query
        name: activation_key
        required: false
        schema:
          type: string
        style: form
      - description: The product id
        explode: true
        in: query
        name: product
        required: false
        schema:
          type: string
        style: form
      - description: The subscription id
        explode: true
        in: query
        name: subscription
        required: false
        schema:
          type: string
        style: form
      - description: |
          Includes pools which are not applicable based on some of the consumer's current system facts
          (i.e. system architecture, sockets, cores, ram, storage_band, instance_multiplier), but will
          still filter pools based on other factors, such as pools restricted to a consumer of specific
          types, usernames, or uuids; pools restricted to guests of specific hosts; non-multi-entitlement
          pools that the consumer has already attached; unmapped guest pools for which the consumer is
          ineligible; and expired pools.
        explode: true
        in: query
        name: listall
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Active on date
        explode: true
        in: query
        name: activeon
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |
          Find pools matching the given pattern in a variety of fields
          * and ? wildcards are supported; may be specified multiple times
        explode: true
        in: query
        name: matches
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The attributes to return based on the specified types
        explode: true
        in: query
        name: attribute
        required: false
        schema:
          items:
            format: key:value
            type: string
          type: array
        style: form
      - description: |
          When set to true, it will add future dated pools to the result,
          based on the activeon date
        explode: true
        in: query
        name: add_future
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: |
          When set to true, it will return only future dated pools to the result,
          based on the activeon date
        explode: true
        in: query
        name: only_future
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: |
          Will only return pools with a start date after the supplied date.
          Overrides the activeOn date
        explode: true
        in: query
        name: after
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |
          One or more pool IDs to use to filter the output; only pools with IDs matching
          those provided will be returned; may be specified multiple times
        explode: true
        in: query
        name: poolid
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Page index to return
        explode: true
        in: query
        name: page
        required: false
        schema:
          example: 2
          type: integer
        style: form
      - description: Number of items to return per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          example: 10
          type: integer
        style: form
      - description: Direction of ordering
        explode: true
        in: query
        name: order
        required: false
        schema:
          example: asc
          type: string
        style: form
      - description: Property to use for ordering
        explode: true
        in: query
        name: sort_by
        required: false
        schema:
          example: name
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PoolDTO'
                type: array
          description: Pools successfully retrieved
        "400":
          content:
            application/json:
              example:
                displayMessage: "Invalid inputs, pools cannot be listed. Reasons could\
                  \ be, Owner key is null or empty or the consumer specified does\
                  \ not belong to owner on path or activationKey could not be found\
                  \ with provided key or the flags add_future and only_future cannot\
                  \ be used at the same time or the flags add_future and only_future\
                  \ cannot be used with the parameter after"
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: "Invalid inputs, pools cannot be listed. Reasons could be,\
            \ Owner key is null or empty or the consumer specified does not belong\
            \ to owner on path or activationKey could not be found with provided key\
            \ or the flags add_future and only_future cannot be used at the same time\
            \ or the flags add_future and only_future cannot be used with the parameter\
            \ after"
        "403":
          content:
            application/json:
              example:
                displayMessage: User cannot access the consumer
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: User cannot access the consumer
        "404":
          content:
            application/json:
              example:
                displayMessage: |
                  Invalid inputs, pools cannot be listed.
                  Reasons could be,
                  An owner could not be found using the provided key
                  or the consumer not found using the provided uuid
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: |
            Invalid inputs, pools cannot be listed.
            Reasons could be,
            An owner could not be found using the provided key
            or the consumer not found using the provided uuid
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - owner
      x-java-response:
        type: java.util.stream.Stream
        isContainer: true
    post:
      description: |
        Creates a custom pool for an Owner. Floating pools are not tied to any
        upstream subscription, and are most commonly used for custom content delivery
        in Satellite. Also helps in on-site deployment testing
      operationId: createPool
      parameters:
      - description: The key of the owner
        explode: false
        in: path
        name: owner_key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PoolDTO'
        description: A pool to be created
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoolDTO'
          description: Pool successfully created
        "400":
          content:
            application/json:
              example:
                displayMessage: "Invalid inputs, pool cannot be created. Reasons could\
                  \ be, Owner key is null or empty or Pool product ID not specified"
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: |
            Invalid inputs, pool cannot be created.
            Reasons could be,
            Owner key is null or empty
            or Pool product ID not specified
        "404":
          content:
            application/json:
              example:
                displayMessage: An owner could not be found using the provided key
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An owner could not be found using the provided key
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - owner
    put:
      description: |
        Updates a pool for an Owner. Assumes this is a normal pool, and
        errors out otherwise cause we cannot create primary pools from bonus pools
      operationId: updatePool
      parameters:
      - description: Owner key
        explode: false
        in: path
        name: owner_key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PoolDTO'
        description: A pool to be updated
        required: true
      responses:
        "200":
          description: Pool successfully updated
        "400":
          content:
            application/json:
              example:
                displayMessage: |
                  Invalid inputs, pool cannot be updated.
                  Reasons could be,
                  Owner key is null or empty
                  or Pool product ID not specified
                  or cannot update bonus pools, as they are auto generated
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: |
            Invalid inputs, pool cannot be updated.
            Reasons could be,
            Owner key is null or empty
            or Pool product ID not specified
            or cannot update bonus pools, as they are auto generated
        "404":
          content:
            application/json:
              example:
                displayMessage: |
                  Invalid inputs, pool cannot be created.
                  Reasons could be,
                  An owner could not be found using the provided key
                  or pool could not be found using provided pool with the ID
                  or provided pool does not belong to the specified owner
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: |
            Invalid inputs, pool cannot be created.
            Reasons could be,
            An owner could not be found using the provided key
            or pool could not be found using provided pool with the ID
            or provided pool does not belong to the specified owner
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - owner
  /owners/{owner_key}/products:
    get:
      description: |
        Retrieves a list of products within the given organization's namespace, optionally filtered
        by a list of product IDs.
      operationId: getProductsByOwner
      parameters:
      - description: Owner key
        explode: false
        in: path
        name: owner_key
        required: true
        schema:
          type: string
        style: simple
      - description: |
          The ID of a product to fetch. If defined, the list of products returned by this method
          will only include those matching the given ID. May be specified multiple times to filter
          on multiple product IDs.
        explode: true
        in: query
        name: product
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |
          whether or not to limit the lookup to only products defined within the organization's
          namespace, excluding any globally defined products
        explode: true
        in: query
        name: omit_global
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProductDTO'
                type: array
          description: Retrieves a list of products by owner
        "404":
          content:
            application/json:
              example:
                displayMessage: Owner key could not be found
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Owner key could not be found
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - owner_product
      x-java-response:
        type: java.util.stream.Stream
        isContainer: true
    post:
      description: Creates a product for an owner
      operationId: createProduct
      parameters:
      - description: Owner key
        explode: false
        in: path
        name: owner_key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductDTO'
        description: A product to be created
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDTO'
          description: Product successfully created.
        "400":
          content:
            application/json:
              example:
                displayMessage: "Invalid inputs, unable to create product"
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: "Invalid inputs, unable to create product"
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - owner_product
  /owners/{owner_key}/products/{product_id}:
    delete:
      description: Removes a product for an owner
      operationId: removeProduct
      parameters:
      - description: Owner key
        explode: false
        in: path
        name: owner_key
        required: true
        schema:
          type: string
        style: simple
      - description: Product ID
        explode: false
        in: path
        name: product_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Product successfully deleted.
        "400":
          content:
            application/json:
              example:
                displayMessage: Product cannot be deleted while subscriptions exists
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Product cannot be deleted while subscriptions exists
        "404":
          content:
            application/json:
              example:
                displayMessage: Owner key or product ID could not be found
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Owner key or product ID could not be found
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - owner_product
    get:
      description: Retrieves a single product for an owner
      operationId: getProductById
      parameters:
      - description: Owner key
        explode: false
        in: path
        name: owner_key
        required: true
        schema:
          type: string
        style: simple
      - description: Product ID
        explode: false
        in: path
        name: product_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDTO'
          description: Retrieves a single product for an owner
        "404":
          content:
            application/json:
              example:
                displayMessage: Owner key or product ID could not be found
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Owner key or product ID could not be found
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - owner_product
    put:
      description: Updates a product for an owner
      operationId: updateProduct
      parameters:
      - description: Owner key
        explode: false
        in: path
        name: owner_key
        required: true
        schema:
          type: string
        style: simple
      - description: Product ID
        explode: false
        in: path
        name: product_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductDTO'
        description: Product to be updated
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDTO'
          description: A successful operation
        "400":
          content:
            application/json:
              example:
                displayMessage: "Invalid inputs, unable to update product"
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: "Invalid inputs, unable to update product"
        "404":
          content:
            application/json:
              example:
                displayMessage: Owner key could not be found
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Owner key could not be found
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - owner_product
  /owners/{owner_key}/products/{product_id}/subscriptions:
    put:
      description: Refreshes Pools by Product
      operationId: refreshPoolsForProduct
      parameters:
      - description: Owner key
        explode: false
        in: path
        name: owner_key
        required: true
        schema:
          type: string
        style: simple
      - description: Product ID
        explode: false
        in: path
        name: product_id
        required: true
        schema:
          type: string
        style: simple
      - description: Regenerate certificates immediatelly or allow them to be regenerated
          on demand
        explode: true
        in: query
        name: lazy_regen
        required: true
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncJobStatusDTO'
          description: A successful operation
        "400":
          content:
            application/json:
              example:
                displayMessage: Unable to fulfill refresh pools request
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Unable to fulfill refresh pools request
        "404":
          content:
            application/json:
              example:
                displayMessage: Owner key or product ID could not be found
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Owner key or product ID could not be found
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - owner_product
  /owners/{owner_key}/products/{product_id}/certificate:
    get:
      description: Retrieves a product certificate for an owner
      operationId: getProductCertificateById
      parameters:
      - description: Owner key
        explode: false
        in: path
        name: owner_key
        required: true
        schema:
          type: string
        style: simple
      - description: Product ID
        explode: false
        in: path
        name: product_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCertificateDTO'
          description: Retrieves a product certificate for an owner
        "400":
          content:
            application/json:
              example:
                displayMessage: Only numeric product IDs are allowed
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Only numeric product IDs are allowed
        "404":
          content:
            application/json:
              example:
                displayMessage: Owner key or product ID could not be found
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Owner key or product ID could not be found
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - owner_product
  /owners/{owner_key}/products/{product_id}/content/{content_id}:
    delete:
      description: Removes a single Content from a product
      operationId: removeContentFromProduct
      parameters:
      - description: Owner key
        explode: false
        in: path
        name: owner_key
        required: true
        schema:
          type: string
        style: simple
      - description: Product ID
        explode: false
        in: path
        name: product_id
        required: true
        schema:
          type: string
        style: simple
      - description: Content ID
        explode: false
        in: path
        name: content_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDTO'
          description: Content removed from a product
        "400":
          content:
            application/json:
              example:
                displayMessage: "Invalid inputs, unable to remove content"
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: "Invalid inputs, unable to remove content"
        "404":
          content:
            application/json:
              example:
                displayMessage: Owner key could not be found
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Owner key could not be found
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - owner_product
    post:
      description: Adds content to a product
      operationId: addContentToProduct
      parameters:
      - description: Owner key
        explode: false
        in: path
        name: owner_key
        required: true
        schema:
          type: string
        style: simple
      - description: Product ID
        explode: false
        in: path
        name: product_id
        required: true
        schema:
          type: string
        style: simple
      - description: Content ID
        explode: false
        in: path
        name: content_id
        required: true
        schema:
          type: string
        style: simple
      - description: Content enabled flag
        explode: true
        in: query
        name: enabled
        required: true
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDTO'
          description: Content added to a product
        "400":
          content:
            application/json:
              example:
                displayMessage: "Invalid inputs, unable to add content"
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: "Invalid inputs, unable to add content"
        "404":
          content:
            application/json:
              example:
                displayMessage: Owner key could not be found
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Owner key could not be found
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - owner_product
  /owners/{owner_key}/products/{product_id}/batch_content:
    delete:
      description: Removes content from a product in batch
      operationId: removeContentsFromProduct
      parameters:
      - description: Owner key
        explode: false
        in: path
        name: owner_key
        required: true
        schema:
          type: string
        style: simple
      - description: Product ID
        explode: false
        in: path
        name: product_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        description: Content IDs
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDTO'
          description: Content removed from a product
        "400":
          content:
            application/json:
              example:
                displayMessage: "Invalid inputs, unable to remove content"
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: "Invalid inputs, unable to remove content"
        "404":
          content:
            application/json:
              example:
                displayMessage: Owner key could not be found
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Owner key could not be found
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - owner_product
    post:
      description: Adds content to a product in bulk
      operationId: addContentsToProduct
      parameters:
      - description: Owner key
        explode: false
        in: path
        name: owner_key
        required: true
        schema:
          type: string
        style: simple
      - description: Product ID
        explode: false
        in: path
        name: product_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: boolean
              type: object
        description: Content map
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDTO'
          description: Content added to a product
        "400":
          content:
            application/json:
              example:
                displayMessage: "Invalid inputs, unable to add content"
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: "Invalid inputs, unable to add content"
        "404":
          content:
            application/json:
              example:
                displayMessage: Owner key could not be found
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Owner key could not be found
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - owner_product
  /owners/{owner_key}/servicelevels:
    get:
      description: Retrieves a list of support levels for an owner
      operationId: ownerServiceLevels
      parameters:
      - description: The key of the owner
        explode: false
        in: path
        name: owner_key
        required: true
        schema:
          type: string
        style: simple
      - description: exempt
        explode: true
        in: query
        name: exempt
        required: false
        schema:
          default: "false"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: A list of support levels for an owner
        "400":
          content:
            application/json:
              example:
                displayMessage: Owner key is null or empty
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Owner key is null or empty
        "404":
          content:
            application/json:
              example:
                displayMessage: Owner key could not be found using the provided key
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Owner key could not be found using the provided key
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - owner
      x-java-response:
        type: Iterable
        isContainer: true
  /owners/{owner_key}/subscriptions:
    get:
      description: Retrieves a list of subscriptions for an owner
      operationId: getOwnerSubscriptions
      parameters:
      - description: The key of the owner
        explode: false
        in: path
        name: owner_key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SubscriptionDTO'
                type: array
          description: A list of subscriptions for an owner
        "400":
          content:
            application/json:
              example:
                displayMessage: Owner key is null or empty
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Owner key is null or empty
        "404":
          content:
            application/json:
              example:
                displayMessage: Owner key could not be found using the provided key
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Owner key could not be found using the provided key
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - owner
      x-java-response:
        type: Iterable
        isContainer: true
    put:
      description: |
        Triggers an asynchronous "refresh" operation, updating the entitlement and subscription
        information for the specified owner.
        This endpoint is only functional in hosted mode, and no operation will be triggered
        when called in a standalone, or on-site, deployment.
      operationId: refreshPools
      parameters:
      - description: The key of the owner
        explode: false
        in: path
        name: owner_key
        required: true
        schema:
          type: string
        style: simple
      - description: Specify whether or not to create an owner automatically. Default
          is false.
        explode: true
        in: query
        name: auto_create_owner
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncJobStatusDTO'
          description: A successful operation
        "404":
          content:
            application/json:
              example:
                displayMessage: Owner key could not be found using the provided key
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Owner key could not be found using the provided key
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - owner
  /owners/{owner_key}/system_purpose:
    get:
      description: Retrieves the system purpose settings available to an owner
      operationId: getSyspurpose
      parameters:
      - description: The key of the owner
        explode: false
        in: path
        name: owner_key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemPurposeAttributesDTO'
          description: The details of system purpose settings for an owner
        "400":
          content:
            application/json:
              example:
                displayMessage: Owner key is null or empty
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Owner key is null or empty
        "404":
          content:
            application/json:
              example:
                displayMessage: Owner key could not be found using the provided key
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Owner key could not be found using the provided key
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - owner
  /owners/{owner_key}/uebercert:
    get:
      description: Retrieves the Ueber Entitlement Certificate
      operationId: getUeberCertificate
      parameters:
      - description: The key of the owner
        explode: false
        in: path
        name: owner_key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UeberCertificateDTO'
          description: Ueber Entitlement Certificate for the owner successfully retrieved
        "404":
          content:
            application/json:
              example:
                displayMessage: |
                  An owner could not be found using the provided key
                  or Uber certificate for owner was not found. Please generate one.
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: |
            An owner could not be found using the provided key
            or Uber certificate for owner was not found. Please generate one.
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - owner
    post:
      description: |
        Creates an Ueber Entitlement Certificate. If a certificate
        already exists, it will be regenerated.
      operationId: createUeberCertificate
      parameters:
      - description: The key of the owner
        explode: false
        in: path
        name: owner_key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UeberCertificateDTO'
          description: Ueber Entitlement Certificate for the owner successfully created
        "400":
          content:
            application/json:
              example:
                displayMessage: Problem generating ueber cert for an owner
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Problem generating ueber cert for an owner
        "404":
          content:
            application/json:
              example:
                displayMessage: An owner could not be found using the provided key
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An owner could not be found using the provided key
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - owner
  /owners/{owner_key}/upstream_consumers:
    get:
      description: Retrieves a list of upstream consumers for an owner
      operationId: getUpstreamConsumers
      parameters:
      - description: The key of the owner
        explode: false
        in: path
        name: owner_key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UpstreamConsumerDTOArrayElement'
                type: array
          description: A list of upstream consumers successfully retrieved
        "400":
          content:
            application/json:
              example:
                displayMessage: Owner key is null or empty
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Owner key is null or empty
        "404":
          content:
            application/json:
              example:
                displayMessage: Owner key could not be found using the provided key
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Owner key could not be found using the provided key
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - owner
      x-java-response:
        type: Iterable
        isContainer: true
  /owners/{anonymous_owner_key}/claim:
    put:
      description: Claims consumers of an anonymous owner and migrates them to the
        claimant owner
      operationId: claim
      parameters:
      - description: The key of the owner
        explode: false
        in: path
        name: anonymous_owner_key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClaimantOwner'
        description: Claimant owner
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncJobStatusDTO'
          description: A job to migrate consumers has been scheduled.
        "400":
          content:
            application/json:
              example:
                displayMessage: Owner key is null or empty
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Owner key is null or empty
        "404":
          content:
            application/json:
              example:
                displayMessage: Owner key could not be found using the provided key
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Owner key could not be found using the provided key
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - owner
  /products:
    get:
      description: Retrieves list containing all known products
      operationId: getProducts
      parameters:
      - description: Page index to return
        explode: true
        in: query
        name: page
        required: false
        schema:
          example: 2
          type: integer
        style: form
      - description: Number of items to return per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          example: 10
          type: integer
        style: form
      - description: Direction of ordering
        explode: true
        in: query
        name: order
        required: false
        schema:
          example: asc
          type: string
        style: form
      - description: Property to use for ordering
        explode: true
        in: query
        name: sort_by
        required: false
        schema:
          example: name
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProductDTO'
                type: array
          description: product list successfully returned
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - products
      x-java-response:
        type: java.util.stream.Stream
        isContainer: true
  /products/{product_uuid}:
    get:
      description: Retrieves a single Product
      operationId: getProductByUuid
      parameters:
      - description: The product UUID
        explode: false
        in: path
        name: product_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDTO'
          description: A single product
        "404":
          content:
            application/json:
              example:
                displayMessage: Product not found
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Product not found
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - products
  /pools:
    get:
      description: |
        Retrieves a list of pools @deprecated Use the method on /owners.
        This endpoint supports paging with query parameters.
        For more details please visit https://www.candlepinproject.org/docs/candlepin/pagination.html#paginating-results-from-candlepin.
      operationId: listPools
      parameters:
      - description: Owner ID
        explode: true
        in: query
        name: owner
        required: false
        schema:
          type: string
        style: form
      - description: Consumer UUID
        explode: true
        in: query
        name: consumer
        required: false
        schema:
          type: string
        style: form
      - description: Product ID
        explode: true
        in: query
        name: product
        required: false
        schema:
          type: string
        style: form
      - description: |
          Use with consumerUuid to list all pools available to the consumer.
          This will include pools which would otherwise be omitted due to a rules warning. (i.e. not recommended)
          Pools that trigger an error however will still be omitted. (no entitlements available, consumer type mismatch, etc)
        explode: true
        in: query
        name: listall
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Uses ISO 8601 format
        explode: true
        in: query
        name: activeon
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Page index to return
        explode: true
        in: query
        name: page
        required: false
        schema:
          example: 2
          type: integer
        style: form
      - description: Number of items to return per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          example: 10
          type: integer
        style: form
      - description: Direction of ordering
        explode: true
        in: query
        name: order
        required: false
        schema:
          example: asc
          type: string
        style: form
      - description: Property to use for ordering
        explode: true
        in: query
        name: sort_by
        required: false
        schema:
          example: name
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PoolDTO'
                type: array
          description: A list of pools
        "400":
          content:
            application/json:
              example:
                displayMessage: |
                  Both consumer(unit) and owner are given,
                  or a product id is specified without a consumer(unit) or owner
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: |
            Both consumer(unit) and owner are given,
            or a product id is specified without a consumer(unit) or owner
        "403":
          content:
            application/json:
              example:
                displayMessage: "Users cannot access either of the consumer, owner,\
                  \ or pools"
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: "Users cannot access either of the consumer, owner, or pools"
        "404":
          content:
            application/json:
              example:
                displayMessage: Specified consumer(unit) or owner is not found
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Specified consumer(unit) or owner is not found
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - pools
  /pools/{pool_id}:
    delete:
      description: Removes a pool
      operationId: deletePool
      parameters:
      - description: Pool ID
        explode: false
        in: path
        name: pool_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Pool removed successfully
        "400":
          content:
            application/json:
              example:
                displayMessage: "Cannot delete bonus pools, as they are auto generated"
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: "Cannot delete bonus pools, as they are auto generated"
        "404":
          content:
            application/json:
              example:
                displayMessage: Subscription pool not found
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Subscription pool not found
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      tags:
      - pools
    get:
      description: Retrieves a single pool
      operationId: getPool
      parameters:
      - description: Pool ID
        explode: false
        in: path
        name: pool_id
        required: true
        schema:
          type: string
        style: simple
      - description: Consumer UUID
        explode: true
        in: query
        name: consumer
        required: false
        schema:
          type: string
        style: form
      - description: Uses ISO 8601 format
        explode: true
        in: query
        name: activeon
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoolDTO'
          description: Retrieves a single pool by its ID
        "403":
          content:
            application/json:
              example:
                displayMessage: Users cannot access consumer(unit)
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Users cannot access consumer(unit)
        "404":
          content:
            application/json:
              example:
                displayMessage: Subscription pool or consumer(unit) not found
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Subscription pool or consumer(unit) not found
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      tags:
      - pools
  /pools/{pool_id}/cdn:
    get:
      description: Retrieve a CDN for a Pool
      operationId: getPoolCdn
      parameters:
      - description: Pool ID
        explode: false
        in: path
        name: pool_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CdnDTO'
          description: CDN details for a Pool
        "404":
          content:
            application/json:
              example:
                displayMessage: Subscription pool with given ID could not be found
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Subscription pool with given ID could not be found
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      tags:
      - pools
  /pools/{pool_id}/entitlements:
    get:
      description: Retrieve a list of entitlements for a pool
      operationId: getPoolEntitlements
      parameters:
      - description: Pool ID
        explode: false
        in: path
        name: pool_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EntitlementDTO'
                type: array
          description: A list of entitlements
        "404":
          content:
            application/json:
              example:
                displayMessage: Subscription pool with given ID could not be found
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Subscription pool with given ID could not be found
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      tags:
      - pools
      x-java-response:
        type: Iterable
        isContainer: true
        security: []
  /pools/{pool_id}/entitlements/consumer_uuids:
    get:
      description: Retrieve a list of Consumer UUIDs attached to a pool. Available
        only to superadmins
      operationId: listEntitledConsumerUuids
      parameters:
      - description: Pool ID
        explode: false
        in: path
        name: pool_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: A list of consumer UUIDs
        "404":
          content:
            application/json:
              example:
                displayMessage: Subscription pool with given ID could not be found
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Subscription pool with given ID could not be found
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      tags:
      - pools
  /pools/{pool_id}/cert:
    get:
      description: |
        Retrieves a Subscription Certificate as JSON (when Content-Type is application/json)
        or as PEM (when Content-Type is text/plain)
      operationId: getSubCert
      parameters:
      - description: Pool ID
        explode: false
        in: path
        name: pool_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: object
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateDTO'
          description: Certificate details for a Pool
        "404":
          content:
            application/json:
              example:
                displayMessage: Pool or certificate for given ID could not be found
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Pool or certificate for given ID could not be found
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      tags:
      - pools
  /products/subscriptions:
    put:
      description: Refreshes Pools by Product
      operationId: refreshPoolsForProducts
      parameters:
      - description: Multiple product Ids
        explode: true
        in: query
        name: product
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Regenerate certificates immediatelly or allow them to be regenerated
          on demand
        explode: true
        in: query
        name: lazy_regen
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AsyncJobStatusDTO'
                type: array
          description: A list of statuses of the created refresh pools jobs
        "400":
          content:
            application/json:
              example:
                displayMessage: No product IDs specified
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: No product IDs specified
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - products
      x-java-response:
        type: java.util.stream.Stream
        isContainer: true
  /roles:
    get:
      description: Retrieves a list of Roles
      operationId: getRoles
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleDTO'
                type: array
          description: A list of roles
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - roles
      x-java-response:
        type: java.util.stream.Stream
        isContainer: true
    post:
      description: Creates a Role
      operationId: createRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleDTO'
        description: A role to be created
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleDTO'
          description: Role successfully created.
        "400":
          content:
            application/json:
              example:
                displayMessage: Role is null or empty or role name not specified
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Role is null or empty or role name not specified
        "409":
          content:
            application/json:
              example:
                displayMessage: Role already exists
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Role already exists
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - roles
  /roles/{role_name}:
    delete:
      description: Removes a Role
      operationId: deleteRoleByName
      parameters:
      - description: Role name
        explode: false
        in: path
        name: role_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Role successfully deleted.
        "400":
          content:
            application/json:
              example:
                displayMessage: Role name is null or empty
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Role name is null or empty
        "404":
          content:
            application/json:
              example:
                displayMessage: Role not found
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Role not found
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - roles
    get:
      description: Retrieves a single role by its name.
      operationId: getRoleByName
      parameters:
      - description: Role name
        explode: false
        in: path
        name: role_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleDTO'
          description: Returns a role
        "400":
          content:
            application/json:
              example:
                displayMessage: Role name is null or empty
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Role name is null or empty
        "404":
          content:
            application/json:
              example:
                displayMessage: Role not found
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Role not found
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - roles
    put:
      description: "Updates Role. To avoid race conditions, we do not support updating\
        \ the user or permission collections. Currently this call will only update\
        \ the role name. See the specific nested POST/DELETE calls for modifying users\
        \ and permissions."
      operationId: updateRole
      parameters:
      - description: Role name
        explode: false
        in: path
        name: role_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleDTO'
        description: Role
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleDTO'
          description: Returns updated role
        "400":
          content:
            application/json:
              example:
                displayMessage: Role name is null or empty
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Role name is null or empty
        "404":
          content:
            application/json:
              example:
                displayMessage: Role not found
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Role not found
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - roles
  /roles/{role_name}/users/{username}:
    delete:
      description: Removes a User from a Role
      operationId: deleteUserFromRole
      parameters:
      - description: Role name
        explode: false
        in: path
        name: role_name
        required: true
        schema:
          type: string
        style: simple
      - description: User name
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleDTO'
          description: User from a role is removed
        "400":
          content:
            application/json:
              example:
                displayMessage: Either role or username is null or empty
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Either role or username is null or empty
        "404":
          content:
            application/json:
              example:
                displayMessage: Role or Username not found
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Role or Username not found
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - roles
    post:
      description: Adds a User to a Role
      operationId: addUserToRole
      parameters:
      - description: Role name
        explode: false
        in: path
        name: role_name
        required: true
        schema:
          type: string
        style: simple
      - description: User name
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleDTO'
          description: User added to the role
        "400":
          content:
            application/json:
              example:
                displayMessage: Either role or username is null or empty
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Either role or username is null or empty
        "404":
          content:
            application/json:
              example:
                displayMessage: Role or Username not found
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Role or Username not found
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - roles
  /roles/{role_name}/permissions:
    post:
      description: Adds a Permission to a Role
      operationId: addRolePermission
      parameters:
      - description: Role name
        explode: false
        in: path
        name: role_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionBlueprintDTO'
        description: Permission Blueprint
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleDTO'
          description: Permission to a Role is added
        "400":
          content:
            application/json:
              example:
                displayMessage: Access type NONE not supported
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: "Access type NONE not supported, or role name is null or empty"
        "404":
          content:
            application/json:
              example:
                displayMessage: Role not found
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Role not found
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - roles
  /roles/{role_name}/permissions/{perm_id}:
    delete:
      description: Removes a Permission from a Role
      operationId: removeRolePermission
      parameters:
      - description: Role name
        explode: false
        in: path
        name: role_name
        required: true
        schema:
          type: string
        style: simple
      - description: Permission Id
        explode: false
        in: path
        name: perm_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleDTO'
          description: Permission is removed from a role
        "400":
          content:
            application/json:
              example:
                displayMessage: Role name is null or empty
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Role name is null or empty
        "404":
          content:
            application/json:
              example:
                displayMessage: Role not found
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Role not found
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - roles
  /rules:
    get:
      description: Retrieves the Rules
      operationId: getRules
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: Returns the rules
        "404":
          content:
            application/json:
              example:
                displayMessage: No rules file found in the database
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: No rules file found in the database
        "503":
          content:
            application/json:
              example:
                displayMessage: Could not read rules file
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Could not read rules file
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - rules
  /serials/{id}:
    get:
      description: Retrieves a single Certificate Serial
      operationId: getCertificateSerial
      parameters:
      - description: The ID of the certificate serial to retrieve
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateSerialDTO'
          description: ""
        "404":
          content:
            application/json:
              example:
                displayMessage: A certificate serial could not be found using the
                  provided ID
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: A certificate serial could not be found using the provided
            ID
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - certificate_serial
  /status:
    get:
      description: Returns status of the server
      operationId: status
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusDTO'
          description: Status information about running Candlepin server
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - status
  /subscriptions:
    get:
      description: Retrieves a list of Subscriptions
      operationId: getSubscriptions
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SubscriptionDTO'
                type: array
          description: A list of subscriptions
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - subscription
      x-java-response:
        type: java.util.stream.Stream
        isContainer: true
    post:
      description: Activates a Subscription
      operationId: activateSubscription
      parameters:
      - description: The UUID of the consumer of the subscription
        explode: true
        in: query
        name: consumer_uuid
        required: true
        schema:
          type: string
        style: form
      - description: The email to send a notification to for the activation
        explode: true
        in: query
        name: email
        required: true
        schema:
          type: string
        style: form
      - description: The locale of the email to send a notification to for the activation
        explode: true
        in: query
        name: email_locale
        required: true
        schema:
          type: string
        style: form
      responses:
        "202":
          description: A Subscription is being activated
        "400":
          content:
            application/json:
              example:
                displayMessage: The consumer with the given uuid was not found
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Invalid request such as missing email/locale or when the consumer
            with the given uuid was not found
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - subscription
      x-java-response:
        type: javax.ws.rs.core.Response
  /subscriptions/{id}:
    delete:
      description: Removes a Subscription
      operationId: deleteSubscription
      parameters:
      - description: The ID of the subscription to remove
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Subscription was successfully deleted
        "404":
          content:
            application/json:
              example:
                displayMessage: Subscription could not be found using the provided
                  ID
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Subscription could not be found using the provided ID
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - subscription
  /users:
    get:
      description: Retrieves a list of Users
      operationId: listUsers
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserDTO'
                type: array
          description: A list of users
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - users
      x-java-response:
        type: java.util.stream.Stream
        isContainer: true
    post:
      description: Creates a User
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDTO'
        description: A user to be created
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
          description: User successfuly created
        "400":
          content:
            application/json:
              example:
                displayMessage: Username is null or empty
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: "User data is null or empty, username is not specified and\
            \ similar errors"
        "409":
          content:
            application/json:
              example:
                displayMessage: "User already exists: test_user"
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: User already exists
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - users
  /users/{username}:
    delete:
      description: Removes a User
      operationId: deleteUser
      parameters:
      - description: The username of the existing user
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: User was deleted successfuly
        "400":
          content:
            application/json:
              example:
                displayMessage: Username is null or empty
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Username is null or empty
        "404":
          content:
            application/json:
              example:
                displayMessage: "User not found: test_user"
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: User not found
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - users
    get:
      description: Retrieves a single User
      operationId: getUserInfo
      parameters:
      - description: The username of the existing user
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
          description: A single user
        "400":
          content:
            application/json:
              example:
                displayMessage: Username is null or empty
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Username is null or empty
        "404":
          content:
            application/json:
              example:
                displayMessage: "User not found: test_user"
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: User not found
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - users
    put:
      description: Updates a User
      operationId: updateUser
      parameters:
      - description: The username of the existing user
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDTO'
        description: The updated user
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
          description: the updated user
        "400":
          content:
            application/json:
              example:
                displayMessage: Username is null or empty
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Username is null or empty
        "404":
          content:
            application/json:
              example:
                displayMessage: "User not found: test_user"
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: User not found
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - users
  /users/{username}/roles:
    get:
      description: Retrieves a list of Roles by User
      operationId: getUserRoles
      parameters:
      - description: The username of the existing user
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleDTO'
                type: array
          description: A list of user roles
        "400":
          content:
            application/json:
              example:
                displayMessage: Username is null or empty
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Username is null or empty
        "404":
          content:
            application/json:
              example:
                displayMessage: "User not found: test_user"
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: User not found
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - users
      x-java-response:
        type: java.util.stream.Stream
        isContainer: true
  /users/{username}/owners:
    get:
      description: Retrieve a list of owners the user can register systems to
      operationId: listUserOwners
      parameters:
      - description: The username of the existing user
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OwnerDTO'
                type: array
          description: A list of user owners
        "400":
          content:
            application/json:
              example:
                displayMessage: Username is null or empty
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: Username is null or empty
        "404":
          content:
            application/json:
              example:
                displayMessage: "User not found: test_user"
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: User not found
        default:
          content:
            application/json:
              example:
                displayMessage: An unexpected exception has occurred
                requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
              schema:
                $ref: '#/components/schemas/ExceptionMessage'
          description: An unexpected exception has occurred
      security: []
      tags:
      - users
      x-java-response:
        type: java.util.stream.Stream
        isContainer: true
components:
  parameters:
    paging_page:
      description: Page index to return
      explode: true
      in: query
      name: page
      required: false
      schema:
        example: 2
        type: integer
      style: form
    paging_per_page:
      description: Number of items to return per page
      explode: true
      in: query
      name: per_page
      required: false
      schema:
        example: 10
        type: integer
      style: form
    paging_order:
      description: Direction of ordering
      explode: true
      in: query
      name: order
      required: false
      schema:
        example: asc
        type: string
      style: form
    paging_sort_by:
      description: Property to use for ordering
      explode: true
      in: query
      name: sort_by
      required: false
      schema:
        example: name
        type: string
      style: form
  responses:
    default:
      content:
        application/json:
          example:
            displayMessage: An unexpected exception has occurred
            requestUuid: c4347004-8792-41fe-a4d8-fccaa0d3898a
          schema:
            $ref: '#/components/schemas/ExceptionMessage'
      description: An unexpected exception has occurred
  schemas:
    TimestampedEntity:
      properties:
        created:
          format: date-time
          type: string
        updated:
          format: date-time
          type: string
    ExceptionMessage:
      description: An exception has occurred
      example:
        displayMessage: displayMessage
        requestUuid: requestUuid
      properties:
        displayMessage:
          type: string
        requestUuid:
          type: string
    Link:
      description: Used to represent a link to a top level resource in Candlepin
      example:
        rel: rel
        href: href
      properties:
        rel:
          type: string
        href:
          type: string
    DateRange:
      description: "Represents a range in time, start date to end Date inclusive"
      example:
        endDate: 2000-01-23T04:56:07.000+00:00
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
    DeleteResult:
      description: Represents number of records removed via an unbind.
      example:
        deletedRecords: 0
      properties:
        deletedRecords:
          type: integer
    AsyncJobStatusDTO:
      allOf:
      - $ref: '#/components/schemas/TimestampedEntity'
      - properties:
          id:
            example: ff808081554a3e4101554a3e9033005d
            type: string
          key:
            example: RefreshPoolsJob
            type: string
          name:
            example: refresh pools job
            type: string
          group:
            example: refresh
            type: string
          origin:
            example: candlepin.myhost.com
            type: string
          executor:
            example: candlepin.myhost.com
            type: string
          principal:
            example: admin
            type: string
          state:
            example: RUNNING
            type: string
          previousState:
            example: QUEUED
            type: string
          startTime:
            format: date-time
            type: string
          endTime:
            format: date-time
            type: string
          attempts:
            example: 1
            type: integer
          maxAttempts:
            example: 3
            type: integer
          statusPath:
            example: /jobs/ff808081554a3e4101554a3e9033005d
            type: string
          resultData:
            $ref: '#/components/schemas/AsyncJobStatusDTO_allOf_resultData'
        type: object
      description: DTO representing an async job status
      example:
        resultData: Refresh completed successfully!
        created: 2000-01-23T04:56:07.000+00:00
        origin: candlepin.myhost.com
        previousState: QUEUED
        principal: admin
        maxAttempts: 3
        statusPath: /jobs/ff808081554a3e4101554a3e9033005d
        executor: candlepin.myhost.com
        name: refresh pools job
        startTime: 2000-01-23T04:56:07.000+00:00
        id: ff808081554a3e4101554a3e9033005d
        state: RUNNING
        endTime: 2000-01-23T04:56:07.000+00:00
        updated: 2000-01-23T04:56:07.000+00:00
        key: RefreshPoolsJob
        group: refresh
        attempts: 1
    AbstractCertificateDTO:
      allOf:
      - $ref: '#/components/schemas/TimestampedEntity'
      - properties:
          id:
            type: string
          key:
            type: string
          cert:
            type: string
          serial:
            $ref: '#/components/schemas/CertificateSerialDTO'
        type: object
      description: |
        Represents the base of most Candlepin certificates
        presented to the API (exceptions include ProductCertificate which has its own DTO).
    ActivationKeyDTO:
      allOf:
      - $ref: '#/components/schemas/TimestampedEntity'
      - properties:
          id:
            type: string
          name:
            type: string
          description:
            type: string
          owner:
            $ref: '#/components/schemas/NestedOwnerDTO'
          releaseVer:
            $ref: '#/components/schemas/ReleaseVerDTO'
          serviceLevel:
            type: string
          usage:
            type: string
          role:
            type: string
          addOns:
            items:
              type: string
            type: array
            uniqueItems: true
          autoAttach:
            type: boolean
          pools:
            items:
              $ref: '#/components/schemas/ActivationKeyPoolDTO'
            type: array
            uniqueItems: true
          products:
            items:
              $ref: '#/components/schemas/ActivationKeyProductDTO'
            type: array
            uniqueItems: true
          contentOverrides:
            items:
              $ref: '#/components/schemas/ContentOverrideDTO'
            type: array
            uniqueItems: true
        type: object
      description: A token that allows registration without username/password and
        sets subscription and content related properties at registration.
      example:
        owner:
          displayName: displayName
          id: id
          href: href
          contentAccessMode: contentAccessMode
          key: key
        role: role
        created: 2000-01-23T04:56:07.000+00:00
        addOns:
        - addOns
        - addOns
        usage: usage
        description: description
        pools:
        - quantity: 0
          poolId: poolId
        - quantity: 0
          poolId: poolId
        serviceLevel: serviceLevel
        releaseVer:
          releaseVer: releaseVer
        autoAttach: true
        products:
        - productId: productId
        - productId: productId
        contentOverrides:
        - created: 2000-01-23T04:56:07.000+00:00
          name: name
          contentLabel: contentLabel
          updated: 2000-01-23T04:56:07.000+00:00
          value: value
        - created: 2000-01-23T04:56:07.000+00:00
          name: name
          contentLabel: contentLabel
          updated: 2000-01-23T04:56:07.000+00:00
          value: value
        name: name
        id: id
        updated: 2000-01-23T04:56:07.000+00:00
    ActivationKeyProductDTO:
      example:
        productId: productId
      properties:
        productId:
          minLength: 1
          type: string
      required:
      - productId
    ActivationKeyPoolDTO:
      example:
        quantity: 0
        poolId: poolId
      properties:
        poolId:
          minLength: 1
          type: string
        quantity:
          format: int64
          type: integer
      required:
      - poolId
    AttributeDTO:
      description: Represents the attribute as a name-value pair
      example:
        name: name
        value: value
      properties:
        name:
          type: string
        value:
          type: string
    BrandingDTO:
      allOf:
      - $ref: '#/components/schemas/TimestampedEntity'
      - properties:
          productId:
            maxLength: 255
            minLength: 1
            type: string
          name:
            maxLength: 255
            minLength: 1
            type: string
          type:
            maxLength: 32
            minLength: 1
            type: string
        required:
        - name
        - productId
        - type
        type: object
      description: Represents the branding. It indicates that a particular engineering
        product ID is being rebranded by the entitlement to the given name. The type
        is used by clients to determine what action to take with the brand name.
      example:
        productId: productId
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        type: type
        updated: 2000-01-23T04:56:07.000+00:00
    CertificateSerialDTO:
      allOf:
      - $ref: '#/components/schemas/TimestampedEntity'
      - properties:
          id:
            format: int64
            type: integer
          serial:
            format: int64
            type: integer
          expiration:
            format: date-time
            type: string
          revoked:
            type: boolean
        type: object
      description: Represents a database sequence used to ensure certificates receive
        unique serial numbers
      example:
        serial: 1
        created: 2000-01-23T04:56:07.000+00:00
        expiration: 2000-01-23T04:56:07.000+00:00
        id: 6
        revoked: true
        updated: 2000-01-23T04:56:07.000+00:00
    CertificateDTO:
      allOf:
      - $ref: '#/components/schemas/TimestampedEntity'
      - properties:
          id:
            type: string
          key:
            type: string
          cert:
            type: string
          serial:
            $ref: '#/components/schemas/CertificateSerialDTO'
        type: object
      description: Represents certificate details
      example:
        serial:
          serial: 1
          created: 2000-01-23T04:56:07.000+00:00
          expiration: 2000-01-23T04:56:07.000+00:00
          id: 6
          revoked: true
          updated: 2000-01-23T04:56:07.000+00:00
        created: 2000-01-23T04:56:07.000+00:00
        cert: cert
        id: id
        updated: 2000-01-23T04:56:07.000+00:00
        key: key
    CapabilityDTO:
      description: Represents a consumer capability
      example:
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          minLength: 1
          type: string
      required:
      - name
    ClaimantOwner:
      description: Represents an owner claiming the consumers of an anonymous owner
      example:
        claimant_owner_key: claimant_owner_key
      properties:
        claimant_owner_key:
          minLength: 1
          type: string
      required:
      - claimant_owner_key
    CloudRegistrationDTO:
      description: Contains data for performing automatic cloud-based registration.
      example:
        metadata: metadata
        signature: signature
        type: type
      properties:
        type:
          minLength: 1
          type: string
        metadata:
          minLength: 1
          type: string
        signature:
          type: string
      required:
      - metadata
      - signature
      - type
    CloudAuthenticationResultDTO:
      description: Contains the result of authenticating the provided cloud registration
        information.
      properties:
        ownerKey:
          type: string
        anonymousConsumerUuid:
          type: string
        token:
          minLength: 1
          type: string
        tokenType:
          minLength: 1
          type: string
      required:
      - token
      - tokenType
    ConsumerDTO:
      allOf:
      - $ref: '#/components/schemas/TimestampedEntity'
      - properties:
          id:
            type: string
          uuid:
            type: string
          name:
            type: string
          username:
            type: string
          entitlementStatus:
            type: string
          serviceLevel:
            type: string
          role:
            type: string
          usage:
            type: string
          addOns:
            items:
              type: string
            type: array
            uniqueItems: true
          systemPurposeStatus:
            type: string
          registrationAuthenticationMethod:
            type: string
          releaseVer:
            $ref: '#/components/schemas/ReleaseVerDTO'
          owner:
            $ref: '#/components/schemas/NestedOwnerDTO'
          environment:
            $ref: '#/components/schemas/EnvironmentDTO'
          entitlementCount:
            format: int64
            type: integer
          facts:
            additionalProperties:
              type: string
            type: object
          lastCheckin:
            format: date-time
            type: string
          installedProducts:
            items:
              $ref: '#/components/schemas/ConsumerInstalledProductDTO'
            type: array
            uniqueItems: true
          canActivate:
            type: boolean
          capabilities:
            items:
              $ref: '#/components/schemas/CapabilityDTO'
            type: array
            uniqueItems: true
          hypervisorId:
            $ref: '#/components/schemas/HypervisorIdDTO'
          contentTags:
            items:
              type: string
            type: array
            uniqueItems: true
          autoheal:
            type: boolean
          annotations:
            type: string
          contentAccessMode:
            type: string
          type:
            $ref: '#/components/schemas/ConsumerTypeDTO'
          idCert:
            $ref: '#/components/schemas/CertificateDTO'
          guestIds:
            items:
              $ref: '#/components/schemas/GuestIdDTO'
            type: array
          href:
            type: string
          activationKeys:
            items:
              $ref: '#/components/schemas/ConsumerActivationKeyDTO'
            type: array
            uniqueItems: true
          serviceType:
            type: string
          environments:
            items:
              $ref: '#/components/schemas/EnvironmentDTO'
            type: array
        type: object
      description: Represents a consumer
      example:
        serviceType: serviceType
        role: role
        environments:
        - contentPrefix: contentPrefix
          owner:
            displayName: displayName
            id: id
            href: href
            contentAccessMode: contentAccessMode
            key: key
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          id: id
          type: type
          updated: 2000-01-23T04:56:07.000+00:00
          environmentContent:
          - contentId: contentId
            enabled: true
          - contentId: contentId
            enabled: true
        - contentPrefix: contentPrefix
          owner:
            displayName: displayName
            id: id
            href: href
            contentAccessMode: contentAccessMode
            key: key
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          id: id
          type: type
          updated: 2000-01-23T04:56:07.000+00:00
          environmentContent:
          - contentId: contentId
            enabled: true
          - contentId: contentId
            enabled: true
        usage: usage
        registrationAuthenticationMethod: registrationAuthenticationMethod
        installedProducts:
        - productId: productId
          endDate: 2000-01-23T04:56:07.000+00:00
          created: 2000-01-23T04:56:07.000+00:00
          id: id
          arch: arch
          updated: 2000-01-23T04:56:07.000+00:00
          version: version
          productName: productName
          startDate: 2000-01-23T04:56:07.000+00:00
          status: status
        - productId: productId
          endDate: 2000-01-23T04:56:07.000+00:00
          created: 2000-01-23T04:56:07.000+00:00
          id: id
          arch: arch
          updated: 2000-01-23T04:56:07.000+00:00
          version: version
          productName: productName
          startDate: 2000-01-23T04:56:07.000+00:00
          status: status
        annotations: annotations
        type:
          created: 2000-01-23T04:56:07.000+00:00
          manifest: true
          id: id
          label: label
          updated: 2000-01-23T04:56:07.000+00:00
        uuid: uuid
        facts:
          key: facts
        releaseVer:
          releaseVer: releaseVer
        idCert:
          serial:
            serial: 1
            created: 2000-01-23T04:56:07.000+00:00
            expiration: 2000-01-23T04:56:07.000+00:00
            id: 6
            revoked: true
            updated: 2000-01-23T04:56:07.000+00:00
          created: 2000-01-23T04:56:07.000+00:00
          cert: cert
          id: id
          updated: 2000-01-23T04:56:07.000+00:00
          key: key
        entitlementStatus: entitlementStatus
        systemPurposeStatus: systemPurposeStatus
        id: id
        contentAccessMode: contentAccessMode
        href: href
        autoheal: true
        owner:
          displayName: displayName
          id: id
          href: href
          contentAccessMode: contentAccessMode
          key: key
        entitlementCount: 0
        capabilities:
        - name: name
          id: id
        - name: name
          id: id
        created: 2000-01-23T04:56:07.000+00:00
        addOns:
        - addOns
        - addOns
        serviceLevel: serviceLevel
        hypervisorId:
          created: 2000-01-23T04:56:07.000+00:00
          reporterId: reporterId
          id: id
          updated: 2000-01-23T04:56:07.000+00:00
          hypervisorId: hypervisorId
        canActivate: true
        activationKeys:
        - activationKeyName: activationKeyName
          activationKeyId: activationKeyId
        - activationKeyName: activationKeyName
          activationKeyId: activationKeyId
        environment:
          contentPrefix: contentPrefix
          owner:
            displayName: displayName
            id: id
            href: href
            contentAccessMode: contentAccessMode
            key: key
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          id: id
          type: type
          updated: 2000-01-23T04:56:07.000+00:00
          environmentContent:
          - contentId: contentId
            enabled: true
          - contentId: contentId
            enabled: true
        guestIds:
        - created: 2000-01-23T04:56:07.000+00:00
          attributes:
            key: attributes
          id: id
          updated: 2000-01-23T04:56:07.000+00:00
          guestId: guestId
        - created: 2000-01-23T04:56:07.000+00:00
          attributes:
            key: attributes
          id: id
          updated: 2000-01-23T04:56:07.000+00:00
          guestId: guestId
        name: name
        lastCheckin: 2000-01-23T04:56:07.000+00:00
        updated: 2000-01-23T04:56:07.000+00:00
        username: username
        contentTags:
        - contentTags
        - contentTags
    ConsumerActivationKeyDTO:
      description: Represent activation keys used by consumer in registration
      example:
        activationKeyName: activationKeyName
        activationKeyId: activationKeyId
      properties:
        activationKeyName:
          type: string
        activationKeyId:
          type: string
    ConsumerDTOArrayElement:
      allOf:
      - $ref: '#/components/schemas/TimestampedEntity'
      - properties:
          id:
            type: string
          uuid:
            type: string
          name:
            type: string
          username:
            type: string
          entitlementStatus:
            type: string
          serviceLevel:
            type: string
          role:
            type: string
          usage:
            type: string
          addOns:
            items:
              type: string
            type: array
            uniqueItems: true
          systemPurposeStatus:
            type: string
          releaseVer:
            $ref: '#/components/schemas/ReleaseVerDTO'
          owner:
            $ref: '#/components/schemas/NestedOwnerDTO'
          entitlementCount:
            format: int64
            type: integer
          lastCheckin:
            format: date-time
            type: string
          installedProducts:
            items:
              $ref: '#/components/schemas/ConsumerInstalledProductDTO'
            type: array
            uniqueItems: true
          canActivate:
            type: boolean
          capabilities:
            items:
              $ref: '#/components/schemas/CapabilityDTO'
            type: array
            uniqueItems: true
          hypervisorId:
            $ref: '#/components/schemas/HypervisorIdDTO'
          contentTags:
            items:
              type: string
            type: array
            uniqueItems: true
          autoheal:
            type: boolean
          annotations:
            type: string
          contentAccessMode:
            type: string
          type:
            $ref: '#/components/schemas/ConsumerTypeDTO'
          guestIds:
            items:
              $ref: '#/components/schemas/GuestIdDTOArrayElement'
            type: array
          href:
            type: string
          serviceType:
            type: string
        type: object
      description: Represents a reduced view of a consumer (excluding data like facts
        and identify certificate)
      example:
        serviceType: serviceType
        role: role
        usage: usage
        installedProducts:
        - productId: productId
          endDate: 2000-01-23T04:56:07.000+00:00
          created: 2000-01-23T04:56:07.000+00:00
          id: id
          arch: arch
          updated: 2000-01-23T04:56:07.000+00:00
          version: version
          productName: productName
          startDate: 2000-01-23T04:56:07.000+00:00
          status: status
        - productId: productId
          endDate: 2000-01-23T04:56:07.000+00:00
          created: 2000-01-23T04:56:07.000+00:00
          id: id
          arch: arch
          updated: 2000-01-23T04:56:07.000+00:00
          version: version
          productName: productName
          startDate: 2000-01-23T04:56:07.000+00:00
          status: status
        annotations: annotations
        type:
          created: 2000-01-23T04:56:07.000+00:00
          manifest: true
          id: id
          label: label
          updated: 2000-01-23T04:56:07.000+00:00
        uuid: uuid
        releaseVer:
          releaseVer: releaseVer
        entitlementStatus: entitlementStatus
        systemPurposeStatus: systemPurposeStatus
        id: id
        contentAccessMode: contentAccessMode
        href: href
        autoheal: true
        owner:
          displayName: displayName
          id: id
          href: href
          contentAccessMode: contentAccessMode
          key: key
        entitlementCount: 0
        capabilities:
        - name: name
          id: id
        - name: name
          id: id
        created: 2000-01-23T04:56:07.000+00:00
        addOns:
        - addOns
        - addOns
        serviceLevel: serviceLevel
        hypervisorId:
          created: 2000-01-23T04:56:07.000+00:00
          reporterId: reporterId
          id: id
          updated: 2000-01-23T04:56:07.000+00:00
          hypervisorId: hypervisorId
        canActivate: true
        guestIds:
        - created: 2000-01-23T04:56:07.000+00:00
          id: id
          updated: 2000-01-23T04:56:07.000+00:00
          guestId: guestId
        - created: 2000-01-23T04:56:07.000+00:00
          id: id
          updated: 2000-01-23T04:56:07.000+00:00
          guestId: guestId
        name: name
        lastCheckin: 2000-01-23T04:56:07.000+00:00
        updated: 2000-01-23T04:56:07.000+00:00
        username: username
        contentTags:
        - contentTags
        - contentTags
    ConsumerInstalledProductDTO:
      allOf:
      - $ref: '#/components/schemas/TimestampedEntity'
      - properties:
          id:
            type: string
          productId:
            minLength: 1
            type: string
          productName:
            type: string
          version:
            type: string
          arch:
            type: string
          status:
            type: string
          startDate:
            format: date-time
            type: string
          endDate:
            format: date-time
            type: string
        required:
        - productId
        type: object
      description: Represents consumer installed product details
      example:
        productId: productId
        endDate: 2000-01-23T04:56:07.000+00:00
        created: 2000-01-23T04:56:07.000+00:00
        id: id
        arch: arch
        updated: 2000-01-23T04:56:07.000+00:00
        version: version
        productName: productName
        startDate: 2000-01-23T04:56:07.000+00:00
        status: status
    ConsumerTypeDTO:
      allOf:
      - $ref: '#/components/schemas/TimestampedEntity'
      - properties:
          id:
            type: string
          label:
            type: string
          manifest:
            type: boolean
        type: object
      description: Represents a consumer type used to differentiate various types
        of consumers
      example:
        created: 2000-01-23T04:56:07.000+00:00
        manifest: true
        id: id
        label: label
        updated: 2000-01-23T04:56:07.000+00:00
    ConsumptionTypeCountsDTO:
      description: Represents virtual / physical entitlement consumption counts
      example:
        guest: 9
        physical: 7
      properties:
        physical:
          type: integer
        guest:
          type: integer
      type: object
    ContentDTO:
      allOf:
      - $ref: '#/components/schemas/TimestampedEntity'
      - properties:
          uuid:
            example: ff808081554a3e4101554a3e9033005d
            type: string
          id:
            example: "5001"
            maxLength: 32
            type: string
          type:
            example: yum
            maxLength: 255
            type: string
          label:
            example: content_label
            maxLength: 255
            type: string
          name:
            example: content_name
            maxLength: 255
            type: string
          vendor:
            example: example-vendor
            maxLength: 255
            type: string
          contentUrl:
            example: /admin/foo/example/path
            maxLength: 255
            type: string
          requiredTags:
            example: "TAG1,TAG2"
            maxLength: 255
            type: string
          releaseVer:
            example: 1.2.3
            maxLength: 255
            type: string
          gpgUrl:
            example: /admin/foo/example/gpg/path
            maxLength: 255
            type: string
          modifiedProductIds:
            example: "[5051,5052,5053]"
            items:
              maxLength: 32
              type: string
            type: array
            uniqueItems: true
          arches:
            example: x86_64
            maxLength: 255
            type: string
          metadataExpire:
            example: 1467124079
            format: int64
            type: integer
        type: object
      description: Represents the content data exposed to the API.
      example:
        created: 2000-01-23T04:56:07.000+00:00
        modifiedProductIds: "[5051,5052,5053]"
        label: content_label
        type: yum
        gpgUrl: /admin/foo/example/gpg/path
        uuid: ff808081554a3e4101554a3e9033005d
        releaseVer: 1.2.3
        contentUrl: /admin/foo/example/path
        requiredTags: "TAG1,TAG2"
        vendor: example-vendor
        metadataExpire: 1467124079
        name: content_name
        id: "5001"
        updated: 2000-01-23T04:56:07.000+00:00
        arches: x86_64
    ContentAccessDTO:
      description: Represents content access
      example:
        contentAccessModeList:
        - contentAccessModeList
        - contentAccessModeList
        contentAccessMode: contentAccessMode
      properties:
        contentAccessMode:
          type: string
        contentAccessModeList:
          items:
            type: string
          type: array
    ContentOverrideDTO:
      allOf:
      - $ref: '#/components/schemas/TimestampedEntity'
      - properties:
          name:
            maxLength: 255
            type: string
          contentLabel:
            maxLength: 255
            type: string
          value:
            maxLength: 2048
            type: string
        type: object
      description: Represents a content override for an activation key or consumer
      example:
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        contentLabel: contentLabel
        updated: 2000-01-23T04:56:07.000+00:00
        value: value
    ContentToPromoteDTO:
      description: "Represents the JSON input when promoting content, or updating\
        \ promoted content."
      example:
        environmentId: environmentId
        contentId: contentId
        enabled: true
      properties:
        environmentId:
          type: string
        contentId:
          type: string
        enabled:
          type: boolean
    ComplianceReasonDTO:
      description: DTO representing a compliance reason
      example:
        attributes:
          key: attributes
        message: message
        key: key
      properties:
        key:
          type: string
        message:
          type: string
        attributes:
          additionalProperties:
            type: string
          type: object
    ComplianceStatusDTO:
      description: DTO representing compliance status
      example:
        date: 2000-01-23T04:56:07.000+00:00
        partiallyCompliantProducts:
          key:
          - quantity: 0
            certificates:
            - serial:
                serial: 1
                created: 2000-01-23T04:56:07.000+00:00
                expiration: 2000-01-23T04:56:07.000+00:00
                id: 6
                revoked: true
                updated: 2000-01-23T04:56:07.000+00:00
              created: 2000-01-23T04:56:07.000+00:00
              cert: cert
              id: id
              updated: 2000-01-23T04:56:07.000+00:00
              key: key
            - serial:
                serial: 1
                created: 2000-01-23T04:56:07.000+00:00
                expiration: 2000-01-23T04:56:07.000+00:00
                id: 6
                revoked: true
                updated: 2000-01-23T04:56:07.000+00:00
              created: 2000-01-23T04:56:07.000+00:00
              cert: cert
              id: id
              updated: 2000-01-23T04:56:07.000+00:00
              key: key
            endDate: 2000-01-23T04:56:07.000+00:00
            created: 2000-01-23T04:56:07.000+00:00
            pool:
              consumed: 6
              orderNumber: orderNumber
              stacked: true
              derivedProductAttributes:
              - name: name
                value: value
              - name: name
                value: value
              endDate: 2000-01-23T04:56:07.000+00:00
              calculatedAttributes:
                key: calculatedAttributes
              branding:
              - productId: productId
                created: 2000-01-23T04:56:07.000+00:00
                name: name
                type: type
                updated: 2000-01-23T04:56:07.000+00:00
              - productId: productId
                created: 2000-01-23T04:56:07.000+00:00
                name: name
                type: type
                updated: 2000-01-23T04:56:07.000+00:00
              type: type
              productName: productName
              upstreamEntitlementId: upstreamEntitlementId
              upstreamConsumerId: upstreamConsumerId
              managed: true
              derivedProductId: derivedProductId
              id: id
              href: href
              sourceEntitlement:
                id: id
                href: href
              activeSubscription: true
              developmentPool: true
              owner:
                displayName: displayName
                id: id
                href: href
                contentAccessMode: contentAccessMode
                key: key
              exported: 1
              quantity: 0
              productId: productId
              providedProducts:
              - productId: productId
                productName: productName
              - productId: productId
                productName: productName
              created: 2000-01-23T04:56:07.000+00:00
              productAttributes:
              - name: name
                value: value
              - name: name
                value: value
              stackId: stackId
              contractNumber: contractNumber
              accountNumber: accountNumber
              upstreamPoolId: upstreamPoolId
              sourceStackId: sourceStackId
              subscriptionSubKey: subscriptionSubKey
              attributes:
              - name: name
                value: value
              - name: name
                value: value
              restrictedToUsername: restrictedToUsername
              subscriptionId: subscriptionId
              updated: 2000-01-23T04:56:07.000+00:00
              startDate: 2000-01-23T04:56:07.000+00:00
              derivedProductName: derivedProductName
              derivedProvidedProducts:
              - productId: productId
                productName: productName
              - productId: productId
                productName: productName
            id: id
            href: href
            updated: 2000-01-23T04:56:07.000+00:00
            consumer:
              name: name
              id: id
              href: href
              uuid: uuid
            startDate: 2000-01-23T04:56:07.000+00:00
          - quantity: 0
            certificates:
            - serial:
                serial: 1
                created: 2000-01-23T04:56:07.000+00:00
                expiration: 2000-01-23T04:56:07.000+00:00
                id: 6
                revoked: true
                updated: 2000-01-23T04:56:07.000+00:00
              created: 2000-01-23T04:56:07.000+00:00
              cert: cert
              id: id
              updated: 2000-01-23T04:56:07.000+00:00
              key: key
            - serial:
                serial: 1
                created: 2000-01-23T04:56:07.000+00:00
                expiration: 2000-01-23T04:56:07.000+00:00
                id: 6
                revoked: true
                updated: 2000-01-23T04:56:07.000+00:00
              created: 2000-01-23T04:56:07.000+00:00
              cert: cert
              id: id
              updated: 2000-01-23T04:56:07.000+00:00
              key: key
            endDate: 2000-01-23T04:56:07.000+00:00
            created: 2000-01-23T04:56:07.000+00:00
            pool:
              consumed: 6
              orderNumber: orderNumber
              stacked: true
              derivedProductAttributes:
              - name: name
                value: value
              - name: name
                value: value
              endDate: 2000-01-23T04:56:07.000+00:00
              calculatedAttributes:
                key: calculatedAttributes
              branding:
              - productId: productId
                created: 2000-01-23T04:56:07.000+00:00
                name: name
                type: type
                updated: 2000-01-23T04:56:07.000+00:00
              - productId: productId
                created: 2000-01-23T04:56:07.000+00:00
                name: name
                type: type
                updated: 2000-01-23T04:56:07.000+00:00
              type: type
              productName: productName
              upstreamEntitlementId: upstreamEntitlementId
              upstreamConsumerId: upstreamConsumerId
              managed: true
              derivedProductId: derivedProductId
              id: id
              href: href
              sourceEntitlement:
                id: id
                href: href
              activeSubscription: true
              developmentPool: true
              owner:
                displayName: displayName
                id: id
                href: href
                contentAccessMode: contentAccessMode
                key: key
              exported: 1
              quantity: 0
              productId: productId
              providedProducts:
              - productId: productId
                productName: productName
              - productId: productId
                productName: productName
              created: 2000-01-23T04:56:07.000+00:00
              productAttributes:
              - name: name
                value: value
              - name: name
                value: value
              stackId: stackId
              contractNumber: contractNumber
              accountNumber: accountNumber
              upstreamPoolId: upstreamPoolId
              sourceStackId: sourceStackId
              subscriptionSubKey: subscriptionSubKey
              attributes:
              - name: name
                value: value
              - name: name
                value: value
              restrictedToUsername: restrictedToUsername
              subscriptionId: subscriptionId
              updated: 2000-01-23T04:56:07.000+00:00
              startDate: 2000-01-23T04:56:07.000+00:00
              derivedProductName: derivedProductName
              derivedProvidedProducts:
              - productId: productId
                productName: productName
              - productId: productId
                productName: productName
            id: id
            href: href
            updated: 2000-01-23T04:56:07.000+00:00
            consumer:
              name: name
              id: id
              href: href
              uuid: uuid
            startDate: 2000-01-23T04:56:07.000+00:00
        reasons:
        - attributes:
            key: attributes
          message: message
          key: key
        - attributes:
            key: attributes
          message: message
          key: key
        partialStacks:
          key:
          - quantity: 0
            certificates:
            - serial:
                serial: 1
                created: 2000-01-23T04:56:07.000+00:00
                expiration: 2000-01-23T04:56:07.000+00:00
                id: 6
                revoked: true
                updated: 2000-01-23T04:56:07.000+00:00
              created: 2000-01-23T04:56:07.000+00:00
              cert: cert
              id: id
              updated: 2000-01-23T04:56:07.000+00:00
              key: key
            - serial:
                serial: 1
                created: 2000-01-23T04:56:07.000+00:00
                expiration: 2000-01-23T04:56:07.000+00:00
                id: 6
                revoked: true
                updated: 2000-01-23T04:56:07.000+00:00
              created: 2000-01-23T04:56:07.000+00:00
              cert: cert
              id: id
              updated: 2000-01-23T04:56:07.000+00:00
              key: key
            endDate: 2000-01-23T04:56:07.000+00:00
            created: 2000-01-23T04:56:07.000+00:00
            pool:
              consumed: 6
              orderNumber: orderNumber
              stacked: true
              derivedProductAttributes:
              - name: name
                value: value
              - name: name
                value: value
              endDate: 2000-01-23T04:56:07.000+00:00
              calculatedAttributes:
                key: calculatedAttributes
              branding:
              - productId: productId
                created: 2000-01-23T04:56:07.000+00:00
                name: name
                type: type
                updated: 2000-01-23T04:56:07.000+00:00
              - productId: productId
                created: 2000-01-23T04:56:07.000+00:00
                name: name
                type: type
                updated: 2000-01-23T04:56:07.000+00:00
              type: type
              productName: productName
              upstreamEntitlementId: upstreamEntitlementId
              upstreamConsumerId: upstreamConsumerId
              managed: true
              derivedProductId: derivedProductId
              id: id
              href: href
              sourceEntitlement:
                id: id
                href: href
              activeSubscription: true
              developmentPool: true
              owner:
                displayName: displayName
                id: id
                href: href
                contentAccessMode: contentAccessMode
                key: key
              exported: 1
              quantity: 0
              productId: productId
              providedProducts:
              - productId: productId
                productName: productName
              - productId: productId
                productName: productName
              created: 2000-01-23T04:56:07.000+00:00
              productAttributes:
              - name: name
                value: value
              - name: name
                value: value
              stackId: stackId
              contractNumber: contractNumber
              accountNumber: accountNumber
              upstreamPoolId: upstreamPoolId
              sourceStackId: sourceStackId
              subscriptionSubKey: subscriptionSubKey
              attributes:
              - name: name
                value: value
              - name: name
                value: value
              restrictedToUsername: restrictedToUsername
              subscriptionId: subscriptionId
              updated: 2000-01-23T04:56:07.000+00:00
              startDate: 2000-01-23T04:56:07.000+00:00
              derivedProductName: derivedProductName
              derivedProvidedProducts:
              - productId: productId
                productName: productName
              - productId: productId
                productName: productName
            id: id
            href: href
            updated: 2000-01-23T04:56:07.000+00:00
            consumer:
              name: name
              id: id
              href: href
              uuid: uuid
            startDate: 2000-01-23T04:56:07.000+00:00
          - quantity: 0
            certificates:
            - serial:
                serial: 1
                created: 2000-01-23T04:56:07.000+00:00
                expiration: 2000-01-23T04:56:07.000+00:00
                id: 6
                revoked: true
                updated: 2000-01-23T04:56:07.000+00:00
              created: 2000-01-23T04:56:07.000+00:00
              cert: cert
              id: id
              updated: 2000-01-23T04:56:07.000+00:00
              key: key
            - serial:
                serial: 1
                created: 2000-01-23T04:56:07.000+00:00
                expiration: 2000-01-23T04:56:07.000+00:00
                id: 6
                revoked: true
                updated: 2000-01-23T04:56:07.000+00:00
              created: 2000-01-23T04:56:07.000+00:00
              cert: cert
              id: id
              updated: 2000-01-23T04:56:07.000+00:00
              key: key
            endDate: 2000-01-23T04:56:07.000+00:00
            created: 2000-01-23T04:56:07.000+00:00
            pool:
              consumed: 6
              orderNumber: orderNumber
              stacked: true
              derivedProductAttributes:
              - name: name
                value: value
              - name: name
                value: value
              endDate: 2000-01-23T04:56:07.000+00:00
              calculatedAttributes:
                key: calculatedAttributes
              branding:
              - productId: productId
                created: 2000-01-23T04:56:07.000+00:00
                name: name
                type: type
                updated: 2000-01-23T04:56:07.000+00:00
              - productId: productId
                created: 2000-01-23T04:56:07.000+00:00
                name: name
                type: type
                updated: 2000-01-23T04:56:07.000+00:00
              type: type
              productName: productName
              upstreamEntitlementId: upstreamEntitlementId
              upstreamConsumerId: upstreamConsumerId
              managed: true
              derivedProductId: derivedProductId
              id: id
              href: href
              sourceEntitlement:
                id: id
                href: href
              activeSubscription: true
              developmentPool: true
              owner:
                displayName: displayName
                id: id
                href: href
                contentAccessMode: contentAccessMode
                key: key
              exported: 1
              quantity: 0
              productId: productId
              providedProducts:
              - productId: productId
                productName: productName
              - productId: productId
                productName: productName
              created: 2000-01-23T04:56:07.000+00:00
              productAttributes:
              - name: name
                value: value
              - name: name
                value: value
              stackId: stackId
              contractNumber: contractNumber
              accountNumber: accountNumber
              upstreamPoolId: upstreamPoolId
              sourceStackId: sourceStackId
              subscriptionSubKey: subscriptionSubKey
              attributes:
              - name: name
                value: value
              - name: name
                value: value
              restrictedToUsername: restrictedToUsername
              subscriptionId: subscriptionId
              updated: 2000-01-23T04:56:07.000+00:00
              startDate: 2000-01-23T04:56:07.000+00:00
              derivedProductName: derivedProductName
              derivedProvidedProducts:
              - productId: productId
                productName: productName
              - productId: productId
                productName: productName
            id: id
            href: href
            updated: 2000-01-23T04:56:07.000+00:00
            consumer:
              name: name
              id: id
              href: href
              uuid: uuid
            startDate: 2000-01-23T04:56:07.000+00:00
        compliantUntil: 2000-01-23T04:56:07.000+00:00
        nonCompliantProducts:
        - nonCompliantProducts
        - nonCompliantProducts
        productComplianceDateRanges:
          key:
            endDate: 2000-01-23T04:56:07.000+00:00
            startDate: 2000-01-23T04:56:07.000+00:00
        compliant: true
        compliantProducts:
          key:
          - quantity: 0
            certificates:
            - serial:
                serial: 1
                created: 2000-01-23T04:56:07.000+00:00
                expiration: 2000-01-23T04:56:07.000+00:00
                id: 6
                revoked: true
                updated: 2000-01-23T04:56:07.000+00:00
              created: 2000-01-23T04:56:07.000+00:00
              cert: cert
              id: id
              updated: 2000-01-23T04:56:07.000+00:00
              key: key
            - serial:
                serial: 1
                created: 2000-01-23T04:56:07.000+00:00
                expiration: 2000-01-23T04:56:07.000+00:00
                id: 6
                revoked: true
                updated: 2000-01-23T04:56:07.000+00:00
              created: 2000-01-23T04:56:07.000+00:00
              cert: cert
              id: id
              updated: 2000-01-23T04:56:07.000+00:00
              key: key
            endDate: 2000-01-23T04:56:07.000+00:00
            created: 2000-01-23T04:56:07.000+00:00
            pool:
              consumed: 6
              orderNumber: orderNumber
              stacked: true
              derivedProductAttributes:
              - name: name
                value: value
              - name: name
                value: value
              endDate: 2000-01-23T04:56:07.000+00:00
              calculatedAttributes:
                key: calculatedAttributes
              branding:
              - productId: productId
                created: 2000-01-23T04:56:07.000+00:00
                name: name
                type: type
                updated: 2000-01-23T04:56:07.000+00:00
              - productId: productId
                created: 2000-01-23T04:56:07.000+00:00
                name: name
                type: type
                updated: 2000-01-23T04:56:07.000+00:00
              type: type
              productName: productName
              upstreamEntitlementId: upstreamEntitlementId
              upstreamConsumerId: upstreamConsumerId
              managed: true
              derivedProductId: derivedProductId
              id: id
              href: href
              sourceEntitlement:
                id: id
                href: href
              activeSubscription: true
              developmentPool: true
              owner:
                displayName: displayName
                id: id
                href: href
                contentAccessMode: contentAccessMode
                key: key
              exported: 1
              quantity: 0
              productId: productId
              providedProducts:
              - productId: productId
                productName: productName
              - productId: productId
                productName: productName
              created: 2000-01-23T04:56:07.000+00:00
              productAttributes:
              - name: name
                value: value
              - name: name
                value: value
              stackId: stackId
              contractNumber: contractNumber
              accountNumber: accountNumber
              upstreamPoolId: upstreamPoolId
              sourceStackId: sourceStackId
              subscriptionSubKey: subscriptionSubKey
              attributes:
              - name: name
                value: value
              - name: name
                value: value
              restrictedToUsername: restrictedToUsername
              subscriptionId: subscriptionId
              updated: 2000-01-23T04:56:07.000+00:00
              startDate: 2000-01-23T04:56:07.000+00:00
              derivedProductName: derivedProductName
              derivedProvidedProducts:
              - productId: productId
                productName: productName
              - productId: productId
                productName: productName
            id: id
            href: href
            updated: 2000-01-23T04:56:07.000+00:00
            consumer:
              name: name
              id: id
              href: href
              uuid: uuid
            startDate: 2000-01-23T04:56:07.000+00:00
          - quantity: 0
            certificates:
            - serial:
                serial: 1
                created: 2000-01-23T04:56:07.000+00:00
                expiration: 2000-01-23T04:56:07.000+00:00
                id: 6
                revoked: true
                updated: 2000-01-23T04:56:07.000+00:00
              created: 2000-01-23T04:56:07.000+00:00
              cert: cert
              id: id
              updated: 2000-01-23T04:56:07.000+00:00
              key: key
            - serial:
                serial: 1
                created: 2000-01-23T04:56:07.000+00:00
                expiration: 2000-01-23T04:56:07.000+00:00
                id: 6
                revoked: true
                updated: 2000-01-23T04:56:07.000+00:00
              created: 2000-01-23T04:56:07.000+00:00
              cert: cert
              id: id
              updated: 2000-01-23T04:56:07.000+00:00
              key: key
            endDate: 2000-01-23T04:56:07.000+00:00
            created: 2000-01-23T04:56:07.000+00:00
            pool:
              consumed: 6
              orderNumber: orderNumber
              stacked: true
              derivedProductAttributes:
              - name: name
                value: value
              - name: name
                value: value
              endDate: 2000-01-23T04:56:07.000+00:00
              calculatedAttributes:
                key: calculatedAttributes
              branding:
              - productId: productId
                created: 2000-01-23T04:56:07.000+00:00
                name: name
                type: type
                updated: 2000-01-23T04:56:07.000+00:00
              - productId: productId
                created: 2000-01-23T04:56:07.000+00:00
                name: name
                type: type
                updated: 2000-01-23T04:56:07.000+00:00
              type: type
              productName: productName
              upstreamEntitlementId: upstreamEntitlementId
              upstreamConsumerId: upstreamConsumerId
              managed: true
              derivedProductId: derivedProductId
              id: id
              href: href
              sourceEntitlement:
                id: id
                href: href
              activeSubscription: true
              developmentPool: true
              owner:
                displayName: displayName
                id: id
                href: href
                contentAccessMode: contentAccessMode
                key: key
              exported: 1
              quantity: 0
              productId: productId
              providedProducts:
              - productId: productId
                productName: productName
              - productId: productId
                productName: productName
              created: 2000-01-23T04:56:07.000+00:00
              productAttributes:
              - name: name
                value: value
              - name: name
                value: value
              stackId: stackId
              contractNumber: contractNumber
              accountNumber: accountNumber
              upstreamPoolId: upstreamPoolId
              sourceStackId: sourceStackId
              subscriptionSubKey: subscriptionSubKey
              attributes:
              - name: name
                value: value
              - name: name
                value: value
              restrictedToUsername: restrictedToUsername
              subscriptionId: subscriptionId
              updated: 2000-01-23T04:56:07.000+00:00
              startDate: 2000-01-23T04:56:07.000+00:00
              derivedProductName: derivedProductName
              derivedProvidedProducts:
              - productId: productId
                productName: productName
              - productId: productId
                productName: productName
            id: id
            href: href
            updated: 2000-01-23T04:56:07.000+00:00
            consumer:
              name: name
              id: id
              href: href
              uuid: uuid
            startDate: 2000-01-23T04:56:07.000+00:00
        status: status
      properties:
        status:
          type: string
        compliant:
          type: boolean
        date:
          format: date-time
          type: string
        compliantUntil:
          format: date-time
          type: string
        compliantProducts:
          additionalProperties:
            items:
              $ref: '#/components/schemas/EntitlementDTO'
            type: array
            uniqueItems: true
          type: object
        partiallyCompliantProducts:
          additionalProperties:
            items:
              $ref: '#/components/schemas/EntitlementDTO'
            type: array
            uniqueItems: true
          type: object
        partialStacks:
          additionalProperties:
            items:
              $ref: '#/components/schemas/EntitlementDTO'
            type: array
            uniqueItems: true
          type: object
        nonCompliantProducts:
          items:
            type: string
          type: array
          uniqueItems: true
        reasons:
          items:
            $ref: '#/components/schemas/ComplianceReasonDTO'
          type: array
          uniqueItems: true
        productComplianceDateRanges:
          additionalProperties:
            $ref: '#/components/schemas/DateRange'
          type: object
    CdnDTO:
      allOf:
      - $ref: '#/components/schemas/TimestampedEntity'
      - properties:
          id:
            type: string
          label:
            type: string
          name:
            type: string
          url:
            type: string
          certificate:
            $ref: '#/components/schemas/CertificateDTO'
        type: object
      description: DTO representing a Cdn
      example:
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        certificate:
          serial:
            serial: 1
            created: 2000-01-23T04:56:07.000+00:00
            expiration: 2000-01-23T04:56:07.000+00:00
            id: 6
            revoked: true
            updated: 2000-01-23T04:56:07.000+00:00
          created: 2000-01-23T04:56:07.000+00:00
          cert: cert
          id: id
          updated: 2000-01-23T04:56:07.000+00:00
          key: key
        id: id
        label: label
        updated: 2000-01-23T04:56:07.000+00:00
        url: url
    DeletedConsumerDTO:
      allOf:
      - $ref: '#/components/schemas/TimestampedEntity'
      - properties:
          id:
            type: string
          consumerUuid:
            type: string
          consumerName:
            type: string
          ownerId:
            type: string
          ownerKey:
            type: string
          ownerDisplayName:
            type: string
          principalName:
            type: string
      description: Represents a deleted consumer
      example:
        consumerUuid: consumerUuid
        created: 2000-01-23T04:56:07.000+00:00
        ownerDisplayName: ownerDisplayName
        principalName: principalName
        id: id
        ownerId: ownerId
        updated: 2000-01-23T04:56:07.000+00:00
        ownerKey: ownerKey
        consumerName: consumerName
    DistributorVersionDTO:
      allOf:
      - $ref: '#/components/schemas/TimestampedEntity'
      - properties:
          id:
            type: string
          name:
            type: string
          displayName:
            type: string
          capabilities:
            items:
              $ref: '#/components/schemas/DistributorVersionCapabilityDTO'
            type: array
            uniqueItems: true
        type: object
      description: A DTO representation of the DistributorVersion
      example:
        capabilities:
        - name: name
          id: id
        - name: name
          id: id
        created: 2000-01-23T04:56:07.000+00:00
        displayName: displayName
        name: name
        id: id
        updated: 2000-01-23T04:56:07.000+00:00
    DistributorVersionCapabilityDTO:
      description: A DTO representation of the DistributorVersionCapability
      example:
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          minLength: 1
          type: string
      required:
      - name
      type: object
    EntitlementDTO:
      allOf:
      - $ref: '#/components/schemas/TimestampedEntity'
      - properties:
          id:
            type: string
          consumer:
            $ref: '#/components/schemas/NestedConsumerDTO'
          pool:
            $ref: '#/components/schemas/PoolDTO'
          quantity:
            type: integer
          certificates:
            items:
              $ref: '#/components/schemas/CertificateDTO'
            type: array
            uniqueItems: true
          startDate:
            format: date-time
            type: string
          endDate:
            format: date-time
            type: string
          href:
            type: string
        type: object
      description: A DTO representation of the Entitlement entity
      example:
        quantity: 0
        certificates:
        - serial:
            serial: 1
            created: 2000-01-23T04:56:07.000+00:00
            expiration: 2000-01-23T04:56:07.000+00:00
            id: 6
            revoked: true
            updated: 2000-01-23T04:56:07.000+00:00
          created: 2000-01-23T04:56:07.000+00:00
          cert: cert
          id: id
          updated: 2000-01-23T04:56:07.000+00:00
          key: key
        - serial:
            serial: 1
            created: 2000-01-23T04:56:07.000+00:00
            expiration: 2000-01-23T04:56:07.000+00:00
            id: 6
            revoked: true
            updated: 2000-01-23T04:56:07.000+00:00
          created: 2000-01-23T04:56:07.000+00:00
          cert: cert
          id: id
          updated: 2000-01-23T04:56:07.000+00:00
          key: key
        endDate: 2000-01-23T04:56:07.000+00:00
        created: 2000-01-23T04:56:07.000+00:00
        pool:
          consumed: 6
          orderNumber: orderNumber
          stacked: true
          derivedProductAttributes:
          - name: name
            value: value
          - name: name
            value: value
          endDate: 2000-01-23T04:56:07.000+00:00
          calculatedAttributes:
            key: calculatedAttributes
          branding:
          - productId: productId
            created: 2000-01-23T04:56:07.000+00:00
            name: name
            type: type
            updated: 2000-01-23T04:56:07.000+00:00
          - productId: productId
            created: 2000-01-23T04:56:07.000+00:00
            name: name
            type: type
            updated: 2000-01-23T04:56:07.000+00:00
          type: type
          productName: productName
          upstreamEntitlementId: upstreamEntitlementId
          upstreamConsumerId: upstreamConsumerId
          managed: true
          derivedProductId: derivedProductId
          id: id
          href: href
          sourceEntitlement:
            id: id
            href: href
          activeSubscription: true
          developmentPool: true
          owner:
            displayName: displayName
            id: id
            href: href
            contentAccessMode: contentAccessMode
            key: key
          exported: 1
          quantity: 0
          productId: productId
          providedProducts:
          - productId: productId
            productName: productName
          - productId: productId
            productName: productName
          created: 2000-01-23T04:56:07.000+00:00
          productAttributes:
          - name: name
            value: value
          - name: name
            value: value
          stackId: stackId
          contractNumber: contractNumber
          accountNumber: accountNumber
          upstreamPoolId: upstreamPoolId
          sourceStackId: sourceStackId
          subscriptionSubKey: subscriptionSubKey
          attributes:
          - name: name
            value: value
          - name: name
            value: value
          restrictedToUsername: restrictedToUsername
          subscriptionId: subscriptionId
          updated: 2000-01-23T04:56:07.000+00:00
          startDate: 2000-01-23T04:56:07.000+00:00
          derivedProductName: derivedProductName
          derivedProvidedProducts:
          - productId: productId
            productName: productName
          - productId: productId
            productName: productName
        id: id
        href: href
        updated: 2000-01-23T04:56:07.000+00:00
        consumer:
          name: name
          id: id
          href: href
          uuid: uuid
        startDate: 2000-01-23T04:56:07.000+00:00
    EnvironmentContentDTO:
      description: EnvironmentContent represents the promotion of content into a particular
        environment.
      example:
        contentId: contentId
        enabled: true
      properties:
        contentId:
          type: string
        enabled:
          type: boolean
    EnvironmentDTO:
      allOf:
      - $ref: '#/components/schemas/TimestampedEntity'
      - properties:
          id:
            type: string
          name:
            type: string
          type:
            type: string
          description:
            type: string
          contentPrefix:
            type: string
          owner:
            $ref: '#/components/schemas/NestedOwnerDTO'
          environmentContent:
            items:
              $ref: '#/components/schemas/EnvironmentContentDTO'
            type: array
            uniqueItems: true
        type: object
      description: Represents an environment within an org used to enable/disable/promote
        content in specific places.
      example:
        contentPrefix: contentPrefix
        owner:
          displayName: displayName
          id: id
          href: href
          contentAccessMode: contentAccessMode
          key: key
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        description: description
        id: id
        type: type
        updated: 2000-01-23T04:56:07.000+00:00
        environmentContent:
        - contentId: contentId
          enabled: true
        - contentId: contentId
          enabled: true
    ExportResultDTO:
      description: Represents the result of an export job
      properties:
        exportedConsumer:
          type: string
        exportId:
          type: string
        href:
          type: string
    GuestIdDTO:
      allOf:
      - $ref: '#/components/schemas/TimestampedEntity'
      - properties:
          id:
            type: string
          guestId:
            type: string
          attributes:
            additionalProperties:
              type: string
            type: object
        required:
        - guestId
        type: object
      description: Represents a guest ID running on a virt host consumer
      example:
        created: 2000-01-23T04:56:07.000+00:00
        attributes:
          key: attributes
        id: id
        updated: 2000-01-23T04:56:07.000+00:00
        guestId: guestId
    GuestIdDTOArrayElement:
      allOf:
      - $ref: '#/components/schemas/TimestampedEntity'
      - properties:
          id:
            type: string
          guestId:
            type: string
        required:
        - guestId
        type: object
      description: Represents a guest ID running on a virt host consumer. Does not
        include the attributes field
      example:
        created: 2000-01-23T04:56:07.000+00:00
        id: id
        updated: 2000-01-23T04:56:07.000+00:00
        guestId: guestId
    HypervisorConsumerDTO:
      properties:
        uuid:
          type: string
        name:
          type: string
        owner:
          $ref: '#/components/schemas/NestedOwnerDTO'
    HypervisorIdDTO:
      allOf:
      - $ref: '#/components/schemas/TimestampedEntity'
      - properties:
          id:
            type: string
          hypervisorId:
            type: string
          reporterId:
            type: string
        type: object
      description: Represents a HypervisorId details
      example:
        created: 2000-01-23T04:56:07.000+00:00
        reporterId: reporterId
        id: id
        updated: 2000-01-23T04:56:07.000+00:00
        hypervisorId: hypervisorId
    HypervisorUpdateResultDTO:
      properties:
        created:
          items:
            $ref: '#/components/schemas/HypervisorConsumerDTO'
          type: array
          uniqueItems: true
        updated:
          items:
            $ref: '#/components/schemas/HypervisorConsumerDTO'
          type: array
          uniqueItems: true
        unchanged:
          items:
            $ref: '#/components/schemas/HypervisorConsumerDTO'
          type: array
          uniqueItems: true
        failedUpdate:
          items:
            type: string
          type: array
          uniqueItems: true
      required:
      - created
      - failedUpdate
      - unchanged
      - updated
    ImportRecordDTO:
      allOf:
      - $ref: '#/components/schemas/TimestampedEntity'
      - properties:
          id:
            type: string
          status:
            type: string
          statusMessage:
            type: string
          fileName:
            type: string
          generatedBy:
            type: string
          generatedDate:
            format: date-time
            type: string
          upstreamConsumer:
            $ref: '#/components/schemas/ImportUpstreamConsumerDTO'
        type: object
      description: Represents a import record details
      example:
        fileName: fileName
        created: 2000-01-23T04:56:07.000+00:00
        generatedDate: 2000-01-23T04:56:07.000+00:00
        upstreamConsumer:
          apiUrl: apiUrl
          created: 2000-01-23T04:56:07.000+00:00
          webUrl: webUrl
          name: name
          id: id
          contentAccessMode: contentAccessMode
          ownerId: ownerId
          type:
            created: 2000-01-23T04:56:07.000+00:00
            manifest: true
            id: id
            label: label
            updated: 2000-01-23T04:56:07.000+00:00
          updated: 2000-01-23T04:56:07.000+00:00
          uuid: uuid
        id: id
        generatedBy: generatedBy
        updated: 2000-01-23T04:56:07.000+00:00
        statusMessage: statusMessage
        status: status
    ImportUpstreamConsumerDTO:
      allOf:
      - $ref: '#/components/schemas/TimestampedEntity'
      - properties:
          id:
            type: string
          uuid:
            type: string
          name:
            type: string
          apiUrl:
            type: string
          webUrl:
            type: string
          ownerId:
            type: string
          contentAccessMode:
            type: string
          type:
            $ref: '#/components/schemas/ConsumerTypeDTO'
        type: object
      description: Represents an import upstream consumer
      example:
        apiUrl: apiUrl
        created: 2000-01-23T04:56:07.000+00:00
        webUrl: webUrl
        name: name
        id: id
        contentAccessMode: contentAccessMode
        ownerId: ownerId
        type:
          created: 2000-01-23T04:56:07.000+00:00
          manifest: true
          id: id
          label: label
          updated: 2000-01-23T04:56:07.000+00:00
        updated: 2000-01-23T04:56:07.000+00:00
        uuid: uuid
    NestedConsumerDTO:
      description: A minimal view of a Consumer
      example:
        name: name
        id: id
        href: href
        uuid: uuid
      properties:
        id:
          type: string
        uuid:
          type: string
        name:
          type: string
        href:
          type: string
    NestedEntitlementDTO:
      example:
        id: id
        href: href
      properties:
        id:
          type: string
        href:
          type: string
    NestedOwnerDTO:
      example:
        displayName: displayName
        id: id
        href: href
        contentAccessMode: contentAccessMode
        key: key
      properties:
        id:
          type: string
        key:
          type: string
        displayName:
          type: string
        href:
          type: string
        contentAccessMode:
          type: string
    OwnerDTO:
      allOf:
      - $ref: '#/components/schemas/TimestampedEntity'
      - properties:
          id:
            type: string
          displayName:
            type: string
          key:
            type: string
          contentPrefix:
            type: string
          defaultServiceLevel:
            type: string
          logLevel:
            type: string
          contentAccessMode:
            type: string
          contentAccessModeList:
            type: string
          autobindHypervisorDisabled:
            type: boolean
          autobindDisabled:
            type: boolean
          lastRefreshed:
            format: date-time
            type: string
          parentOwner:
            $ref: '#/components/schemas/NestedOwnerDTO'
          upstreamConsumer:
            $ref: '#/components/schemas/UpstreamConsumerDTO'
          anonymous:
            type: boolean
          claimed:
            type: boolean
          claimantOwner:
            type: string
        type: object
      description: DTO representing an owner/organization
      example:
        contentPrefix: contentPrefix
        lastRefreshed: 2000-01-23T04:56:07.000+00:00
        claimantOwner: claimantOwner
        created: 2000-01-23T04:56:07.000+00:00
        displayName: displayName
        defaultServiceLevel: defaultServiceLevel
        claimed: true
        upstreamConsumer:
          idCert:
            serial:
              serial: 1
              created: 2000-01-23T04:56:07.000+00:00
              expiration: 2000-01-23T04:56:07.000+00:00
              id: 6
              revoked: true
              updated: 2000-01-23T04:56:07.000+00:00
            created: 2000-01-23T04:56:07.000+00:00
            cert: cert
            id: id
            updated: 2000-01-23T04:56:07.000+00:00
            key: key
          apiUrl: apiUrl
          created: 2000-01-23T04:56:07.000+00:00
          webUrl: webUrl
          name: name
          id: id
          contentAccessMode: contentAccessMode
          ownerId: ownerId
          type:
            created: 2000-01-23T04:56:07.000+00:00
            manifest: true
            id: id
            label: label
            updated: 2000-01-23T04:56:07.000+00:00
          updated: 2000-01-23T04:56:07.000+00:00
          uuid: uuid
        parentOwner:
          displayName: displayName
          id: id
          href: href
          contentAccessMode: contentAccessMode
          key: key
        autobindHypervisorDisabled: true
        contentAccessModeList: contentAccessModeList
        logLevel: logLevel
        anonymous: true
        id: id
        contentAccessMode: contentAccessMode
        updated: 2000-01-23T04:56:07.000+00:00
        autobindDisabled: true
        key: key
    OwnerInfo:
      description: Represents owner information
      example:
        entitlementsConsumedByType:
          key: 1
        consumerCounts:
          key: 0
        consumerTypeCountByPool:
          key: 5
        consumerCountsByComplianceStatus:
          key: 2
        entitlementsConsumedByFamily:
          key:
            guest: 9
            physical: 7
        consumerGuestCounts:
          key: 6
        enabledConsumerTypeCountByPool:
          key: 5
      properties:
        consumerCounts:
          additionalProperties:
            type: integer
          type: object
        consumerGuestCounts:
          additionalProperties:
            type: integer
          type: object
        entitlementsConsumedByType:
          additionalProperties:
            type: integer
          type: object
        consumerTypeCountByPool:
          additionalProperties:
            type: integer
          type: object
        enabledConsumerTypeCountByPool:
          additionalProperties:
            type: integer
          type: object
        consumerCountsByComplianceStatus:
          additionalProperties:
            type: integer
          type: object
        entitlementsConsumedByFamily:
          additionalProperties:
            $ref: '#/components/schemas/ConsumptionTypeCountsDTO'
          type: object
      required:
      - consumerCounts
      - consumerCountsByComplianceStatus
      - consumerGuestCounts
      - consumerTypeCountByPool
      - enabledConsumerTypeCountByPool
      - entitlementsConsumedByFamily
      - entitlementsConsumedByType
      type: object
    PermissionBlueprintDTO:
      allOf:
      - $ref: '#/components/schemas/TimestampedEntity'
      - properties:
          id:
            example: ff808081554a3e4101554a3e9033005d
            type: string
          owner:
            $ref: '#/components/schemas/NestedOwnerDTO'
          type:
            example: OWNER
            type: string
          access:
            example: NONE
            type: string
        type: object
      description: Represents the permission blueprints exposed to the API layer
      example:
        owner:
          displayName: displayName
          id: id
          href: href
          contentAccessMode: contentAccessMode
          key: key
        access: NONE
        created: 2000-01-23T04:56:07.000+00:00
        id: ff808081554a3e4101554a3e9033005d
        type: OWNER
        updated: 2000-01-23T04:56:07.000+00:00
    PoolDTO:
      allOf:
      - $ref: '#/components/schemas/TimestampedEntity'
      - properties:
          id:
            type: string
          type:
            type: string
          owner:
            $ref: '#/components/schemas/NestedOwnerDTO'
          activeSubscription:
            type: boolean
          sourceEntitlement:
            $ref: '#/components/schemas/NestedEntitlementDTO'
          quantity:
            format: int64
            type: integer
          startDate:
            format: date-time
            type: string
          endDate:
            format: date-time
            type: string
          attributes:
            items:
              $ref: '#/components/schemas/AttributeDTO'
            type: array
          restrictedToUsername:
            type: string
          contractNumber:
            type: string
          accountNumber:
            type: string
          orderNumber:
            type: string
          consumed:
            format: int64
            type: integer
          exported:
            format: int64
            type: integer
          branding:
            items:
              $ref: '#/components/schemas/BrandingDTO'
            type: array
            uniqueItems: true
          calculatedAttributes:
            additionalProperties:
              type: string
            type: object
          upstreamPoolId:
            type: string
          upstreamEntitlementId:
            type: string
          upstreamConsumerId:
            type: string
          productName:
            type: string
          productId:
            type: string
          productAttributes:
            items:
              $ref: '#/components/schemas/AttributeDTO'
            type: array
          stackId:
            type: string
          stacked:
            type: boolean
          sourceStackId:
            type: string
          developmentPool:
            type: boolean
          href:
            type: string
          derivedProductAttributes:
            items:
              $ref: '#/components/schemas/AttributeDTO'
            type: array
          derivedProductId:
            type: string
          derivedProductName:
            type: string
          providedProducts:
            items:
              $ref: '#/components/schemas/ProvidedProductDTO'
            type: array
            uniqueItems: true
          derivedProvidedProducts:
            items:
              $ref: '#/components/schemas/ProvidedProductDTO'
            type: array
            uniqueItems: true
          subscriptionSubKey:
            type: string
          subscriptionId:
            type: string
          managed:
            type: boolean
        type: object
      description: Represents a pool of products eligible to be consumed (entitled)
      example:
        consumed: 6
        orderNumber: orderNumber
        stacked: true
        derivedProductAttributes:
        - name: name
          value: value
        - name: name
          value: value
        endDate: 2000-01-23T04:56:07.000+00:00
        calculatedAttributes:
          key: calculatedAttributes
        branding:
        - productId: productId
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          type: type
          updated: 2000-01-23T04:56:07.000+00:00
        - productId: productId
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          type: type
          updated: 2000-01-23T04:56:07.000+00:00
        type: type
        productName: productName
        upstreamEntitlementId: upstreamEntitlementId
        upstreamConsumerId: upstreamConsumerId
        managed: true
        derivedProductId: derivedProductId
        id: id
        href: href
        sourceEntitlement:
          id: id
          href: href
        activeSubscription: true
        developmentPool: true
        owner:
          displayName: displayName
          id: id
          href: href
          contentAccessMode: contentAccessMode
          key: key
        exported: 1
        quantity: 0
        productId: productId
        providedProducts:
        - productId: productId
          productName: productName
        - productId: productId
          productName: productName
        created: 2000-01-23T04:56:07.000+00:00
        productAttributes:
        - name: name
          value: value
        - name: name
          value: value
        stackId: stackId
        contractNumber: contractNumber
        accountNumber: accountNumber
        upstreamPoolId: upstreamPoolId
        sourceStackId: sourceStackId
        subscriptionSubKey: subscriptionSubKey
        attributes:
        - name: name
          value: value
        - name: name
          value: value
        restrictedToUsername: restrictedToUsername
        subscriptionId: subscriptionId
        updated: 2000-01-23T04:56:07.000+00:00
        startDate: 2000-01-23T04:56:07.000+00:00
        derivedProductName: derivedProductName
        derivedProvidedProducts:
        - productId: productId
          productName: productName
        - productId: productId
          productName: productName
    PoolQuantityDTO:
      description: DTO representing pool quantity & pool.
      example:
        quantity: 0
        pool:
          consumed: 6
          orderNumber: orderNumber
          stacked: true
          derivedProductAttributes:
          - name: name
            value: value
          - name: name
            value: value
          endDate: 2000-01-23T04:56:07.000+00:00
          calculatedAttributes:
            key: calculatedAttributes
          branding:
          - productId: productId
            created: 2000-01-23T04:56:07.000+00:00
            name: name
            type: type
            updated: 2000-01-23T04:56:07.000+00:00
          - productId: productId
            created: 2000-01-23T04:56:07.000+00:00
            name: name
            type: type
            updated: 2000-01-23T04:56:07.000+00:00
          type: type
          productName: productName
          upstreamEntitlementId: upstreamEntitlementId
          upstreamConsumerId: upstreamConsumerId
          managed: true
          derivedProductId: derivedProductId
          id: id
          href: href
          sourceEntitlement:
            id: id
            href: href
          activeSubscription: true
          developmentPool: true
          owner:
            displayName: displayName
            id: id
            href: href
            contentAccessMode: contentAccessMode
            key: key
          exported: 1
          quantity: 0
          productId: productId
          providedProducts:
          - productId: productId
            productName: productName
          - productId: productId
            productName: productName
          created: 2000-01-23T04:56:07.000+00:00
          productAttributes:
          - name: name
            value: value
          - name: name
            value: value
          stackId: stackId
          contractNumber: contractNumber
          accountNumber: accountNumber
          upstreamPoolId: upstreamPoolId
          sourceStackId: sourceStackId
          subscriptionSubKey: subscriptionSubKey
          attributes:
          - name: name
            value: value
          - name: name
            value: value
          restrictedToUsername: restrictedToUsername
          subscriptionId: subscriptionId
          updated: 2000-01-23T04:56:07.000+00:00
          startDate: 2000-01-23T04:56:07.000+00:00
          derivedProductName: derivedProductName
          derivedProvidedProducts:
          - productId: productId
            productName: productName
          - productId: productId
            productName: productName
      properties:
        quantity:
          type: integer
        pool:
          $ref: '#/components/schemas/PoolDTO'
    ProductContentDTO:
      description: Product content mapping exposed to the API
      example:
        content:
          created: 2000-01-23T04:56:07.000+00:00
          modifiedProductIds: "[5051,5052,5053]"
          label: content_label
          type: yum
          gpgUrl: /admin/foo/example/gpg/path
          uuid: ff808081554a3e4101554a3e9033005d
          releaseVer: 1.2.3
          contentUrl: /admin/foo/example/path
          requiredTags: "TAG1,TAG2"
          vendor: example-vendor
          metadataExpire: 1467124079
          name: content_name
          id: "5001"
          updated: 2000-01-23T04:56:07.000+00:00
          arches: x86_64
        enabled: true
      properties:
        content:
          $ref: '#/components/schemas/ContentDTO'
        enabled:
          type: boolean
      required:
      - content
    ProductCertificateDTO:
      allOf:
      - $ref: '#/components/schemas/TimestampedEntity'
      - properties:
          key:
            type: string
          cert:
            type: string
        type: object
      description: DTO representing product certificates presented to the API
      example:
        created: 2000-01-23T04:56:07.000+00:00
        cert: cert
        updated: 2000-01-23T04:56:07.000+00:00
        key: key
    ProductDTO:
      allOf:
      - $ref: '#/components/schemas/TimestampedEntity'
      - properties:
          id:
            example: "5051"
            type: string
          uuid:
            example: ff808081554a3e4101554a3e9033005d
            type: string
          name:
            example: Admin OS Developer Bits
            type: string
          multiplier:
            example: 1
            format: int64
            type: integer
          attributes:
            items:
              $ref: '#/components/schemas/AttributeDTO'
            type: array
          productContent:
            items:
              $ref: '#/components/schemas/ProductContentDTO'
            type: array
            uniqueItems: true
          dependentProductIds:
            items:
              type: string
            type: array
            uniqueItems: true
          branding:
            items:
              $ref: '#/components/schemas/BrandingDTO'
            type: array
            uniqueItems: true
          derivedProduct:
            $ref: '#/components/schemas/ProductDTO'
          providedProducts:
            items:
              $ref: '#/components/schemas/ProductDTO'
            type: array
            uniqueItems: true
          href:
            example: /products/ff808081554a3e4101554a3e9033005d
            type: string
        type: object
      description: DTO representing the product data exposed to the API
      example:
        derivedProduct: null
        providedProducts:
        - null
        - null
        created: 2000-01-23T04:56:07.000+00:00
        multiplier: 1
        branding:
        - productId: productId
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          type: type
          updated: 2000-01-23T04:56:07.000+00:00
        - productId: productId
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          type: type
          updated: 2000-01-23T04:56:07.000+00:00
        uuid: ff808081554a3e4101554a3e9033005d
        dependentProductIds:
        - dependentProductIds
        - dependentProductIds
        productContent:
        - content:
            created: 2000-01-23T04:56:07.000+00:00
            modifiedProductIds: "[5051,5052,5053]"
            label: content_label
            type: yum
            gpgUrl: /admin/foo/example/gpg/path
            uuid: ff808081554a3e4101554a3e9033005d
            releaseVer: 1.2.3
            contentUrl: /admin/foo/example/path
            requiredTags: "TAG1,TAG2"
            vendor: example-vendor
            metadataExpire: 1467124079
            name: content_name
            id: "5001"
            updated: 2000-01-23T04:56:07.000+00:00
            arches: x86_64
          enabled: true
        - content:
            created: 2000-01-23T04:56:07.000+00:00
            modifiedProductIds: "[5051,5052,5053]"
            label: content_label
            type: yum
            gpgUrl: /admin/foo/example/gpg/path
            uuid: ff808081554a3e4101554a3e9033005d
            releaseVer: 1.2.3
            contentUrl: /admin/foo/example/path
            requiredTags: "TAG1,TAG2"
            vendor: example-vendor
            metadataExpire: 1467124079
            name: content_name
            id: "5001"
            updated: 2000-01-23T04:56:07.000+00:00
            arches: x86_64
          enabled: true
        name: Admin OS Developer Bits
        attributes:
        - name: name
          value: value
        - name: name
          value: value
        id: "5051"
        href: /products/ff808081554a3e4101554a3e9033005d
        updated: 2000-01-23T04:56:07.000+00:00
    ProvidedProductDTO:
      description: ProvidedProduct DTO representation
      example:
        productId: productId
        productName: productName
      properties:
        productId:
          minLength: 1
          type: string
        productName:
          type: string
      required:
      - productId
    QueueStatus:
      description: |
        Represents status of the ActiveMQ queues. Used for checking if events
        are piling up for some reason or being delivered correctly.
      example:
        queueName: queueName
        pendingMessageCount: 0
      properties:
        queueName:
          type: string
        pendingMessageCount:
          format: int64
          type: integer
    ReleaseVerDTO:
      example:
        releaseVer: releaseVer
      properties:
        releaseVer:
          type: string
    RoleDTO:
      allOf:
      - $ref: '#/components/schemas/TimestampedEntity'
      - properties:
          id:
            example: ff808081554a3e4101554a3e9033005d
            type: string
          name:
            example: admin-all
            type: string
          users:
            items:
              $ref: '#/components/schemas/UserDTO'
            type: array
            uniqueItems: true
          permissions:
            items:
              $ref: '#/components/schemas/PermissionBlueprintDTO'
            type: array
        type: object
      description: Represent the relationship between users and the permissions they
        have
      example:
        created: 2000-01-23T04:56:07.000+00:00
        permissions:
        - owner:
            displayName: displayName
            id: id
            href: href
            contentAccessMode: contentAccessMode
            key: key
          access: NONE
          created: 2000-01-23T04:56:07.000+00:00
          id: ff808081554a3e4101554a3e9033005d
          type: OWNER
          updated: 2000-01-23T04:56:07.000+00:00
        - owner:
            displayName: displayName
            id: id
            href: href
            contentAccessMode: contentAccessMode
            key: key
          access: NONE
          created: 2000-01-23T04:56:07.000+00:00
          id: ff808081554a3e4101554a3e9033005d
          type: OWNER
          updated: 2000-01-23T04:56:07.000+00:00
        name: admin-all
        id: ff808081554a3e4101554a3e9033005d
        updated: 2000-01-23T04:56:07.000+00:00
        users:
        - password: secret_banana
          created: 2000-01-23T04:56:07.000+00:00
          id: ff808081554a3e4101554a3e9033005d
          updated: 2000-01-23T04:56:07.000+00:00
          superAdmin: true
          username: admin
        - password: secret_banana
          created: 2000-01-23T04:56:07.000+00:00
          id: ff808081554a3e4101554a3e9033005d
          updated: 2000-01-23T04:56:07.000+00:00
          superAdmin: true
          username: admin
    SchedulerStatusDTO:
      description: Represents scheduler status
      example:
        isRunning: true
      properties:
        isRunning:
          type: boolean
    StatusDTO:
      description: Version and Status information about running Candlepin server
      example:
        modeReason: modeReason
        deviceAuthScope: deviceAuthScope
        deviceAuthClientId: deviceAuthClientId
        release: release
        keycloakResource: keycloakResource
        standalone: true
        version: 0.9.10
        rulesSource: rulesSource
        mode: mode
        result: true
        rulesVersion: "5.8"
        keycloakAuthUrl: keycloakAuthUrl
        managerCapabilities:
        - managerCapabilities
        - managerCapabilities
        timeUTC: 2000-01-23T04:56:07.000+00:00
        deviceAuthUrl: deviceAuthUrl
        deviceAuthRealm: deviceAuthRealm
        modeChangeTime: 2000-01-23T04:56:07.000+00:00
        keycloakRealm: keycloakRealm
      properties:
        mode:
          type: string
        modeReason:
          type: string
        modeChangeTime:
          format: date-time
          type: string
        result:
          example: true
          type: boolean
        version:
          example: 0.9.10
          type: string
        release:
          type: string
        standalone:
          type: boolean
        timeUTC:
          format: date-time
          type: string
        rulesSource:
          type: string
        rulesVersion:
          example: "5.8"
          type: string
        managerCapabilities:
          items:
            type: string
          type: array
          uniqueItems: true
        keycloakRealm:
          type: string
        keycloakAuthUrl:
          type: string
        keycloakResource:
          type: string
        deviceAuthRealm:
          type: string
        deviceAuthUrl:
          type: string
        deviceAuthClientId:
          type: string
        deviceAuthScope:
          type: string
    SubscriptionDTO:
      allOf:
      - $ref: '#/components/schemas/TimestampedEntity'
      - properties:
          id:
            type: string
          owner:
            $ref: '#/components/schemas/NestedOwnerDTO'
          product:
            $ref: '#/components/schemas/ProductDTO'
          derivedProduct:
            $ref: '#/components/schemas/ProductDTO'
          providedProducts:
            items:
              $ref: '#/components/schemas/ProductDTO'
            type: array
            uniqueItems: true
          derivedProvidedProducts:
            items:
              $ref: '#/components/schemas/ProductDTO'
            type: array
            uniqueItems: true
          quantity:
            format: int64
            type: integer
          startDate:
            format: date-time
            type: string
          endDate:
            format: date-time
            type: string
          contractNumber:
            type: string
          accountNumber:
            type: string
          modified:
            format: date-time
            type: string
          lastModified:
            format: date-time
            type: string
          orderNumber:
            type: string
          upstreamPoolId:
            type: string
          upstreamEntitlementId:
            type: string
          upstreamConsumerId:
            type: string
          certificate:
            $ref: '#/components/schemas/CertificateDTO'
          cdn:
            $ref: '#/components/schemas/CdnDTO'
          stacked:
            type: boolean
          stackId:
            type: string
        type: object
      description: Represents the Subscription data exposed to the API
      example:
        owner:
          displayName: displayName
          id: id
          href: href
          contentAccessMode: contentAccessMode
          key: key
        derivedProduct:
          derivedProduct: null
          providedProducts:
          - null
          - null
          created: 2000-01-23T04:56:07.000+00:00
          multiplier: 1
          branding:
          - productId: productId
            created: 2000-01-23T04:56:07.000+00:00
            name: name
            type: type
            updated: 2000-01-23T04:56:07.000+00:00
          - productId: productId
            created: 2000-01-23T04:56:07.000+00:00
            name: name
            type: type
            updated: 2000-01-23T04:56:07.000+00:00
          uuid: ff808081554a3e4101554a3e9033005d
          dependentProductIds:
          - dependentProductIds
          - dependentProductIds
          productContent:
          - content:
              created: 2000-01-23T04:56:07.000+00:00
              modifiedProductIds: "[5051,5052,5053]"
              label: content_label
              type: yum
              gpgUrl: /admin/foo/example/gpg/path
              uuid: ff808081554a3e4101554a3e9033005d
              releaseVer: 1.2.3
              contentUrl: /admin/foo/example/path
              requiredTags: "TAG1,TAG2"
              vendor: example-vendor
              metadataExpire: 1467124079
              name: content_name
              id: "5001"
              updated: 2000-01-23T04:56:07.000+00:00
              arches: x86_64
            enabled: true
          - content:
              created: 2000-01-23T04:56:07.000+00:00
              modifiedProductIds: "[5051,5052,5053]"
              label: content_label
              type: yum
              gpgUrl: /admin/foo/example/gpg/path
              uuid: ff808081554a3e4101554a3e9033005d
              releaseVer: 1.2.3
              contentUrl: /admin/foo/example/path
              requiredTags: "TAG1,TAG2"
              vendor: example-vendor
              metadataExpire: 1467124079
              name: content_name
              id: "5001"
              updated: 2000-01-23T04:56:07.000+00:00
              arches: x86_64
            enabled: true
          name: Admin OS Developer Bits
          attributes:
          - name: name
            value: value
          - name: name
            value: value
          id: "5051"
          href: /products/ff808081554a3e4101554a3e9033005d
          updated: 2000-01-23T04:56:07.000+00:00
        product:
          derivedProduct: null
          providedProducts:
          - null
          - null
          created: 2000-01-23T04:56:07.000+00:00
          multiplier: 1
          branding:
          - productId: productId
            created: 2000-01-23T04:56:07.000+00:00
            name: name
            type: type
            updated: 2000-01-23T04:56:07.000+00:00
          - productId: productId
            created: 2000-01-23T04:56:07.000+00:00
            name: name
            type: type
            updated: 2000-01-23T04:56:07.000+00:00
          uuid: ff808081554a3e4101554a3e9033005d
          dependentProductIds:
          - dependentProductIds
          - dependentProductIds
          productContent:
          - content:
              created: 2000-01-23T04:56:07.000+00:00
              modifiedProductIds: "[5051,5052,5053]"
              label: content_label
              type: yum
              gpgUrl: /admin/foo/example/gpg/path
              uuid: ff808081554a3e4101554a3e9033005d
              releaseVer: 1.2.3
              contentUrl: /admin/foo/example/path
              requiredTags: "TAG1,TAG2"
              vendor: example-vendor
              metadataExpire: 1467124079
              name: content_name
              id: "5001"
              updated: 2000-01-23T04:56:07.000+00:00
              arches: x86_64
            enabled: true
          - content:
              created: 2000-01-23T04:56:07.000+00:00
              modifiedProductIds: "[5051,5052,5053]"
              label: content_label
              type: yum
              gpgUrl: /admin/foo/example/gpg/path
              uuid: ff808081554a3e4101554a3e9033005d
              releaseVer: 1.2.3
              contentUrl: /admin/foo/example/path
              requiredTags: "TAG1,TAG2"
              vendor: example-vendor
              metadataExpire: 1467124079
              name: content_name
              id: "5001"
              updated: 2000-01-23T04:56:07.000+00:00
              arches: x86_64
            enabled: true
          name: Admin OS Developer Bits
          attributes:
          - name: name
            value: value
          - name: name
            value: value
          id: "5051"
          href: /products/ff808081554a3e4101554a3e9033005d
          updated: 2000-01-23T04:56:07.000+00:00
        quantity: 0
        orderNumber: orderNumber
        stacked: true
        providedProducts:
        - derivedProduct: null
          providedProducts:
          - null
          - null
          created: 2000-01-23T04:56:07.000+00:00
          multiplier: 1
          branding:
          - productId: productId
            created: 2000-01-23T04:56:07.000+00:00
            name: name
            type: type
            updated: 2000-01-23T04:56:07.000+00:00
          - productId: productId
            created: 2000-01-23T04:56:07.000+00:00
            name: name
            type: type
            updated: 2000-01-23T04:56:07.000+00:00
          uuid: ff808081554a3e4101554a3e9033005d
          dependentProductIds:
          - dependentProductIds
          - dependentProductIds
          productContent:
          - content:
              created: 2000-01-23T04:56:07.000+00:00
              modifiedProductIds: "[5051,5052,5053]"
              label: content_label
              type: yum
              gpgUrl: /admin/foo/example/gpg/path
              uuid: ff808081554a3e4101554a3e9033005d
              releaseVer: 1.2.3
              contentUrl: /admin/foo/example/path
              requiredTags: "TAG1,TAG2"
              vendor: example-vendor
              metadataExpire: 1467124079
              name: content_name
              id: "5001"
              updated: 2000-01-23T04:56:07.000+00:00
              arches: x86_64
            enabled: true
          - content:
              created: 2000-01-23T04:56:07.000+00:00
              modifiedProductIds: "[5051,5052,5053]"
              label: content_label
              type: yum
              gpgUrl: /admin/foo/example/gpg/path
              uuid: ff808081554a3e4101554a3e9033005d
              releaseVer: 1.2.3
              contentUrl: /admin/foo/example/path
              requiredTags: "TAG1,TAG2"
              vendor: example-vendor
              metadataExpire: 1467124079
              name: content_name
              id: "5001"
              updated: 2000-01-23T04:56:07.000+00:00
              arches: x86_64
            enabled: true
          name: Admin OS Developer Bits
          attributes:
          - name: name
            value: value
          - name: name
            value: value
          id: "5051"
          href: /products/ff808081554a3e4101554a3e9033005d
          updated: 2000-01-23T04:56:07.000+00:00
        - derivedProduct: null
          providedProducts:
          - null
          - null
          created: 2000-01-23T04:56:07.000+00:00
          multiplier: 1
          branding:
          - productId: productId
            created: 2000-01-23T04:56:07.000+00:00
            name: name
            type: type
            updated: 2000-01-23T04:56:07.000+00:00
          - productId: productId
            created: 2000-01-23T04:56:07.000+00:00
            name: name
            type: type
            updated: 2000-01-23T04:56:07.000+00:00
          uuid: ff808081554a3e4101554a3e9033005d
          dependentProductIds:
          - dependentProductIds
          - dependentProductIds
          productContent:
          - content:
              created: 2000-01-23T04:56:07.000+00:00
              modifiedProductIds: "[5051,5052,5053]"
              label: content_label
              type: yum
              gpgUrl: /admin/foo/example/gpg/path
              uuid: ff808081554a3e4101554a3e9033005d
              releaseVer: 1.2.3
              contentUrl: /admin/foo/example/path
              requiredTags: "TAG1,TAG2"
              vendor: example-vendor
              metadataExpire: 1467124079
              name: content_name
              id: "5001"
              updated: 2000-01-23T04:56:07.000+00:00
              arches: x86_64
            enabled: true
          - content:
              created: 2000-01-23T04:56:07.000+00:00
              modifiedProductIds: "[5051,5052,5053]"
              label: content_label
              type: yum
              gpgUrl: /admin/foo/example/gpg/path
              uuid: ff808081554a3e4101554a3e9033005d
              releaseVer: 1.2.3
              contentUrl: /admin/foo/example/path
              requiredTags: "TAG1,TAG2"
              vendor: example-vendor
              metadataExpire: 1467124079
              name: content_name
              id: "5001"
              updated: 2000-01-23T04:56:07.000+00:00
              arches: x86_64
            enabled: true
          name: Admin OS Developer Bits
          attributes:
          - name: name
            value: value
          - name: name
            value: value
          id: "5051"
          href: /products/ff808081554a3e4101554a3e9033005d
          updated: 2000-01-23T04:56:07.000+00:00
        endDate: 2000-01-23T04:56:07.000+00:00
        created: 2000-01-23T04:56:07.000+00:00
        stackId: stackId
        certificate:
          serial:
            serial: 1
            created: 2000-01-23T04:56:07.000+00:00
            expiration: 2000-01-23T04:56:07.000+00:00
            id: 6
            revoked: true
            updated: 2000-01-23T04:56:07.000+00:00
          created: 2000-01-23T04:56:07.000+00:00
          cert: cert
          id: id
          updated: 2000-01-23T04:56:07.000+00:00
          key: key
        contractNumber: contractNumber
        accountNumber: accountNumber
        cdn:
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          certificate:
            serial:
              serial: 1
              created: 2000-01-23T04:56:07.000+00:00
              expiration: 2000-01-23T04:56:07.000+00:00
              id: 6
              revoked: true
              updated: 2000-01-23T04:56:07.000+00:00
            created: 2000-01-23T04:56:07.000+00:00
            cert: cert
            id: id
            updated: 2000-01-23T04:56:07.000+00:00
            key: key
          id: id
          label: label
          updated: 2000-01-23T04:56:07.000+00:00
          url: url
        upstreamPoolId: upstreamPoolId
        upstreamEntitlementId: upstreamEntitlementId
        upstreamConsumerId: upstreamConsumerId
        modified: 2000-01-23T04:56:07.000+00:00
        id: id
        lastModified: 2000-01-23T04:56:07.000+00:00
        updated: 2000-01-23T04:56:07.000+00:00
        derivedProvidedProducts:
        - derivedProduct: null
          providedProducts:
          - null
          - null
          created: 2000-01-23T04:56:07.000+00:00
          multiplier: 1
          branding:
          - productId: productId
            created: 2000-01-23T04:56:07.000+00:00
            name: name
            type: type
            updated: 2000-01-23T04:56:07.000+00:00
          - productId: productId
            created: 2000-01-23T04:56:07.000+00:00
            name: name
            type: type
            updated: 2000-01-23T04:56:07.000+00:00
          uuid: ff808081554a3e4101554a3e9033005d
          dependentProductIds:
          - dependentProductIds
          - dependentProductIds
          productContent:
          - content:
              created: 2000-01-23T04:56:07.000+00:00
              modifiedProductIds: "[5051,5052,5053]"
              label: content_label
              type: yum
              gpgUrl: /admin/foo/example/gpg/path
              uuid: ff808081554a3e4101554a3e9033005d
              releaseVer: 1.2.3
              contentUrl: /admin/foo/example/path
              requiredTags: "TAG1,TAG2"
              vendor: example-vendor
              metadataExpire: 1467124079
              name: content_name
              id: "5001"
              updated: 2000-01-23T04:56:07.000+00:00
              arches: x86_64
            enabled: true
          - content:
              created: 2000-01-23T04:56:07.000+00:00
              modifiedProductIds: "[5051,5052,5053]"
              label: content_label
              type: yum
              gpgUrl: /admin/foo/example/gpg/path
              uuid: ff808081554a3e4101554a3e9033005d
              releaseVer: 1.2.3
              contentUrl: /admin/foo/example/path
              requiredTags: "TAG1,TAG2"
              vendor: example-vendor
              metadataExpire: 1467124079
              name: content_name
              id: "5001"
              updated: 2000-01-23T04:56:07.000+00:00
              arches: x86_64
            enabled: true
          name: Admin OS Developer Bits
          attributes:
          - name: name
            value: value
          - name: name
            value: value
          id: "5051"
          href: /products/ff808081554a3e4101554a3e9033005d
          updated: 2000-01-23T04:56:07.000+00:00
        - derivedProduct: null
          providedProducts:
          - null
          - null
          created: 2000-01-23T04:56:07.000+00:00
          multiplier: 1
          branding:
          - productId: productId
            created: 2000-01-23T04:56:07.000+00:00
            name: name
            type: type
            updated: 2000-01-23T04:56:07.000+00:00
          - productId: productId
            created: 2000-01-23T04:56:07.000+00:00
            name: name
            type: type
            updated: 2000-01-23T04:56:07.000+00:00
          uuid: ff808081554a3e4101554a3e9033005d
          dependentProductIds:
          - dependentProductIds
          - dependentProductIds
          productContent:
          - content:
              created: 2000-01-23T04:56:07.000+00:00
              modifiedProductIds: "[5051,5052,5053]"
              label: content_label
              type: yum
              gpgUrl: /admin/foo/example/gpg/path
              uuid: ff808081554a3e4101554a3e9033005d
              releaseVer: 1.2.3
              contentUrl: /admin/foo/example/path
              requiredTags: "TAG1,TAG2"
              vendor: example-vendor
              metadataExpire: 1467124079
              name: content_name
              id: "5001"
              updated: 2000-01-23T04:56:07.000+00:00
              arches: x86_64
            enabled: true
          - content:
              created: 2000-01-23T04:56:07.000+00:00
              modifiedProductIds: "[5051,5052,5053]"
              label: content_label
              type: yum
              gpgUrl: /admin/foo/example/gpg/path
              uuid: ff808081554a3e4101554a3e9033005d
              releaseVer: 1.2.3
              contentUrl: /admin/foo/example/path
              requiredTags: "TAG1,TAG2"
              vendor: example-vendor
              metadataExpire: 1467124079
              name: content_name
              id: "5001"
              updated: 2000-01-23T04:56:07.000+00:00
              arches: x86_64
            enabled: true
          name: Admin OS Developer Bits
          attributes:
          - name: name
            value: value
          - name: name
            value: value
          id: "5051"
          href: /products/ff808081554a3e4101554a3e9033005d
          updated: 2000-01-23T04:56:07.000+00:00
        startDate: 2000-01-23T04:56:07.000+00:00
    SystemPurposeAttributesDTO:
      description: Represents system purpose attribute details
      example:
        owner:
          displayName: displayName
          id: id
          href: href
          contentAccessMode: contentAccessMode
          key: key
        systemPurposeAttributes:
          key:
          - systemPurposeAttributes
          - systemPurposeAttributes
      properties:
        owner:
          $ref: '#/components/schemas/NestedOwnerDTO'
        systemPurposeAttributes:
          additionalProperties:
            items:
              type: string
            type: array
            uniqueItems: true
          type: object
    SystemPurposeComplianceStatusDTO:
      description: DTO representing system purpose compliance status
      example:
        date: 2000-01-23T04:56:07.000+00:00
        nonCompliantUsage: nonCompliantUsage
        nonCompliantRole: nonCompliantRole
        reasons:
        - reasons
        - reasons
        nonCompliantServiceType: nonCompliantServiceType
        compliantSLA:
          key:
          - quantity: 0
            certificates:
            - serial:
                serial: 1
                created: 2000-01-23T04:56:07.000+00:00
                expiration: 2000-01-23T04:56:07.000+00:00
                id: 6
                revoked: true
                updated: 2000-01-23T04:56:07.000+00:00
              created: 2000-01-23T04:56:07.000+00:00
              cert: cert
              id: id
              updated: 2000-01-23T04:56:07.000+00:00
              key: key
            - serial:
                serial: 1
                created: 2000-01-23T04:56:07.000+00:00
                expiration: 2000-01-23T04:56:07.000+00:00
                id: 6
                revoked: true
                updated: 2000-01-23T04:56:07.000+00:00
              created: 2000-01-23T04:56:07.000+00:00
              cert: cert
              id: id
              updated: 2000-01-23T04:56:07.000+00:00
              key: key
            endDate: 2000-01-23T04:56:07.000+00:00
            created: 2000-01-23T04:56:07.000+00:00
            pool:
              consumed: 6
              orderNumber: orderNumber
              stacked: true
              derivedProductAttributes:
              - name: name
                value: value
              - name: name
                value: value
              endDate: 2000-01-23T04:56:07.000+00:00
              calculatedAttributes:
                key: calculatedAttributes
              branding:
              - productId: productId
                created: 2000-01-23T04:56:07.000+00:00
                name: name
                type: type
                updated: 2000-01-23T04:56:07.000+00:00
              - productId: productId
                created: 2000-01-23T04:56:07.000+00:00
                name: name
                type: type
                updated: 2000-01-23T04:56:07.000+00:00
              type: type
              productName: productName
              upstreamEntitlementId: upstreamEntitlementId
              upstreamConsumerId: upstreamConsumerId
              managed: true
              derivedProductId: derivedProductId
              id: id
              href: href
              sourceEntitlement:
                id: id
                href: href
              activeSubscription: true
              developmentPool: true
              owner:
                displayName: displayName
                id: id
                href: href
                contentAccessMode: contentAccessMode
                key: key
              exported: 1
              quantity: 0
              productId: productId
              providedProducts:
              - productId: productId
                productName: productName
              - productId: productId
                productName: productName
              created: 2000-01-23T04:56:07.000+00:00
              productAttributes:
              - name: name
                value: value
              - name: name
                value: value
              stackId: stackId
              contractNumber: contractNumber
              accountNumber: accountNumber
              upstreamPoolId: upstreamPoolId
              sourceStackId: sourceStackId
              subscriptionSubKey: subscriptionSubKey
              attributes:
              - name: name
                value: value
              - name: name
                value: value
              restrictedToUsername: restrictedToUsername
              subscriptionId: subscriptionId
              updated: 2000-01-23T04:56:07.000+00:00
              startDate: 2000-01-23T04:56:07.000+00:00
              derivedProductName: derivedProductName
              derivedProvidedProducts:
              - productId: productId
                productName: productName
              - productId: productId
                productName: productName
            id: id
            href: href
            updated: 2000-01-23T04:56:07.000+00:00
            consumer:
              name: name
              id: id
              href: href
              uuid: uuid
            startDate: 2000-01-23T04:56:07.000+00:00
          - quantity: 0
            certificates:
            - serial:
                serial: 1
                created: 2000-01-23T04:56:07.000+00:00
                expiration: 2000-01-23T04:56:07.000+00:00
                id: 6
                revoked: true
                updated: 2000-01-23T04:56:07.000+00:00
              created: 2000-01-23T04:56:07.000+00:00
              cert: cert
              id: id
              updated: 2000-01-23T04:56:07.000+00:00
              key: key
            - serial:
                serial: 1
                created: 2000-01-23T04:56:07.000+00:00
                expiration: 2000-01-23T04:56:07.000+00:00
                id: 6
                revoked: true
                updated: 2000-01-23T04:56:07.000+00:00
              created: 2000-01-23T04:56:07.000+00:00
              cert: cert
              id: id
              updated: 2000-01-23T04:56:07.000+00:00
              key: key
            endDate: 2000-01-23T04:56:07.000+00:00
            created: 2000-01-23T04:56:07.000+00:00
            pool:
              consumed: 6
              orderNumber: orderNumber
              stacked: true
              derivedProductAttributes:
              - name: name
                value: value
              - name: name
                value: value
              endDate: 2000-01-23T04:56:07.000+00:00
              calculatedAttributes:
                key: calculatedAttributes
              branding:
              - productId: productId
                created: 2000-01-23T04:56:07.000+00:00
                name: name
                type: type
                updated: 2000-01-23T04:56:07.000+00:00
              - productId: productId
                created: 2000-01-23T04:56:07.000+00:00
                name: name
                type: type
                updated: 2000-01-23T04:56:07.000+00:00
              type: type
              productName: productName
              upstreamEntitlementId: upstreamEntitlementId
              upstreamConsumerId: upstreamConsumerId
              managed: true
              derivedProductId: derivedProductId
              id: id
              href: href
              sourceEntitlement:
                id: id
                href: href
              activeSubscription: true
              developmentPool: true
              owner:
                displayName: displayName
                id: id
                href: href
                contentAccessMode: contentAccessMode
                key: key
              exported: 1
              quantity: 0
              productId: productId
              providedProducts:
              - productId: productId
                productName: productName
              - productId: productId
                productName: productName
              created: 2000-01-23T04:56:07.000+00:00
              productAttributes:
              - name: name
                value: value
              - name: name
                value: value
              stackId: stackId
              contractNumber: contractNumber
              accountNumber: accountNumber
              upstreamPoolId: upstreamPoolId
              sourceStackId: sourceStackId
              subscriptionSubKey: subscriptionSubKey
              attributes:
              - name: name
                value: value
              - name: name
                value: value
              restrictedToUsername: restrictedToUsername
              subscriptionId: subscriptionId
              updated: 2000-01-23T04:56:07.000+00:00
              startDate: 2000-01-23T04:56:07.000+00:00
              derivedProductName: derivedProductName
              derivedProvidedProducts:
              - productId: productId
                productName: productName
              - productId: productId
                productName: productName
            id: id
            href: href
            updated: 2000-01-23T04:56:07.000+00:00
            consumer:
              name: name
              id: id
              href: href
              uuid: uuid
            startDate: 2000-01-23T04:56:07.000+00:00
        nonCompliantSLA: nonCompliantSLA
        compliantUsage:
          key:
          - quantity: 0
            certificates:
            - serial:
                serial: 1
                created: 2000-01-23T04:56:07.000+00:00
                expiration: 2000-01-23T04:56:07.000+00:00
                id: 6
                revoked: true
                updated: 2000-01-23T04:56:07.000+00:00
              created: 2000-01-23T04:56:07.000+00:00
              cert: cert
              id: id
              updated: 2000-01-23T04:56:07.000+00:00
              key: key
            - serial:
                serial: 1
                created: 2000-01-23T04:56:07.000+00:00
                expiration: 2000-01-23T04:56:07.000+00:00
                id: 6
                revoked: true
                updated: 2000-01-23T04:56:07.000+00:00
              created: 2000-01-23T04:56:07.000+00:00
              cert: cert
              id: id
              updated: 2000-01-23T04:56:07.000+00:00
              key: key
            endDate: 2000-01-23T04:56:07.000+00:00
            created: 2000-01-23T04:56:07.000+00:00
            pool:
              consumed: 6
              orderNumber: orderNumber
              stacked: true
              derivedProductAttributes:
              - name: name
                value: value
              - name: name
                value: value
              endDate: 2000-01-23T04:56:07.000+00:00
              calculatedAttributes:
                key: calculatedAttributes
              branding:
              - productId: productId
                created: 2000-01-23T04:56:07.000+00:00
                name: name
                type: type
                updated: 2000-01-23T04:56:07.000+00:00
              - productId: productId
                created: 2000-01-23T04:56:07.000+00:00
                name: name
                type: type
                updated: 2000-01-23T04:56:07.000+00:00
              type: type
              productName: productName
              upstreamEntitlementId: upstreamEntitlementId
              upstreamConsumerId: upstreamConsumerId
              managed: true
              derivedProductId: derivedProductId
              id: id
              href: href
              sourceEntitlement:
                id: id
                href: href
              activeSubscription: true
              developmentPool: true
              owner:
                displayName: displayName
                id: id
                href: href
                contentAccessMode: contentAccessMode
                key: key
              exported: 1
              quantity: 0
              productId: productId
              providedProducts:
              - productId: productId
                productName: productName
              - productId: productId
                productName: productName
              created: 2000-01-23T04:56:07.000+00:00
              productAttributes:
              - name: name
                value: value
              - name: name
                value: value
              stackId: stackId
              contractNumber: contractNumber
              accountNumber: accountNumber
              upstreamPoolId: upstreamPoolId
              sourceStackId: sourceStackId
              subscriptionSubKey: subscriptionSubKey
              attributes:
              - name: name
                value: value
              - name: name
                value: value
              restrictedToUsername: restrictedToUsername
              subscriptionId: subscriptionId
              updated: 2000-01-23T04:56:07.000+00:00
              startDate: 2000-01-23T04:56:07.000+00:00
              derivedProductName: derivedProductName
              derivedProvidedProducts:
              - productId: productId
                productName: productName
              - productId: productId
                productName: productName
            id: id
            href: href
            updated: 2000-01-23T04:56:07.000+00:00
            consumer:
              name: name
              id: id
              href: href
              uuid: uuid
            startDate: 2000-01-23T04:56:07.000+00:00
          - quantity: 0
            certificates:
            - serial:
                serial: 1
                created: 2000-01-23T04:56:07.000+00:00
                expiration: 2000-01-23T04:56:07.000+00:00
                id: 6
                revoked: true
                updated: 2000-01-23T04:56:07.000+00:00
              created: 2000-01-23T04:56:07.000+00:00
              cert: cert
              id: id
              updated: 2000-01-23T04:56:07.000+00:00
              key: key
            - serial:
                serial: 1
                created: 2000-01-23T04:56:07.000+00:00
                expiration: 2000-01-23T04:56:07.000+00:00
                id: 6
                revoked: true
                updated: 2000-01-23T04:56:07.000+00:00
              created: 2000-01-23T04:56:07.000+00:00
              cert: cert
              id: id
              updated: 2000-01-23T04:56:07.000+00:00
              key: key
            endDate: 2000-01-23T04:56:07.000+00:00
            created: 2000-01-23T04:56:07.000+00:00
            pool:
              consumed: 6
              orderNumber: orderNumber
              stacked: true
              derivedProductAttributes:
              - name: name
                value: value
              - name: name
                value: value
              endDate: 2000-01-23T04:56:07.000+00:00
              calculatedAttributes:
                key: calculatedAttributes
              branding:
              - productId: productId
                created: 2000-01-23T04:56:07.000+00:00
                name: name
                type: type
                updated: 2000-01-23T04:56:07.000+00:00
              - productId: productId
                created: 2000-01-23T04:56:07.000+00:00
                name: name
                type: type
                updated: 2000-01-23T04:56:07.000+00:00
              type: type
              productName: productName
              upstreamEntitlementId: upstreamEntitlementId
              upstreamConsumerId: upstreamConsumerId
              managed: true
              derivedProductId: derivedProductId
              id: id
              href: href
              sourceEntitlement:
                id: id
                href: href
              activeSubscription: true
              developmentPool: true
              owner:
                displayName: displayName
                id: id
                href: href
                contentAccessMode: contentAccessMode
                key: key
              exported: 1
              quantity: 0
              productId: productId
              providedProducts:
              - productId: productId
                productName: productName
              - productId: productId
                productName: productName
              created: 2000-01-23T04:56:07.000+00:00
              productAttributes:
              - name: name
                value: value
              - name: name
                value: value
              stackId: stackId
              contractNumber: contractNumber
              accountNumber: accountNumber
              upstreamPoolId: upstreamPoolId
              sourceStackId: sourceStackId
              subscriptionSubKey: subscriptionSubKey
              attributes:
              - name: name
                value: value
              - name: name
                value: value
              restrictedToUsername: restrictedToUsername
              subscriptionId: subscriptionId
              updated: 2000-01-23T04:56:07.000+00:00
              startDate: 2000-01-23T04:56:07.000+00:00
              derivedProductName: derivedProductName
              derivedProvidedProducts:
              - productId: productId
                productName: productName
              - productId: productId
                productName: productName
            id: id
            href: href
            updated: 2000-01-23T04:56:07.000+00:00
            consumer:
              name: name
              id: id
              href: href
              uuid: uuid
            startDate: 2000-01-23T04:56:07.000+00:00
        compliantServiceType:
          key:
          - quantity: 0
            certificates:
            - serial:
                serial: 1
                created: 2000-01-23T04:56:07.000+00:00
                expiration: 2000-01-23T04:56:07.000+00:00
                id: 6
                revoked: true
                updated: 2000-01-23T04:56:07.000+00:00
              created: 2000-01-23T04:56:07.000+00:00
              cert: cert
              id: id
              updated: 2000-01-23T04:56:07.000+00:00
              key: key
            - serial:
                serial: 1
                created: 2000-01-23T04:56:07.000+00:00
                expiration: 2000-01-23T04:56:07.000+00:00
                id: 6
                revoked: true
                updated: 2000-01-23T04:56:07.000+00:00
              created: 2000-01-23T04:56:07.000+00:00
              cert: cert
              id: id
              updated: 2000-01-23T04:56:07.000+00:00
              key: key
            endDate: 2000-01-23T04:56:07.000+00:00
            created: 2000-01-23T04:56:07.000+00:00
            pool:
              consumed: 6
              orderNumber: orderNumber
              stacked: true
              derivedProductAttributes:
              - name: name
                value: value
              - name: name
                value: value
              endDate: 2000-01-23T04:56:07.000+00:00
              calculatedAttributes:
                key: calculatedAttributes
              branding:
              - productId: productId
                created: 2000-01-23T04:56:07.000+00:00
                name: name
                type: type
                updated: 2000-01-23T04:56:07.000+00:00
              - productId: productId
                created: 2000-01-23T04:56:07.000+00:00
                name: name
                type: type
                updated: 2000-01-23T04:56:07.000+00:00
              type: type
              productName: productName
              upstreamEntitlementId: upstreamEntitlementId
              upstreamConsumerId: upstreamConsumerId
              managed: true
              derivedProductId: derivedProductId
              id: id
              href: href
              sourceEntitlement:
                id: id
                href: href
              activeSubscription: true
              developmentPool: true
              owner:
                displayName: displayName
                id: id
                href: href
                contentAccessMode: contentAccessMode
                key: key
              exported: 1
              quantity: 0
              productId: productId
              providedProducts:
              - productId: productId
                productName: productName
              - productId: productId
                productName: productName
              created: 2000-01-23T04:56:07.000+00:00
              productAttributes:
              - name: name
                value: value
              - name: name
                value: value
              stackId: stackId
              contractNumber: contractNumber
              accountNumber: accountNumber
              upstreamPoolId: upstreamPoolId
              sourceStackId: sourceStackId
              subscriptionSubKey: subscriptionSubKey
              attributes:
              - name: name
                value: value
              - name: name
                value: value
              restrictedToUsername: restrictedToUsername
              subscriptionId: subscriptionId
              updated: 2000-01-23T04:56:07.000+00:00
              startDate: 2000-01-23T04:56:07.000+00:00
              derivedProductName: derivedProductName
              derivedProvidedProducts:
              - productId: productId
                productName: productName
              - productId: productId
                productName: productName
            id: id
            href: href
            updated: 2000-01-23T04:56:07.000+00:00
            consumer:
              name: name
              id: id
              href: href
              uuid: uuid
            startDate: 2000-01-23T04:56:07.000+00:00
          - quantity: 0
            certificates:
            - serial:
                serial: 1
                created: 2000-01-23T04:56:07.000+00:00
                expiration: 2000-01-23T04:56:07.000+00:00
                id: 6
                revoked: true
                updated: 2000-01-23T04:56:07.000+00:00
              created: 2000-01-23T04:56:07.000+00:00
              cert: cert
              id: id
              updated: 2000-01-23T04:56:07.000+00:00
              key: key
            - serial:
                serial: 1
                created: 2000-01-23T04:56:07.000+00:00
                expiration: 2000-01-23T04:56:07.000+00:00
                id: 6
                revoked: true
                updated: 2000-01-23T04:56:07.000+00:00
              created: 2000-01-23T04:56:07.000+00:00
              cert: cert
              id: id
              updated: 2000-01-23T04:56:07.000+00:00
              key: key
            endDate: 2000-01-23T04:56:07.000+00:00
            created: 2000-01-23T04:56:07.000+00:00
            pool:
              consumed: 6
              orderNumber: orderNumber
              stacked: true
              derivedProductAttributes:
              - name: name
                value: value
              - name: name
                value: value
              endDate: 2000-01-23T04:56:07.000+00:00
              calculatedAttributes:
                key: calculatedAttributes
              branding:
              - productId: productId
                created: 2000-01-23T04:56:07.000+00:00
                name: name
                type: type
                updated: 2000-01-23T04:56:07.000+00:00
              - productId: productId
                created: 2000-01-23T04:56:07.000+00:00
                name: name
                type: type
                updated: 2000-01-23T04:56:07.000+00:00
              type: type
              productName: productName
              upstreamEntitlementId: upstreamEntitlementId
              upstreamConsumerId: upstreamConsumerId
              managed: true
              derivedProductId: derivedProductId
              id: id
              href: href
              sourceEntitlement:
                id: id
                href: href
              activeSubscription: true
              developmentPool: true
              owner:
                displayName: displayName
                id: id
                href: href
                contentAccessMode: contentAccessMode
                key: key
              exported: 1
              quantity: 0
              productId: productId
              providedProducts:
              - productId: productId
                productName: productName
              - productId: productId
                productName: productName
              created: 2000-01-23T04:56:07.000+00:00
              productAttributes:
              - name: name
                value: value
              - name: name
                value: value
              stackId: stackId
              contractNumber: contractNumber
              accountNumber: accountNumber
              upstreamPoolId: upstreamPoolId
              sourceStackId: sourceStackId
              subscriptionSubKey: subscriptionSubKey
              attributes:
              - name: name
                value: value
              - name: name
                value: value
              restrictedToUsername: restrictedToUsername
              subscriptionId: subscriptionId
              updated: 2000-01-23T04:56:07.000+00:00
              startDate: 2000-01-23T04:56:07.000+00:00
              derivedProductName: derivedProductName
              derivedProvidedProducts:
              - productId: productId
                productName: productName
              - productId: productId
                productName: productName
            id: id
            href: href
            updated: 2000-01-23T04:56:07.000+00:00
            consumer:
              name: name
              id: id
              href: href
              uuid: uuid
            startDate: 2000-01-23T04:56:07.000+00:00
        compliantAddOns:
          key:
          - quantity: 0
            certificates:
            - serial:
                serial: 1
                created: 2000-01-23T04:56:07.000+00:00
                expiration: 2000-01-23T04:56:07.000+00:00
                id: 6
                revoked: true
                updated: 2000-01-23T04:56:07.000+00:00
              created: 2000-01-23T04:56:07.000+00:00
              cert: cert
              id: id
              updated: 2000-01-23T04:56:07.000+00:00
              key: key
            - serial:
                serial: 1
                created: 2000-01-23T04:56:07.000+00:00
                expiration: 2000-01-23T04:56:07.000+00:00
                id: 6
                revoked: true
                updated: 2000-01-23T04:56:07.000+00:00
              created: 2000-01-23T04:56:07.000+00:00
              cert: cert
              id: id
              updated: 2000-01-23T04:56:07.000+00:00
              key: key
            endDate: 2000-01-23T04:56:07.000+00:00
            created: 2000-01-23T04:56:07.000+00:00
            pool:
              consumed: 6
              orderNumber: orderNumber
              stacked: true
              derivedProductAttributes:
              - name: name
                value: value
              - name: name
                value: value
              endDate: 2000-01-23T04:56:07.000+00:00
              calculatedAttributes:
                key: calculatedAttributes
              branding:
              - productId: productId
                created: 2000-01-23T04:56:07.000+00:00
                name: name
                type: type
                updated: 2000-01-23T04:56:07.000+00:00
              - productId: productId
                created: 2000-01-23T04:56:07.000+00:00
                name: name
                type: type
                updated: 2000-01-23T04:56:07.000+00:00
              type: type
              productName: productName
              upstreamEntitlementId: upstreamEntitlementId
              upstreamConsumerId: upstreamConsumerId
              managed: true
              derivedProductId: derivedProductId
              id: id
              href: href
              sourceEntitlement:
                id: id
                href: href
              activeSubscription: true
              developmentPool: true
              owner:
                displayName: displayName
                id: id
                href: href
                contentAccessMode: contentAccessMode
                key: key
              exported: 1
              quantity: 0
              productId: productId
              providedProducts:
              - productId: productId
                productName: productName
              - productId: productId
                productName: productName
              created: 2000-01-23T04:56:07.000+00:00
              productAttributes:
              - name: name
                value: value
              - name: name
                value: value
              stackId: stackId
              contractNumber: contractNumber
              accountNumber: accountNumber
              upstreamPoolId: upstreamPoolId
              sourceStackId: sourceStackId
              subscriptionSubKey: subscriptionSubKey
              attributes:
              - name: name
                value: value
              - name: name
                value: value
              restrictedToUsername: restrictedToUsername
              subscriptionId: subscriptionId
              updated: 2000-01-23T04:56:07.000+00:00
              startDate: 2000-01-23T04:56:07.000+00:00
              derivedProductName: derivedProductName
              derivedProvidedProducts:
              - productId: productId
                productName: productName
              - productId: productId
                productName: productName
            id: id
            href: href
            updated: 2000-01-23T04:56:07.000+00:00
            consumer:
              name: name
              id: id
              href: href
              uuid: uuid
            startDate: 2000-01-23T04:56:07.000+00:00
          - quantity: 0
            certificates:
            - serial:
                serial: 1
                created: 2000-01-23T04:56:07.000+00:00
                expiration: 2000-01-23T04:56:07.000+00:00
                id: 6
                revoked: true
                updated: 2000-01-23T04:56:07.000+00:00
              created: 2000-01-23T04:56:07.000+00:00
              cert: cert
              id: id
              updated: 2000-01-23T04:56:07.000+00:00
              key: key
            - serial:
                serial: 1
                created: 2000-01-23T04:56:07.000+00:00
                expiration: 2000-01-23T04:56:07.000+00:00
                id: 6
                revoked: true
                updated: 2000-01-23T04:56:07.000+00:00
              created: 2000-01-23T04:56:07.000+00:00
              cert: cert
              id: id
              updated: 2000-01-23T04:56:07.000+00:00
              key: key
            endDate: 2000-01-23T04:56:07.000+00:00
            created: 2000-01-23T04:56:07.000+00:00
            pool:
              consumed: 6
              orderNumber: orderNumber
              stacked: true
              derivedProductAttributes:
              - name: name
                value: value
              - name: name
                value: value
              endDate: 2000-01-23T04:56:07.000+00:00
              calculatedAttributes:
                key: calculatedAttributes
              branding:
              - productId: productId
                created: 2000-01-23T04:56:07.000+00:00
                name: name
                type: type
                updated: 2000-01-23T04:56:07.000+00:00
              - productId: productId
                created: 2000-01-23T04:56:07.000+00:00
                name: name
                type: type
                updated: 2000-01-23T04:56:07.000+00:00
              type: type
              productName: productName
              upstreamEntitlementId: upstreamEntitlementId
              upstreamConsumerId: upstreamConsumerId
              managed: true
              derivedProductId: derivedProductId
              id: id
              href: href
              sourceEntitlement:
                id: id
                href: href
              activeSubscription: true
              developmentPool: true
              owner:
                displayName: displayName
                id: id
                href: href
                contentAccessMode: contentAccessMode
                key: key
              exported: 1
              quantity: 0
              productId: productId
              providedProducts:
              - productId: productId
                productName: productName
              - productId: productId
                productName: productName
              created: 2000-01-23T04:56:07.000+00:00
              productAttributes:
              - name: name
                value: value
              - name: name
                value: value
              stackId: stackId
              contractNumber: contractNumber
              accountNumber: accountNumber
              upstreamPoolId: upstreamPoolId
              sourceStackId: sourceStackId
              subscriptionSubKey: subscriptionSubKey
              attributes:
              - name: name
                value: value
              - name: name
                value: value
              restrictedToUsername: restrictedToUsername
              subscriptionId: subscriptionId
              updated: 2000-01-23T04:56:07.000+00:00
              startDate: 2000-01-23T04:56:07.000+00:00
              derivedProductName: derivedProductName
              derivedProvidedProducts:
              - productId: productId
                productName: productName
              - productId: productId
                productName: productName
            id: id
            href: href
            updated: 2000-01-23T04:56:07.000+00:00
            consumer:
              name: name
              id: id
              href: href
              uuid: uuid
            startDate: 2000-01-23T04:56:07.000+00:00
        nonCompliantAddOns:
        - nonCompliantAddOns
        - nonCompliantAddOns
        compliantRole:
          key:
          - quantity: 0
            certificates:
            - serial:
                serial: 1
                created: 2000-01-23T04:56:07.000+00:00
                expiration: 2000-01-23T04:56:07.000+00:00
                id: 6
                revoked: true
                updated: 2000-01-23T04:56:07.000+00:00
              created: 2000-01-23T04:56:07.000+00:00
              cert: cert
              id: id
              updated: 2000-01-23T04:56:07.000+00:00
              key: key
            - serial:
                serial: 1
                created: 2000-01-23T04:56:07.000+00:00
                expiration: 2000-01-23T04:56:07.000+00:00
                id: 6
                revoked: true
                updated: 2000-01-23T04:56:07.000+00:00
              created: 2000-01-23T04:56:07.000+00:00
              cert: cert
              id: id
              updated: 2000-01-23T04:56:07.000+00:00
              key: key
            endDate: 2000-01-23T04:56:07.000+00:00
            created: 2000-01-23T04:56:07.000+00:00
            pool:
              consumed: 6
              orderNumber: orderNumber
              stacked: true
              derivedProductAttributes:
              - name: name
                value: value
              - name: name
                value: value
              endDate: 2000-01-23T04:56:07.000+00:00
              calculatedAttributes:
                key: calculatedAttributes
              branding:
              - productId: productId
                created: 2000-01-23T04:56:07.000+00:00
                name: name
                type: type
                updated: 2000-01-23T04:56:07.000+00:00
              - productId: productId
                created: 2000-01-23T04:56:07.000+00:00
                name: name
                type: type
                updated: 2000-01-23T04:56:07.000+00:00
              type: type
              productName: productName
              upstreamEntitlementId: upstreamEntitlementId
              upstreamConsumerId: upstreamConsumerId
              managed: true
              derivedProductId: derivedProductId
              id: id
              href: href
              sourceEntitlement:
                id: id
                href: href
              activeSubscription: true
              developmentPool: true
              owner:
                displayName: displayName
                id: id
                href: href
                contentAccessMode: contentAccessMode
                key: key
              exported: 1
              quantity: 0
              productId: productId
              providedProducts:
              - productId: productId
                productName: productName
              - productId: productId
                productName: productName
              created: 2000-01-23T04:56:07.000+00:00
              productAttributes:
              - name: name
                value: value
              - name: name
                value: value
              stackId: stackId
              contractNumber: contractNumber
              accountNumber: accountNumber
              upstreamPoolId: upstreamPoolId
              sourceStackId: sourceStackId
              subscriptionSubKey: subscriptionSubKey
              attributes:
              - name: name
                value: value
              - name: name
                value: value
              restrictedToUsername: restrictedToUsername
              subscriptionId: subscriptionId
              updated: 2000-01-23T04:56:07.000+00:00
              startDate: 2000-01-23T04:56:07.000+00:00
              derivedProductName: derivedProductName
              derivedProvidedProducts:
              - productId: productId
                productName: productName
              - productId: productId
                productName: productName
            id: id
            href: href
            updated: 2000-01-23T04:56:07.000+00:00
            consumer:
              name: name
              id: id
              href: href
              uuid: uuid
            startDate: 2000-01-23T04:56:07.000+00:00
          - quantity: 0
            certificates:
            - serial:
                serial: 1
                created: 2000-01-23T04:56:07.000+00:00
                expiration: 2000-01-23T04:56:07.000+00:00
                id: 6
                revoked: true
                updated: 2000-01-23T04:56:07.000+00:00
              created: 2000-01-23T04:56:07.000+00:00
              cert: cert
              id: id
              updated: 2000-01-23T04:56:07.000+00:00
              key: key
            - serial:
                serial: 1
                created: 2000-01-23T04:56:07.000+00:00
                expiration: 2000-01-23T04:56:07.000+00:00
                id: 6
                revoked: true
                updated: 2000-01-23T04:56:07.000+00:00
              created: 2000-01-23T04:56:07.000+00:00
              cert: cert
              id: id
              updated: 2000-01-23T04:56:07.000+00:00
              key: key
            endDate: 2000-01-23T04:56:07.000+00:00
            created: 2000-01-23T04:56:07.000+00:00
            pool:
              consumed: 6
              orderNumber: orderNumber
              stacked: true
              derivedProductAttributes:
              - name: name
                value: value
              - name: name
                value: value
              endDate: 2000-01-23T04:56:07.000+00:00
              calculatedAttributes:
                key: calculatedAttributes
              branding:
              - productId: productId
                created: 2000-01-23T04:56:07.000+00:00
                name: name
                type: type
                updated: 2000-01-23T04:56:07.000+00:00
              - productId: productId
                created: 2000-01-23T04:56:07.000+00:00
                name: name
                type: type
                updated: 2000-01-23T04:56:07.000+00:00
              type: type
              productName: productName
              upstreamEntitlementId: upstreamEntitlementId
              upstreamConsumerId: upstreamConsumerId
              managed: true
              derivedProductId: derivedProductId
              id: id
              href: href
              sourceEntitlement:
                id: id
                href: href
              activeSubscription: true
              developmentPool: true
              owner:
                displayName: displayName
                id: id
                href: href
                contentAccessMode: contentAccessMode
                key: key
              exported: 1
              quantity: 0
              productId: productId
              providedProducts:
              - productId: productId
                productName: productName
              - productId: productId
                productName: productName
              created: 2000-01-23T04:56:07.000+00:00
              productAttributes:
              - name: name
                value: value
              - name: name
                value: value
              stackId: stackId
              contractNumber: contractNumber
              accountNumber: accountNumber
              upstreamPoolId: upstreamPoolId
              sourceStackId: sourceStackId
              subscriptionSubKey: subscriptionSubKey
              attributes:
              - name: name
                value: value
              - name: name
                value: value
              restrictedToUsername: restrictedToUsername
              subscriptionId: subscriptionId
              updated: 2000-01-23T04:56:07.000+00:00
              startDate: 2000-01-23T04:56:07.000+00:00
              derivedProductName: derivedProductName
              derivedProvidedProducts:
              - productId: productId
                productName: productName
              - productId: productId
                productName: productName
            id: id
            href: href
            updated: 2000-01-23T04:56:07.000+00:00
            consumer:
              name: name
              id: id
              href: href
              uuid: uuid
            startDate: 2000-01-23T04:56:07.000+00:00
        compliant: true
        status: status
      properties:
        status:
          type: string
        compliant:
          type: boolean
        date:
          format: date-time
          type: string
        nonCompliantRole:
          type: string
        nonCompliantSLA:
          type: string
        nonCompliantUsage:
          type: string
        nonCompliantServiceType:
          type: string
        compliantRole:
          additionalProperties:
            items:
              $ref: '#/components/schemas/EntitlementDTO'
            type: array
            uniqueItems: true
          type: object
        compliantAddOns:
          additionalProperties:
            items:
              $ref: '#/components/schemas/EntitlementDTO'
            type: array
            uniqueItems: true
          type: object
        compliantSLA:
          additionalProperties:
            items:
              $ref: '#/components/schemas/EntitlementDTO'
            type: array
            uniqueItems: true
          type: object
        compliantUsage:
          additionalProperties:
            items:
              $ref: '#/components/schemas/EntitlementDTO'
            type: array
            uniqueItems: true
          type: object
        nonCompliantAddOns:
          items:
            type: string
          type: array
          uniqueItems: true
        compliantServiceType:
          additionalProperties:
            items:
              $ref: '#/components/schemas/EntitlementDTO'
            type: array
            uniqueItems: true
          type: object
        reasons:
          items:
            type: string
          type: array
          uniqueItems: true
    UeberCertificateDTO:
      allOf:
      - $ref: '#/components/schemas/AbstractCertificateDTO'
      - properties:
          owner:
            $ref: '#/components/schemas/NestedOwnerDTO'
        type: object
      description: Represents an ueber certificate
      example:
        owner:
          displayName: displayName
          id: id
          href: href
          contentAccessMode: contentAccessMode
          key: key
        serial:
          serial: 1
          created: 2000-01-23T04:56:07.000+00:00
          expiration: 2000-01-23T04:56:07.000+00:00
          id: 6
          revoked: true
          updated: 2000-01-23T04:56:07.000+00:00
        created: 2000-01-23T04:56:07.000+00:00
        cert: cert
        id: id
        updated: 2000-01-23T04:56:07.000+00:00
        key: key
    UserDTO:
      allOf:
      - $ref: '#/components/schemas/TimestampedEntity'
      - properties:
          id:
            example: ff808081554a3e4101554a3e9033005d
            type: string
          username:
            example: admin
            type: string
          password:
            example: secret_banana
            type: string
            writeOnly: true
          superAdmin:
            default: false
            example: true
            type: boolean
        type: object
      description: Represents user information for a given user
      example:
        password: secret_banana
        created: 2000-01-23T04:56:07.000+00:00
        id: ff808081554a3e4101554a3e9033005d
        updated: 2000-01-23T04:56:07.000+00:00
        superAdmin: true
        username: admin
    UpstreamConsumerDTO:
      allOf:
      - $ref: '#/components/schemas/TimestampedEntity'
      - properties:
          id:
            type: string
          uuid:
            type: string
          name:
            type: string
          apiUrl:
            type: string
          webUrl:
            type: string
          ownerId:
            type: string
          contentAccessMode:
            type: string
          type:
            $ref: '#/components/schemas/ConsumerTypeDTO'
          idCert:
            $ref: '#/components/schemas/CertificateDTO'
        type: object
      description: DTO representing an upstream consumer
      example:
        idCert:
          serial:
            serial: 1
            created: 2000-01-23T04:56:07.000+00:00
            expiration: 2000-01-23T04:56:07.000+00:00
            id: 6
            revoked: true
            updated: 2000-01-23T04:56:07.000+00:00
          created: 2000-01-23T04:56:07.000+00:00
          cert: cert
          id: id
          updated: 2000-01-23T04:56:07.000+00:00
          key: key
        apiUrl: apiUrl
        created: 2000-01-23T04:56:07.000+00:00
        webUrl: webUrl
        name: name
        id: id
        contentAccessMode: contentAccessMode
        ownerId: ownerId
        type:
          created: 2000-01-23T04:56:07.000+00:00
          manifest: true
          id: id
          label: label
          updated: 2000-01-23T04:56:07.000+00:00
        updated: 2000-01-23T04:56:07.000+00:00
        uuid: uuid
    UpstreamConsumerDTOArrayElement:
      allOf:
      - $ref: '#/components/schemas/TimestampedEntity'
      - properties:
          id:
            type: string
          uuid:
            type: string
          name:
            type: string
          apiUrl:
            type: string
          webUrl:
            type: string
          ownerId:
            type: string
          contentAccessMode:
            type: string
          type:
            $ref: '#/components/schemas/ConsumerTypeDTO'
        type: object
      description: |
        Represents a reduced view of a upstream consumer (excluding identify certificate)
      example:
        apiUrl: apiUrl
        created: 2000-01-23T04:56:07.000+00:00
        webUrl: webUrl
        name: name
        id: id
        contentAccessMode: contentAccessMode
        ownerId: ownerId
        type:
          created: 2000-01-23T04:56:07.000+00:00
          manifest: true
          id: id
          label: label
          updated: 2000-01-23T04:56:07.000+00:00
        updated: 2000-01-23T04:56:07.000+00:00
        uuid: uuid
    importManifestAsync_request:
      properties:
        input:
          format: binary
          type: string
    AsyncJobStatusDTO_allOf_resultData:
      description: May contain a single message or job data as JSON
      example: Refresh completed successfully!
      type: object
  securitySchemes:
    basicAuth:
      scheme: basic
      type: http
    ActivationKey:
      in: query
      name: activation-key
      type: apiKey
    ActivationKeyOwner:
      in: query
      name: owner
      type: apiKey
